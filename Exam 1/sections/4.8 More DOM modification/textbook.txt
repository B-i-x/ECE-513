Accessing nodes
Accessing nodes
2024-10-12, 4:47 p.m.
2024-10-12, 4:47 p.m.
let html = document.documentElement; html
let html = document.documentElement; html
parentNode
parentNode
childNodes
childNodes
childNodes
childNodes
children
children
nextElementSibling
nextElementSibling
previousElementSibling
previousElementSibling
childNodes children
childNodes children
children
children
childNodes
childNodes
title>
title>
geologic earth:</p>
geologic earth:</p>
<li><a href="https://en.wikipedia.org/wiki/Hadean">a></
<li><a href="https://en.wikipedia.org/wiki/Hadean">a></
li>
li>
<li><a href="https://en.wikipedia.org/wiki/Archean">Archean</
<li><a href="https://en.wikipedia.org/wiki/Archean">Archean</
a></li>
a></li>
<li><a href="https://en.wikipedia.org/wiki/
<li><a href="https://en.wikipedia.org/wiki/
Proterozoic">Proterozoic</a></li>
Proterozoic">Proterozoic</a></li>
<li><a href="https://en.wikipedia.org/wiki/
<li><a href="https://en.wikipedia.org/wiki/
Phanerozoic">Phanerozoic</a></li>
Phanerozoic">Phanerozoic</a></li>
</ol>
</ol>
</body>
</body>
</html>
</html>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
98 of 159 2024-10-12, 4:47 p.m.
98 of 159 2024-10-12, 4:47 p.m.
The JavaScript object document.documentE/ement is the root of the DOM tree. Ex:
The JavaScript object document.documentE/ement is the root of the DOM tree. Ex:
assigns the variable with the HTML
assigns the variable with the HTML
document's root node.
document's root node.
DOM nodes have properties for accessing a node's parent, children, and siblings:
DOM nodes have properties for accessing a node's parent, children, and siblings:
1. The parentNode property refers to the node's parent. Ex: In the figure below, the ol node is the
1. The parentNode property refers to the node's parent. Ex: In the figure below, the ol node is the
for all Ii nodes.
for all Ii nodes.
2. The childNodes property is an array-like collection of objects for each of the node's children.
2. The childNodes property is an array-like collection of objects for each of the node's children.
Ex: In the figure below, the Ii nodes and whitespace text nodes are the ol node's
Ex: In the figure below, the Ii nodes and whitespace text nodes are the ol node's
3. The children property is similar to the except the array contains only element
3. The children property is similar to the except the array contains only element
nodes and no text nodes. Ex: In the figure below, the Ii nodes are the ol node's
nodes and no text nodes. Ex: In the figure below, the Ii nodes are the ol node's
4. The nextE/ementSibling property refers to the element node with the same parent following
4. The nextE/ementSibling property refers to the element node with the same parent following
the current node in the document. Ex: In the figure below, the ol node is the p node's
the current node in the document. Ex: In the figure below, the ol node is the p node's
5. The previousE/ementSibling property refers to the element node with the same parent
5. The previousE/ementSibling property refers to the element node with the same parent
preceding the current node in the document. Ex: In the figure below, the p node is the ol
preceding the current node in the document. Ex: In the figure below, the p node is the ol
node's
node's
A common error is to use the property instead of the property when
A common error is to use the property instead of the property when
iterating through the items of a list. The property only contains the list items, while the
iterating through the items of a list. The property only contains the list items, while the
property also contains the whitespace text nodes between the list items.
property also contains the whitespace text nodes between the list items.
Figure 4.8.1: Example HTML for node properties.
Figure 4.8.1: Example HTML for node properties.
< ! DOCTYPE h tml >
< ! DOCTYPE h tml >
<html lang= "en" >
<html lang= "en" >
<head>
<head>
<meta charset="UTF-8" >
<meta charset="UTF-8" >
<title>Geol ogi c eons of earth </ti
<title>Geol ogi c eons of earth </ti
</head>
</head>
<body>
<body>
<p >The four geol ogi c eons on eart
<p >The four geol ogi c eons on eart
<ol>
<ol>
/Hadean ' >Hadean</ a >< /
/Hadean ' >Hadean</ a >< /
!i..rchean" >Arc hean</
!i..rchean" >Arc hean</
</title>
</title>
Languages development.</p>
Languages development.</p>
content</li>
content</li>
presentation</li>
presentation</li>
JavaScript functionality</li>
JavaScript functionality</li>
].children[1]
].children[1]
document.documentElement.children[1].parentNode
document.documentElement.children[1].parentNode
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
99 of 159 2024-10-12, 4:47 p.m.
99 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION
I PARTICIPATION
ACTIVITY
ACTIVITY
4.8.1 : Using nextElementSibling, previousElementSibling, and
4.8.1 : Using nextElementSibling, previousElementSibling, and
parentNode.
parentNode.
Refer to the HTML below.
Refer to the HTML below.
< ! DOCTYPE html >
< ! DOCTYPE html >
<html lang="en">
<html lang="en">
<head>
<head>
<meta charset="UTF-8">
<meta charset="UTF-8">
<title>Web deve l opmen t l a nguages<
<title>Web deve l opmen t l a nguages<
</head>
</head>
<body>
<body>
<p >La nguages used in web deve l opm
<p >La nguages used in web deve l opm
<ul>
<ul>
<li id="item-l" >HTML for conte
<li id="item-l" >HTML for conte
<li id="item-2" >CSS for presen
<li id="item-2" >CSS for presen
<li id="item-3" >JavaScri pt for
<li id="item-3" >JavaScri pt for
</ul>
</ul>
</body>
</body>
</html>
</html>
Select the HTML element or node referenced by the given property.
Select the HTML element or node referenced by the given property.
7) document . documentElement
7) document . documentElement
0 html
0 html
0 body
0 body
0 meta
0 meta
2) document . documentElement . children [ l ]
2) document . documentElement . children [ l ]
0 html
0 html
0 body
0 body
0 title
0 title
3) document . documentElement . c hi l d ren [ l ] .
3) document . documentElement . c hi l d ren [ l ] .
0 p
0 p
0 ul
0 ul
0 One of the Ii elements
0 One of the Ii elements
4)
4)
0 html
0 html
0 body
0 body
□
□
0
0
0
0
0
0
0
0
previousElementSibling
previousElementSibling
parentNode
parentNode
nextElementSibling
nextElementSibling
childNodes[0]
childNodes[0]
ol = document.getElementsByTagName("ol")[0];
ol = document.getElementsByTagName("ol")[0];
li = ol.getElementsByTagName("li")[0];
li = ol.getElementsByTagName("li")[0];
ol.appendChild(li);
ol.appendChild(li);
ol = document.getElementsByTagName("ol")[0];
ol = document.getElementsByTagName("ol")[0];
items = ol.getElementsByTagName("li");
items = ol.getElementsByTagName("li");
ol.insertBefore(items[0], items[3]);
ol.insertBefore(items[0], items[3]);
removeChild()
removeChild()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
100 of 159 2024-10-12, 4:47 p.m.
100 of 159 2024-10-12, 4:47 p.m.
0 title
0 title
5) document . getEl ementByi d ( 11 item-2 11 ) • pn
5) document . getEl ementByi d ( 11 item-2 11 ) • pn
0 Ii with id item-1
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-2
0 Ii with id item-3
0 Ii with id item-3
6) document . getElementByid ( 11 item-2 11 ) • pa1
6) document . getElementByid ( 11 item-2 11 ) • pa1
0 Ii with id item-1
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-2
0 ul
0 ul
7) document . getEl ementByi d ( 11 i tem-l 11 ) . ne)
7) document . getEl ementByi d ( 11 i tem-l 11 ) . ne)
0 Ii with id item-1
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-2
0 Ii with id item-3
0 Ii with id item-3
8) document . querySel ector ( 11ul 11 ) • c h i l dNoc
8) document . querySel ector ( 11ul 11 ) • c h i l dNoc
0 Ii with id item-1
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-2
0 text node
0 text node
Modifying the DOM structure
Modifying the DOM structure
Various DOM node methods can change a node's location within the DOM or remove nodes:
Various DOM node methods can change a node's location within the DOM or remove nodes:
0
0
0
0
0
0
0
0
• The appendChild() method appends a DOM node to the object's child nodes. The code below
• The appendChild() method appends a DOM node to the object's child nodes. The code below
moves the ordered list's first list item to the last list item of the same ordered list.
moves the ordered list's first list item to the last list item of the same ordered list.
• The insertBefore() method inserts a DOM node as a child node before an object's existing
• The insertBefore() method inserts a DOM node as a child node before an object's existing
child node. The code below moves the ordered list's first list item before the fourth list item.
child node. The code below moves the ordered list's first list item before the fourth list item.
• The removeChild() method removes a node from the object's children. The most common
• The removeChild() method removes a node from the object's children. The most common
usage pattern is to get a DOM node, n, and call on n's parent passing n as
usage pattern is to get a DOM node, n, and call on n's parent passing n as
n.parentNode.removeChild(n)
n.parentNode.removeChild(n)
document
document
document.createElement("p")
document.createElement("p")
document
document
document.createTextNode("Hello there!")
document.createTextNode("Hello there!")
x.cloneNode(true) x.cloneNode(false)
x.cloneNode(true) x.cloneNode(false)
cloneNode()
cloneNode()
appendChild() insertBefore()
appendChild() insertBefore()
script>
script>
"li");
"li");
"Blue");
"Blue");
"ol");
"ol");
querySelectorAll("li");
querySelectorAll("li");
true);
true);
itemNodes[2]);
itemNodes[2]);
1. Red
1. Red
2. Green
2. Green
body
body
ol
ol
li li
li li
Red Green
Red Green
li
li
Blue
Blue
colorList
colorList
Blue
Blue
clonedNode
clonedNode
li
li
Red
Red
3. Red
3. Red
4. Blue
4. Blue
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
101 of 159 2024-10-12, 4:47 p.m.
101 of 159 2024-10-12, 4:47 p.m.
an argument. Ex:
an argument. Ex:
The following methods are for creating new nodes or duplicating existing nodes:
The following methods are for creating new nodes or duplicating existing nodes:
• The method createE/ement() returns a new element node, created from a string
• The method createE/ement() returns a new element node, created from a string
argument that names the HTML element. Ex: creates a
argument that names the HTML element. Ex: creates a
new paragraph node.
new paragraph node.
• The method createTextNode() returns a new text node containing the text
• The method createTextNode() returns a new text node containing the text
specified by a string argument. Ex: • -- -- - -
specified by a string argument. Ex: • -- -- - -
creates the text node with "Hello there!", which can then be appended to an element node.
creates the text node with "Hello there!", which can then be appended to an element node.
• The node method cloneNode() returns an identical copy of a DOM node. The method's
• The node method cloneNode() returns an identical copy of a DOM node. The method's
boolean argument indicates whether the method should also clone the node's children. Ex:
boolean argument indicates whether the method should also clone the node's children. Ex:
creates an identical tree rooted at x, but
creates an identical tree rooted at x, but
creates only a single node identical to x. A common error is to forget to modify any id
creates only a single node identical to x. A common error is to forget to modify any id
attributes in the cloned tree. The method does not ensure that new nodes have
attributes in the cloned tree. The method does not ensure that new nodes have
unique id attributes.
unique id attributes.
After creating or cloning a node, the node does not appear in the webpage until the node is
After creating or cloning a node, the node does not appear in the webpage until the node is
attached to the DOM tree. A programmer must use or to add
attached to the DOM tree. A programmer must use or to add
the new node to the existing DOM tree. I PARTICIPATION I . . ACTIVITY 4.8.2: Modifying the DOM structure.
the new node to the existing DOM tree. I PARTICIPATION I . . ACTIVITY 4.8.2: Modifying the DOM structure.
example.html
example.html
< !DOCTYPE HTML>
< !DOCTYPE HTML>
<html l ang= "en">
<html l ang= "en">
<title>DOM Example</ title>
<title>DOM Example</ title>
<script src="script.js" defer>< / script
<script src="script.js" defer>< / script
<body>
<body>
<ol>
<ol>
<li>Red</ li>
<li>Red</ li>
<li>Green</ li>
<li>Green</ li>
</ol >
</ol >
</ body>
</ body>
</ html>
</ html>
script.js
script.js
l et listNode = document . createElement ("li
l et listNode = document . createElement ("li
l et textNode = document . createTextNode ("B
l et textNode = document . createTextNode ("B
l istNode . appendChild (textNode ) ;
l istNode . appendChild (textNode ) ;
l et colorList = document . querySelector ("o
l et colorList = document . querySelector ("o
col orLi st . appendChild (li stNode ) ;
col orLi st . appendChild (li stNode ) ;
l e t itemNodes = col orLi st . querySe l ectorAl
l e t itemNodes = col orLi st . querySe l ectorAl
l et c l onedNode = i temNodes [ 0 ] . c l oneNode (t
l et c l onedNode = i temNodes [ 0 ] . c l oneNode (t
col orLi st . i nsertBefore (c l onedNode , itemNo
col orLi st . i nsertBefore (c l onedNode , itemNo
D
D
□
□
□
□
□ □ □ □
□ □ □ □
0000
0000
clonedr ode
clonedr ode
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
102 of 159 2024-10-12, 4:47 p.m.
102 of 159 2024-10-12, 4:47 p.m.
Animation content:
Animation content:
The following code is displayed.
The following code is displayed.
example.html
example.html
<!DOCTYPE HTML>
<!DOCTYPE HTML>
<html lang="en">
<html lang="en">
<title>DOM Example</title>
<title>DOM Example</title>
<script src="script.js" defer></script>
<script src="script.js" defer></script>
<body>
<body>
<ol>
<ol>
<li>Red</li>
<li>Red</li>
<li>Green</li>
<li>Green</li>
</ol>
</ol>
</body>
</body>
</html>
</html>
script.js
script.js
let listNode = document.createElement("li");
let listNode = document.createElement("li");
let textNode = document.createTextNode("Blue");
let textNode = document.createTextNode("Blue");
listNode.appendChild(textNode);
listNode.appendChild(textNode);
let colorlist = document.querySelector("ol");
let colorlist = document.querySelector("ol");
colorlist.appendChild(listNode);
colorlist.appendChild(listNode);
let itemNodes = colorlist.querySelectorAll("li");
let itemNodes = colorlist.querySelectorAll("li");
let clonedNode = itemNodes[0].cloneNode(true);
let clonedNode = itemNodes[0].cloneNode(true);
colorlist.insertBefore( cloned Node, itemNodes[2]);
colorlist.insertBefore( cloned Node, itemNodes[2]);
Step 1: The following lines of code are highlighted.
Step 1: The following lines of code are highlighted.
<ol>
<ol>
<li>Red</li>
<li>Red</li>
<li>Green</li>
<li>Green</li>
</ol>
</ol>
A "body" node is created as the head node. An "ol" is connected to the "body" node, and is
A "body" node is created as the head node. An "ol" is connected to the "body" node, and is
connected to two "Ii" listNode objects. The textNode objects "Red" and "Green" are attached to
connected to two "Ii" listNode objects. The textNode objects "Red" and "Green" are attached to
their respective "Ii" listNodes.
their respective "Ii" listNodes.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
103 of 159 2024-10-12, 4:47 p.m.
103 of 159 2024-10-12, 4:47 p.m.
The following ordered list is defined.
The following ordered list is defined.
1. Red
1. Red
2. Green
2. Green
Step 2: The line of code reading "let listNode = document.createElement("li");" is highlighted, and a
Step 2: The line of code reading "let listNode = document.createElement("li");" is highlighted, and a
node labeled "Ii" is created to represent the listNode. Next, the line of code reading "let textNode =
node labeled "Ii" is created to represent the listNode. Next, the line of code reading "let textNode =
document.createTextNode("Blue");" is highlighted, and a node labeled "blue" is created to
document.createTextNode("Blue");" is highlighted, and a node labeled "blue" is created to
represent the textNode. Next, the line of code reading "listNode.appendChild(textNode);" is
represent the textNode. Next, the line of code reading "listNode.appendChild(textNode);" is
highlighted, and the "blue" node is attached to the "Ii" node.
highlighted, and the "blue" node is attached to the "Ii" node.
Step 3: The following lines of code are highlighted.
Step 3: The following lines of code are highlighted.
let colorlist = document.querySelector("ol");
let colorlist = document.querySelector("ol");
colorlist.appendChild(listNode);
colorlist.appendChild(listNode);
The listNode created in the previous step is connected to the "ol" node. The browser now reads
The listNode created in the previous step is connected to the "ol" node. The browser now reads
the following.
the following.
1. Red
1. Red
2. Green
2. Green
3. Blue
3. Blue
Step 4: The following lines of code are highlighted.
Step 4: The following lines of code are highlighted.
let itemNodes = colorlist.querySelectorAll("li");
let itemNodes = colorlist.querySelectorAll("li");
let clonedNode = itemNodes[O].cloneNode(true);
let clonedNode = itemNodes[O].cloneNode(true);
A copy is created of the "Ii" node and its child "Red" node.
A copy is created of the "Ii" node and its child "Red" node.
Step 5: The line of code reading "colorlist.insertBefore(clonedNode, itemNodes[2]);" is
Step 5: The line of code reading "colorlist.insertBefore(clonedNode, itemNodes[2]);" is
highlighted. The cloned "Ii" and "Red" nodes are placed between the "Green" and "Blue" nodes. The
highlighted. The cloned "Ii" and "Red" nodes are placed between the "Green" and "Blue" nodes. The
browser is updated to read the following.
browser is updated to read the following.
1. Red
1. Red
2. Green
2. Green
3. Red
3. Red
4. Blue
4. Blue
Animation captions:
Animation captions:
1. The HTML file defines an ordered list with two colors.
1. The HTML file defines an ordered list with two colors.
2. After creating an element node and a text node, the text node is appended to the element
2. After creating an element node and a text node, the text node is appended to the element
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
104 of 159 2024-10-12, 4:47 p.m.
104 of 159 2024-10-12, 4:47 p.m.
node. listNode becomes textNode's parent.
node. listNode becomes textNode's parent.
3. appendChild() appends listNode to colorlist's child nodes. Since listNode is now attached
3. appendChild() appends listNode to colorlist's child nodes. Since listNode is now attached
to the DOM, the "Blue" list item appears in the browser.
to the DOM, the "Blue" list item appears in the browser.
4. The cloneNode() method creates a copy of itemNodes[0] and child, duplicating the "Red" list
4. The cloneNode() method creates a copy of itemNodes[0] and child, duplicating the "Red" list
item.
item.
5. insertBefore() inserts the cloned "Red" list item before the "Blue" list item, which changes
5. insertBefore() inserts the cloned "Red" list item before the "Blue" list item, which changes
the DOM.
the DOM.
I PARTICIPATION I . . ACTIVITY 4.8.3: Adding and removing DOM nodes.
I PARTICIPATION I . . ACTIVITY 4.8.3: Adding and removing DOM nodes.
If unable to drag and drop, refresh the page.
If unable to drag and drop, refresh the page.
insertBefore() removeChild() appendChild()
insertBefore() removeChild() appendChild()
A method on a DOM node which
A method on a DOM node which
moves one DOM node to be a
moves one DOM node to be a
previous sibling to another DOM
previous sibling to another DOM
node.
node.
A method on a DOM node that
A method on a DOM node that
deletes a DOM node from the DOM
deletes a DOM node from the DOM
tree.
tree.
A method on a DOM node that turns
A method on a DOM node that turns
another DOM node into the first
another DOM node into the first
DOM node's last child.
DOM node's last child.
Reset
Reset
I PARTICIPATION I . ACTIVITY 4.8.4: Creating new DOM nodes.
I PARTICIPATION I . ACTIVITY 4.8.4: Creating new DOM nodes.
1) Which DOM node method creates a
1) Which DOM node method creates a
copy of the node and the node's
copy of the node and the node's
children?
children?
0 createElement()
0 createElement()
0 createTextNode()
0 createTextNode()
□
□
□
□
0
0
document
document
zyBooks
zyBooks
105 of 159
105 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
0 cloneNode(true)
0 cloneNode(true)
0 cloneNode(false)
0 cloneNode(false)
2) Which method creates a
2) Which method creates a
new DOM node for a specific HTML
new DOM node for a specific HTML
element?
element?
0 create Element()
0 create Element()
0 createTextNode()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(true)
0 cloneNode(false)
0 cloneNode(false)
3) Which document method creates a
3) Which document method creates a
new DOM node to hold content?
new DOM node to hold content?
0 create Element()
0 create Element()
0 createTextNode()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(true)
0 cloneNode(false)
0 cloneNode(false)
4) Which DOM node method creates a
4) Which DOM node method creates a
copy of another DOM node, but not
copy of another DOM node, but not
the node's children?
the node's children?
0 create Element()
0 create Element()
0 createTextNode()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(true)
0 cloneNode(false)
0 cloneNode(false)
1 1~;1~\~~•e I 4.8.1 • Manipulating the Document Object Model.
1 1~;1~\~~•e I 4.8.1 • Manipulating the Document Object Model.
570104.2065416.qx3zqy7
570104.2065416.qx3zqy7
Start
Start
Assign newElement with a new Ii element. Assign textNode with a new textNode
Assign newElement with a new Ii element. Assign textNode with a new textNode
containing "Alex".
containing "Alex".
[ HTML I JavaScript j
[ HTML I JavaScript j
1 <ul id="list">
1 <ul id="list">
2 <li> Jan</li>
2 <li> Jan</li>
3 <li> Ron </li>
3 <li> Ron </li>
0
0
0
0
0
0
□
□
2024-10-12, 4:47 p.m.
2024-10-12, 4:47 p.m.
zyBooks
zyBooks
106 of 159
106 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 2 3
1 2 3
Check Next
Check Next
View your last submission v
View your last submission v
Exploring further:
Exploring further:
• Document Object Model (DOM). from MDN
• Document Object Model (DOM). from MDN
