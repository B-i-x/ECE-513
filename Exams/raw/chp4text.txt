Date new
, 22);
7, 28, 0);
Thu Apr 18 2019 15:26:13 GMT-0500 (Central Daylight Time)
Central Standard Time)
Fri Feb 22 1732 00:00:00 GMT-0600 (Central Standard Time)
Central Daylight Time)
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
1 of 159 2024-10-12, 4:47 p.m.
4.1 Date object
Date object
A Date object represents a single moment in time, based on the number of milliseconds since the
Unix Epoch (January 1, 1970 UTC). UTC (Coordinated Universal Time), also known as GMT
(Greenwich Mean Time), is a 24-hour time standard. The object is created with the
operator and a constructor. A constructor is a function that creates an instance of an object. I PARTICIPATION I . ACTIVITY 4.1.1: Date obJect constructor.
l et currDateTime = new Date ();
consol e . l og (currDateTime );
l et oneSecPastEpoch = new Date (l000 );
consol e . l og (oneSecPastEpoch);
II Feb 22, 1732
l et georgeBi rthday = new Date (l732 , 1
consol e . l og (georgeBi rthday );
II Oc t 21, 2 035 at 7: 28 : 00
l et theFuture = new Date (2035 , 9 , 21 ,
consol e . l og (theFuture );
Cer
Wed Dec 31 1969 18:00:01 GMT-0600 (CE
Cen·
Sun Oct 21 2035 07:28:00 GMT-0500 (Cer
Animation content:
The following code is displayed:
let currDateTime = new Date();
console.log(currDateTime);
let oneSecPastEpoch = new Date(1000);
console.log(oneSecPastEpoch);
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
2 of 159 2024-10-12, 4:47 p.m.
II Feb 22, 1732
let georgeBirthday = new Date(1732, 1, 22);
console.log(georgeBirthday);
II Oct 21, 2035 at 7:28:00
let theFuture = new Date(2035, 9, 21, 7, 28, 0);
console.log(theFuture);
Step 1 runs the following code:
let currDateTime = new Date();
Step 2 runs the following code:
console.log(currDateTime);.
The following line is displayed in the console:
Thu Apr 18 2019 15:26:13 GMT-0500 (Central Daylight Time).
Step 3 runs the following code:
let oneSecPastEpoch = new Date(1000);
Step 4 runs the following code:
console.log(georgeBirthday);.
The following line is displayed in the console:
Wed Dec 31 1969 18:00:01 GMT-0600 (Central Standard Time).
Step 5 runs the following code:
let georgeBirthday = new Date(l 732, 1, 22);
Step 6 runs the following code:
console.log(georgeBirthday);
The following line is displayed in the console:
Fri Feb 22 1732 00:00:00 GMT-0600 (Central Standard Time).
Step 7 runs the following code:
let theFuture = new Date(2035, 9, 21, 7, 28, 0);
console.log(theFuture);
The following line is displayed in the console:
Sun Oct 21 2035 07:28:00 GMT-0500 (Central Daylight Time).
Animation captions:
1. Initialize the variable currDateTime to the current date and time using the Date constructor.
2. Display the currDateTime variable, which is in the local time zone. Central Daylight Time is 5
Date Date
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
3 of 159 2024-10-12, 4:47 p.m.
hours before Greenwich Mean Time (GMT).
3. Initialize the variable oneSecPastEpoch to 1000 milliseconds past Jan 1, 1970 using the
Date constructor.
4. Central Standard Time is 6 hours before GMT. Daylight time (called Daylight Saving Time) is
one hour different than standard time because clocks are turned forward one hour.
5. Initialize the variable georgeBirthday to Feb 22, 1732. The month parameter ranges from
0-11, so 1 = Feb.
6. georgeBirthday falls on a Friday and is 6 hours before GMT.
7. Initialize the variable theFuture to Oct 21, 2035 at 7:28:00. theFuture date falls on a Sunday.
I PARTICIPATION I . ACTIVITY 4.1.2: Date obJect constructor.
1) The Date constructor must be passed
at least one argument.
0 True
0 False
2) The following code initializes x to
December 25, 2017.
let x = new Date (2017 , 12 ,
25 );
0 True
0 False
3) The code below displays the same
string, regardless of the local time
zone.
let x = new Date (2016 , 5 , 1 ,
15 , 30 , 45 );
consol e . l og (x );
0 True
0 False
Date methods
The object provides a number of methods to get and set
□
0
0
0
properties.
let day = new Date(2016, 0, 30);
day.getDate(); // 30
day.setDate(21); // 30 -> 21
let day = new Date(2016, 0, 30);
day.getDay(); // 6 = Saturday
let day = new Date(2016, 0, 30);
day.getFullYear(); // 2016
day.setFullYear(2017); // 2016 -
> 2017
let day = new Date(2016, 0, 30,
5, 0);
day.getHours(); // 5
day.setHours(2); // 5 -> 2
let day = new Date(2016, 0, 1, 5,
20, 10, 250);
day.getMilliseconds(); // 250
day.setMilliseconds(500); // 250
-> 500
let day = new Date(2016, 0, 30,
5, 20);
day.getMinutes(); // 20
day.setMinutes(35); // 20 -> 35
let day = new Date(2016, 0, 30,
5, 20);
day.getMonth(); // 0
day.setMonth(3); // 0 (Jan) -> 3
(Apr)
let day = new Date(2016, 0, 1, 5,
20, 10, 250);
day.getSeconds(); // 10
day.setSeconds(45); // 10 -> 45
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
4 of 159 2024-10-12, 4:47 p.m.
Table 4.1.1: Date object getter and setter methods.
Method Description Example
getDate()
Gets or sets the day
relative to the current
setDate()
set month
L l ) ; /1 .:JU - > L .L
getDay()
Returns the day of the
week (0-6)
getFul/Year() Gets or sets the 4 digit
setFul/Year() year
getHours() Gets or sets the hour
setHours() (0-23)
getMilliseconds() Gets or sets the
setMilliseconds() milliseconds (0-999)
getMinutes() Gets or sets the
setMinutes() minutes (0-59)
getMonth() Gets or sets the month
setMonth() (0-1 1)
ua-c.e \ <:'.U l b , u , 1 , '::! ,
getSeconds() Gets or sets the
setSeconds() seconds (0-59)
let day = new Date(2016, 0, 30,
5, 20);
day.getTime(); //
1454152800000
day.setTime(1454153700000); //
Sat Jan 30 2016 05:35:00 GMT-0600
days before Sonia Sotomayor
26443 days before Sonia Sotomayor
getDifferenceInDays(person1Date.getTime() - person2Date.getTime())
6212 after Sonia Sotomayor
after Sonia Sotomayor
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
5 of 159 2024-10-12, 4:47 p.m.
Method Description Example
Gets or sets the
getTime() number of
setTime() milliseconds since Jan
1, 1970, 00:00:00 UTC
I PARTICIPATION I . . . ACTIVITY 4.1.3: Practice with the Date obJect.
The notablePeople map contains a list of some notable individuals and birthdays. Ex:
notablePeople ["Elvis Presley" J contains Elvis' birthday, which is Jan 8, 1935.
1. The first for-in loop displays each person's name and birthday, but the format of the
birthday is too wordy. Change the output format to MM/DD/YYYY. Ex: Elvis Presley:
1/8/1935.
2. Add a for-in loop to display each person born before Sonia Sotomayor and the
rounded number of days difference in birth day. Ex:
Elvis Presley was born 7108 da}
Franklin D. Roosevelt was born
o The getDifferencelnDays() utility function is provided in the code below. When
passed a time difference in milliseconds, the function returns the rounded
number of days difference. Ex:
getDifferenceinDays(person:
3. Add a for-in loop to display each person born after Sonia Sotomayor and the
rounded number of days difference in birth day. Ex:
Elon Musk was born 6212 days af
Steve Jobs was born 244 days af
□
0700 0700 0728 0700 0700 0700 0728 0600 0700 0700 zyBooks https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
canst notablePeople = {
"Elvis Presley" : new Date (1935,
"Sonia Sotomayor" : new Date (1954,
"Franklin D. Roosevelt" : new Date (1882,
"Elon Musk" : new Date (1971,
"Roger Staubach" : new Date (1942,
"Steve Jobs" : new Date (1955,
"Albert Einstein" : new Date (1879,
"Isaac Asimov" : new Date (1919,
"Jada Pinkett Smith" : new Date (1971,
"Grace Hopper" : new Date (1906,
};
II Display all names and birthdays
for (let person in notablePeople ) {
0, 8),
5, 25),
0, 30),
5, 28),
1, 5),
1, 24),
2, 14),
9, 4),
8, 18),
11, 9)
16 console .log( person + ": " + notablePeople [ person ]);
17 }
HI
Run JavaScript Reset code
Your console output
Elvis Presley: Tue Jan 08 1935 00:00:00 GMT-0700 (Mountain Standard Time)
Sonia Sotomayor: Fri Jun 25 1954 00:00:00 GMT-0700 (Mountain Standard Time)
Franklin D. Roosevelt: Mon Jan 30 1882 00:00:00 GMT-0728 (Mountain Standard Time)
Elon Musk: Mon Jun 28 1971 00:00:00 GMT-0700 (Mountain Standard Time)
Roger Staubach: Thu Feb 05 1942 00:00:00 GMT-0700 (Mountain Standard Time)
Steve Jobs: Thu Feb 24 1955 00:00:00 GMT-0700 (Mountain Standard Time)
Albert Einstein: Fri Mar 14 1879 00:00:00 GMT-0728 (Mountain Standard Time)
Isaac Asimov: Sat Oct 04 1919 00:00:00 GMT-0600 (Mountain Daylight Saving Time)
Jada Pinkett Smith: Sat Sep 18 1971 00:00:00 GMT-0700 (Mountain Standard Time)
Grace Hopper: Sun Dec 09 1906 00:00:00 GMT-0700 (Mountain Standard Time)
► View solution
I CHALLENGE I . ACTIVITY 4.1. 1: Using Date methods.
570104.2065416.qx3zqy7
Start
Update the variable updatedOn to the year 2015 using Date methods.
□
6 of 159 2024-10-12, 4:47 p.m.
zyBooks
7 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 2 3
Check Next
View your last submission v
Exploring further:
• Date object (MON).
4.2 Regular expressions
Introduction to regular expressions
Programs often need to determine if a string conforms to a pattern. Ex: A user is asked for their
phone number, and the program must recognize if the input is formatted like a phone number. Or
perhaps a program needs to search through a large collection of DNA sequences and replace
defective gene sequences with correct sequences. Developers use regular expressions to solve
these types of problems.
A regular expression (often shortened to regex) is a string pattern that is matched against a string.
Regular expressions may be defined with a RegExp object or between two forward slashes. Ex:
let re = new RegExp ( "abc") ; or more simply: let re = / abc/; The pattern "abc"
matches any string that contains "abc". Ex: "abcde" matches but "abd" does not. The RegExp
2024-10-12, 4:47 p.m.
str
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
8 of 159 2024-10-12, 4:47 p.m.
method test(str) returns true if the string matches the regex, and false otherwise.
I PARTICIPATION I . I I
ACTIVITY 4.2.1: Searching an array for the pattern ab.
l et words = [ "ban " , "babbl e " , "make " , "fl ab " ] ;
l et re = /ab/ ; babble matches!
words . forEach (function (word )
if (re . test (word )) {
console . l og (word + " mat che s !" );
}
} ) ;
Animation content:
The following code snippet is displayed.
let words = ["ban", "babble", "make", "flab"];
let re = /ab/;
words.forEach(function(word) {
if (re.test(word)) {
console.log(word +" matches!");
}
});
Step 5: The console displays: babble matches!
Step 6: The console displays: flab matches!
Animation captions:
flab matches!
1. Define a regular expression that matches words containing "ab".
2. Loop through each word in the words array.
3. re.test("ban") returns false because "ban" does not contain "ab".
4. re.test("babble") returns true because "babble" contains "ab".
5. re.test("make") returns false because "make" does not contain "ab".
6. re.test("flab") returns true because "flab" contains "ab".
□
/ab+c/
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
9 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION I . . ACTIVITY 4.2.2: Simple regular expressions.
1)
2)
3)
4)
The regex / run / matches the string
"pruning".
0 True
0 False
The regex / run / matches the string
"pruning".
0 True
0 False
What pattern would match the string
"Regular Expression"?
0 Exp
0 exp
What value is x?
let re = /regex/ ;
let x = re . test ("regular
expression " );
0 true
0 false
5) What value is x?
let re = /c\/1/ ;
let x = re . test ("abc/123 " );
0 true
0 fal se
Special characters
□
0
0
0
0
0
Regular expressions use characters with special meaning to create more sophisticated patterns.
The+ character matches the preceding character at least once. Ex: matches one "a"
followed by at least one "b" and one "c", so "abc" and "abbbbc" both match. However, "ac" does not
match because the required "b" is missing.
/(ab)+/
/ab*c/
/ab+c/
/ab?c/
/^ab/
/ab$/
/ab|cd/
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
10 of 159 2024-10-12, 4:47 p.m.
Parentheses are used in a regex to match consecutive characters with *, +, and ?. Ex:
matches one or more "ab", so "abab" and "abbb" both match. However, "acb" does not match
because the "c" is between "a" and "b".
Table 4.2.1: Selected special characters in regex patterns.
Character Description Example -
*
Match the preceding character O or matches "abc", "abbbbc",
more times. and "ac".
Match the preceding character 1 or matches "abc" and "abbbbc"
+
more times. but not "ac".
?
Match the preceding character O or matches "abc" and "ac", but
1 time. not "abbc".
A Match at the beginning. matches "abc" but not "cab".
$ Match at the end. matches "cab" but not "abc".
I
Match string on the left OR string on
matches "abc" and "bed".
the right.
I PARTICIPATION I . . ACTIVITY 4.2.3: Regex with special characters.
1) What string does NOT match the
regex /grea*t/?
0 gret
0 greaaat
0 grat
2) What string does NOT match the
regex /w+hy/?
0 why
0 hy
0 wwwwhy
□
0
0
/cat|bat|mat/
bbatt
at
mat
"boom"
/ba?oom/
/b\?oom/
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
11 of 159 2024-10-12, 4:47 p.m.
3) What string does NOT match the 0
regex ?
0
0
0
4) What regex matches the string 0
?
0
0
0 /bo?m/
5) What regex matches the string 0
"sleep like a baby"?
0 / " like/
0 /like$/
0 / " sleep/
6) What regex matches the string 0
"that's easy"?
0 /b?eas$/
0 /b?sy$/
0 /e+sy$/
7) What regex matches the string 0
"breaeak"?
0 /bre+a+k/
0 /br(ea)+k/
0 /erlbk/
8) What regex matches the string 0
"what?"?
0 /what?$/
0 /what\?$/
0 /what$/
/[aeiou]/ /[0-9]/ ^
[^str]
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
12 of 159 2024-10-12, 4:47 p.m.
Character ranges
Square brackets are used in regular expressions to match any character in a range of characters.
Ex: matches any vowel, and matches any digit. The not operator ( ) negates
a range. Ex:
I PARTICIPATION
ACTIVITY
matches any character except s, t, or r.
4.2.4: Regex with brackets.
Fill in the blank so the regex matches the description.
1) Match only the digits O through
5.
/ [ l /
Check Show answer
2) Match only the letters a through
f.
/ [ l /
Check Show answer
3) Match anything except a vowel
(a, e, i, o, u). List characters in
the regex alphabetically.
/ [ l /
Check Show answer
Metacharacters
A metacharacter is a character or character sequence that matches a class of characters in a
regular expression. Ex: The period character matches any single character except the newline
0
0
0
0
/ab.c/
/a.b/
/a\wb/
/a\Wb/
/a\db/
/a\Db/
/a\sb/
/a\Sb/
d\S\?/ /1\w+/ /\d\./
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
13 of 159 2024-10-12, 4:47 p.m.
character. So matches "able" and "ab2c", but not "abc" since the period must match a
single character. Other metacharacters begin with a backslash.
Table 4.2.2: Selected metacharacters in regex patterns.
Metacharacter Description Example
f---
. Match any single character except • matches 11aZb" and
newline. "ab".
Match any word character matches "aAb" and
\w
(alphanumeric and underscore). "a5b" but not "ab".
\W Match any non-word character.
matches 11a-b 11 and
11a b11 but not "aZb11
•
\d Match any digit.
matches 11a2b11 and
11a9b", but not "aZb".
\D Match any non-digit.
matches 11aZb" and
11a b11
, but not 11a2b".
Match any whitespace character (space, matches 11a b11 but
\s
tab, form feed, line feed) . not "a4b11
•
\S Match any non-whitespace character.
matches 11a!b11 but
not "ab".
I PARTICIPATION I . ACTIVITY 4.2.5: Metacharacters in regex. □
Match the regex to a string the regex matches.
If unable to drag and drop, refresh the page.
/9\d+/ /\W\W\D/ / 1\s\d/ /\
123break
/abc*/i i
/aBc/i
/^ab/m
/ab$/m
/ab/g
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
14 of 159 2024-10-12, 4:47 p.m.
923 break
break1 9
()break
5!?5break
a.break
Reset
Mode modifiers
A mode modifier (sometimes called a flag) changes how a regex matches and is placed after the
second slash in a regex. Ex: specifies the mode modifier , which performs caseinsensitive
matching.
Table 4.2.3: Selected mode modifiers.
Mode
Description
modifier
i
Case insensitivity - Pattern matches
upper or lowercase.
Multi line - Pattern with " and $
m match beginning and end of any line
in a multiline string.
Global search - Pattern is matched
g
repeatedly instead of just once.
I PARTICIPATION I . . ACTIVITY 4.2.6: Regex with mode modifiers.
1) What string does NOT match the
regex /great/i?
Example
matches "abc" and "AbC".
matches the second line
of "cab\nabc", and
matches the first line.
matches "ab" twice in
"cababc".
□
0
Great
greaT
TREAT
/ly$/m
quick
most
first
quick
mostly
first
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
15 of 159 2024-10-12, 4:47 p.m.
0
0
0
2) What string does NOT match the
regex ?
0
0
quick
0 most
firstly
3) How many times does the regex /
moo/ g find a match in "Moo the cow
mooed at the moon."
0 1
0 2
0 3
4) How many times does the regex /
moo/ gi find a match in "Moo the cow
mooed at the moon."
0 1
0 2
0 3
I ::~~~~;~•'10" I 4.2.7 Using regular expressions to identify secret messages.
.....
A criminal organization is using Reddit to communicate. To keep from being detected, the
criminals are posting comments that look innocuous but use a secret pattern.
• The pattern contains one or more digits followed by any number of characters,
followed by the word "star". Ex: "3stars" and "99 bright stars!" should both match.
0
0
0
□
posts
zyBooks
16ofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
• The letters in the word "star" may be separated by a single space. Ex: "1 blast ark"
and "1 st a r" should match.
• The comments can include upper or lowercase characters. Ex: "2 STar" should
match.
Loop through the Reddit posts in the array and output to the console the lines that
match the criminal's pattern. Use a single regex to identify the suspected posts. Hint: The
2nd, 3rd, and 5th lines should match the regex.
1 let posts = [
2 "The starting time was 6pm. ",
3 "If the 2nd string QB gets hurt, they have no starting QB." ,
4 "My email is sisl@yahoo.com. Last are first." ,
5 "Stare into the abyss 1 time." ,
6 "90210 for Beverly Hills. Thick as TAR."
7 ] ;
8
9 // Modify to output only Lines that match regex
10 posts .forEach(function( line ) {
11 console .log( line );
12 } ) ;
13
Run JavaScript Reset code
Your console output
The starting time was 6pm.
If the 2nd string QB gets hurt, they have no starting QB.
My email is sisl@yahoo.com. Last are first.
Stare into the abyss 1 time.
90210 for Beverly Hills. Thick as TAR.
► View solution
2024-10-12, 4:47 p.m.
"Raise console.log("match.");
}
zyBooks
17ofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
I CHALLENGE I . ACTIVITY 4.2.1: Regular expressions.
5707 04.2065416 qx3zqy7
Start
Assign re with a regular expression that contains a letter (a-z or A-Z).
1 let re/* Your solution goes here*/ ;
1 2 3
Check Next
View your last submission v
Determining what matches
4
The Reg Exp method exec(str) determines what part of the string str
matches a regex. The
exec() method returns a result array, or returns null
if the pattern does not match.
□
Figure 4.2.1: Using exec() to discover what characters matched the regex.
let re = / t.+r / ;
let result = re . exec ("Raise the bar
high." );
if (result === null ) {
c onso l e . l o g ("No match." );
2024-10-12, 4:47 p.m.
a(b+)c/
(b+)
exec()
/(B.+)'(.+day)/;
"When is Becky's
// Index 0 full string that matched
// Becky's birthday
// Index first remembered part
// Becky
// Index remembered part
// birthday
tweets
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
18 of 159 2024-10-12, 4:47 p.m.
Parentheses in a regex are used to "remember" different parts of a matched string. Ex: / ct
remembers anything matching , so "bbb" is remembered when applying the regex to "abbbc".
The remembered parts are accessible from the result array returned by . The first array
element is the complete matched string, and the following elements are the remembered parts. If
the regex contains no parentheses, the returned array contains only the complete string that
matches.
Figure 4.2.2: Remembering matches in a regex.
let re = / (B.+) 's (.+d a y )
let result = re . exec ("Whe
birthday? " );
II Index O is the full st
console . log (result [O] );
II Index 1 is the first r
console . log (result [l] );
II Index 2 is the second
console . log (result [2] );
I PARTICIPATION I . ACTIVITY 4.2.8: Extracting regex matches.
Twitter wants to know which hashtags are currently trending and what websites are
tweeted most often. A selection of tweets are given in the array. Create two
regular expressions that will:
1. Extract all the hashtags used in the tweets. A hashtag begins with a pound sign and
contains all following word characters. Ex: #myHashTag. Output each hashtag to
the console.
2. Extract all the domain names from the UR Ls in the tweets. A URL begins with a
protocol and double slash: "http://" or "https://". The domain name is the string of
characters immediately after the double slash and before the next forward slash(/).
□
https://en.wikipedia. org/wiki/URL
en. wikipedia. org
.+? +
& HardingCompSci hourofcode.com/us
https://www.kickstarter
t.co/MFyKHvd50H
mashable.com/curry-knee-injury-zyBooks
19 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
Ex: The domain name for https: //en. wiki/URL is
org. Output each domain name to the console.
Multiple hashtags and URLs may exist in a single tweet, so use the "g" mode modifier on
both regexes and loop until the pattern is no longer found. To extract the domain name,
use . +? to match the characters after the double slash and before the first slash. The +?
operator is "lazy" and matches as few characters as possible, whereas+ matches as
many characters as possible.
1 canst tweets = [
2 "Thank you to the Academy and the incredible cast & crew of #TheRevenant
3 "@HardingCompSci department needs student volunteers for #HourOfCode htt
4 "Checkout the most comfortable earbud on #Kickstarter and boost your #pr
5 "Bootstrap 4 Cheat Sheet https: //t. co/MFyKHvd50H" ,
6 "Curious to see how #StephenCurry handles injury. http://mashable.com/20
7 ] ;
8
9 // Extract hashtags and domain names from URLs
10 tweets .forEach(function(tweet ) {
11 console . log (tweet );
12 } ) ;
13
Run JavaScript Reset code
Your console output
Thank you to the Academy and the incredible cast & crew of #TheRevenant. #Oscars
@HardingCompSci department needs student volunteers for #HourOfCode https://hourofcode
Checkout the most comfortable earbud on #Kickstarter and boost your #productivity http
Bootstrap 4 Cheat Sheet https://t.co/MFyKHvd50H
Curious to see how #StephenCurry handles injury. http://mashable.com/2016/04/25/steph-
► View solution
2024-10-12, 4:47 p.m.
);
console.log(result[1]);
zing
ing
ing zany zone
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
20 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION ACTIVITY I 4.2.9: The exec() method. □
What is output to the console?
1) re = /\w+y/ ; 0
resul t = re . exec ("zing zany
zone " );
consol e . l og (resul t [O] );
0 zing
0 zing zany
0 zany
2) re = /\w+y/ ; 0
resul t = re . exec ("zing zane
zone " );
consol e . l og (resul t );
0 undefined
0 null
0 false
3) re = /\w+y/ ; 0
resul t = re . exec ("zing zany
zone " );
consol e . l og (resul t [l] ) ;
0 undefined
0 null
0 false
4) re = /z(\w+)/ ; 0
resul t = re . exec ("zing zany
zone " );
0
0
0
zyBooks
21 ofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
5) re = /z\w+/g ;
6)
str = "zing zany zone " ;
result = re . exec (str );
while (result !== null )
console . log (result [O]);
result = re . exec (str );
0 zing
zing
0 zany
zone
0 Infinite loop
re = /\d+?/ ;
str = " 012 3 " ;
result = re . exec (str );
consol e . log (result [O]);
0 0
0 3
0 0123
I CHALLENGE I . . ACTIVITY 4.2.2: Determining what matches.
570104.2065416.qx3zqy7
Start
Write a statement to display the month from the regular expression match in result. Note:
The given date is in day, month, year order.
1 canst re = /( \d+) \- (\d+) \- (\d+)/ ;
2 canst date = "17-8-2012" ; // Code will also be tested with value "8-11-92"
3 canst result = re .exec( date );
4
5 /* Your solution goes here*/
6
0
0
□
2024-10-12, 4:47 p.m.
zyBooks
22 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 2 3
Check Next
View your last submission v
String methods that use regex
Several String methods work with regular expressions:
• match() returns an array of the matches made when matching the string
against a regex.
• replace() returns a new string that replaces matching strings with a
replacement string.
• search() returns the index of the ftrst match between the regex and the given
string, or -1 if no match is found.
• split() returns an array of strings created by separating the string into
substrings based on a regex.
Exploring further:
• Regular Expressions (MDN)_
• RegExr - For testing regular expressions
4.3 Forms
<form> element
The <form> element allows the web browser to submit information from the user to the server. The
<form> element has two primary attributes:
1. The action attribute indicates the URL where the form data should be sent. Typically the URL
2024-10-12, 4:47 p.m.
example.com database
First name Last name
...
John
Jane
Buck
Doe
Doe
Rogers
...
...
...
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
23 of 159 2024-10-12, 4:47 p.m.
uses HTTPS so the form data is encrypted.
2. The method attribute indicates the HTTP request type the browser will use to communicate
with the server. The method is either GET or POST. GET is the default method if no method is
specified. I PARTICIPATION
ACTIVITY 4.3.1: Submitting form data to a server.
r "'
First Name: Sarah ~ I Last Name: Connor =1 [ J Sarah Connor
Submit
<form act i on="https : //example . com/apply" method=" POST ">
<p >
<label for=" first " >Fi rst Name: </label>
<input type=" text " name=" first " id=" first ">
<I p>
<p >
<label for="last " >Last Name: </label>
<input type=" text " name=" last " id="last ">
<I p>
<input type=" submit ">
</form>
Animation content:
Begin HTML code:
<form action="https://example.com/ apply" method="POST'>
< p >
<label for="flrst"> First Name:</label>
<input type="text" name="flrst" id= "flrst">
</p >
< p >
<label for= "last">Last Name:</label>
<input type="text" name="last" id="last">
</p >
<input type= "submit">
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
24 of 159 2024-10-12, 4:47 p.m.
</form>
End HTML code.
A form is displayed with the input boxes "First Name" and "Last Name" with a button at the
bottom called "Submit." The user inputs "Sarah" for the first name, and "Connor" for the last name.
When the user presses the button, the information is sent to a database on the server. The
"Database on server" is also shown, with "Sarah" highlighted in the "First Name" column, and
"Connor" highlighted in the "Last Name" column.
Animation captions:
1. The <form> tag specifies that form data should be posted to example.com.
2. The opening <form> and closing </form> tags surround <label> and <input> elements that
allow the user to enter a first and last name.
3. The user enters information in the form and clicks the submit button.
4. The browser sends the form data to the server. The server adds the submitted name to a
database.
I PARTICIPATION I ACTIVITY 4.3.2: <form> element.
Refer to the HTML below.
<form action="https://google.com/">
</ form>
1) To which server will the browser
send the form data?
Check Show answer
2) Which method will the browser
use to communicate with the
server?
Check Show answer
GET method
□
0
0
first=Rick&last=Deckard
http://example.com/apply?first=Rick&last=Deckard
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
25 of 159 2024-10-12, 4:47 p.m.
The GET method is a technique used by a web browser to submit information to a web server by
altering the URL of the HTTP request. When a user clicks the submit button in a form that uses the
GET method, the browser performs the following steps:
1. Collect all data from the form fields into a query string. The query string is a set of
name=value pairs separated by the ampersand character (&). Each name is specified as an
attribute of the HTML field, and the value is the user-entered data. Ex: The first and last field
names and values in the animation below become the string: .c, -· st.-I',._;__ '- i-. °' j__e1.;:, L-
2. Create a URL with the server page and name=value pairs. The URL is composed of the action
attribute specified in the form, the question mark character(?), and the query string. Ex:
3. Use the newly created URL to create and send an HTTP GET request.
4. Display or update the webpage using the HTTP response received from the server.
IAP ACRTTIVICITIPYA TION I 4.3.3: Using the GET method to submit form data to a server.
r
Web server
Thank you, Rick Deckard! example.com
<body>
GET request
https://example.com/apply?first=Rick&last=Deckard
<form action="https://example.com/apply">
<p>
<label for="first" >First Name : </ label>
<input type="text" name="first" i d="first">
</ p>
<p>
<label for="last" >Last Name : </ label>
<input type="text" name="last" i d="last">
</ p>
<input type="submit">
</ form>
</ body>
Animation content:
The following code snippet is displayed:
□
"example.org/">
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
26 of 159 2024-10-12, 4:47 p.m.
<body>
<form action="https://example.com/apply">
<label for="flrst">First Name:</label>
<input type="text" name="flrst" id="flrst">
<label for="last">Last Name:</label>
<input type="text" name="last" id="last">
<input type="submit">
</form>
</body>
End of code snippet. A form is displayed with the inputs "First Name" and "Last Name" and a
button called "Submit." The first name is filled in with "Rick" and the last name is filled in with
"Deckard." When the submit button is clicked, the first and last name are used to create the URL
for example.com with the flrst=Rick and last=Deckard appended onto the end. The browser then
uses a GET request with the created URL to submit the form data to the web server. Then the
web server responds with a new page that shows one line ''Thank you, Rick Deckard!"
Animation captions:
1. The user enters information in the form and clicks the submit button.
2. The browser creates a query string of name=value pairs for each form field, separated by&.
3. The query string is appended to the URL from the form action.
4. The browser uses the new URL to submit the form data to the web server.
5. The web server responds with a new webpage.
Warning
Because submitting form data with the GET method places the form data in the URL,
the data is visible to anyone who sees the URL. The GET method should not be used
to submit private information like phone numbers, credit card information, etc.
I PARTICIPATION I ACTIVITY 4.3.4: GET method.
Refer to the form below.
<form method="GET" act i on="http://examp
<input type="text" name="item">
<input type="text" name="price">
<input type="submit">
</ form>
□
bananas=2.50
action
first=Sarah&last=Connor
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
27 of 159 2024-10-12, 4:47 p.m.
1) What is the query string if the user
submits "bananas" and "2.50" in the text
boxes?
0
0 method=bana nas&action=2 . 50
0 i tem=bananas&pri ce=2 . 50
2) What URL does the browser request if
the user submits "bananas" and "2.50"
in the text boxes?
0 http://exa mple.org/
O http://example.org/
item=bananas&price= 2.50
O http://example.org/?
item=bananas&price= 2.50
POST method
0
0
The POST method is a technique used by a web browser to submit information to a web server by
sending the information in the HTTP request body. When the user clicks the submit button in a
form that uses the POST method, the browser performs the following:
1. Create an HTTP POST request using the URL from the form's attribute.
2. Create a query string from the form data. Ex:
3. Place the query string in the HTTP request message body, and send the request.
4. Display or update the webpage using the HTTP response received from the server.
The left side of the figure below shows a webpage opened in Chrome. The Dev Tools show the
page's form, which is POSTing to a zyBooks URL. The user entered her name Sarah Connor before
pressing Submit. On the right, the user has pressed Submit, and the DevTools show the details of
the HTTP request. The Payload tab shows the query string created from the form data.
Figure 4.3.1: Chrome DevTools showing form data in POST request.
0 Form Example X + V - □ X
0 HTTP Request Detai ls X + V - □ X
~ ➔ C CD Fi le I ( :/ temp/example.html ~ ➔ C i wp.zybooks.com/ form-viewer.php I=? * • □
First name:l~sa_rah ___ ~ HTTP request details
Last name: ~l co_nn_or ___ ~
I Submit I Detail name Value
Hostname wp.zybooks.com
r-, r, _, ... • ..... ,., r, - ·
<form>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
28 of 159 2024-10-12, 4:47 p.m.
Lk QJ t tements Lonso1e Kecoraer • y : .,...
• <body>
• <fo rm a ct ion="ht tps : / /'i1p . zybooks. com/ f orm- vi ewer. php" met hod="POST" >
<label for =" first " >first name: </label>
<input t ype: "text " ida: "first" name z "f irst ">
</p>
<label for== " last">Last name: </label>
<i nput t ype==" text" id• ,. last" name s " last">
</p>
<i nput t ype== " submit" value== "Submi t " >
</p>
</f orm>
</ body>
</html>
<!doctype>
Styles Computed Layout Event Listeners DOM Breakpoints Properties »
Filter :hov .els
Lk aJ t:lements Lonso1e Network n
e IS) 'i' Q_ D Preserve log r.i Disable cache No throttl ing • 9-, (I
!
Filter 0 Invert O Hide data URLs
All Fetch/XHR JS CSS 1mg Media Font Doc WS Wasm Manifest Other
D Has blocked cookies D Blocked Requests D 3rd-party requests
~n llmn Dn
/
400ms
Name x Headers Payload Preview Response »
(!I form-viewer.php • Form Data view parsed I fir s t =Sarah&last:Connor
1 / 2 requests 534 B / 1.2 kB
If a form field contains binary data such as an image, the normal format of the query string is not
sufficient to encode the binary data. To accommodate binary data, a POST request can be split into
multiple parts. The element's enctype attribute value "multipart/form-data" indicates the
web browser should split a POST request into multiple parts, where each input field is sent as a
separate part of the HTTP request message. I PARTICIPATION I . . ACTIVITY 4.3.5: Using the POST method to submit form data to a server.
First Name: Rick
Last Name: Deckard 7
Upload picture:
[ Submit J
<body>
Web server
example.com
POST request
!first=Rick !
! last=Deckard I
<form action="https://exampl e.com/appl y " method="POST"
enctype="mu l t i part/ f o r m- data">
<p>
<label for="first " >Fi rst Name : </ label>
<input type=" text " name="fi rst " i d="first ">
</ p>
<p>
<label for="last " >Last Name : </ label>
<input type=" text " name="last " i d="last ">
</ p>
<p>
<label for="p i c " >Up l oad p i cture: </ label>
<input type="file " name=" p i c " i d="p i c ">
</ p>
□
"example.org/">
<input type="submit">
</form>
</body>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
29 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following code snippet is displayed:
<body>
<form action="https://example.com/apply" method="POST"
enctype="multipart/form-data">
<label for="flrst">First Name:</label>
<input type="text" name="flrst" id="flrst">
<label for="last">Last Name:</label>
<input type="text" name="last" id="last">
<label for="pic">Upload picture:</label>
<input type="flle" name="pic" id="pic">
<input type="submit">
</form>
</body>
End of code snippet. A form is displayed with the inputs "First Name", "Last Name", and "Upload
Picture" with a button called "Submit." The first name is filled in with "Rick" and the last name is
filled in with "Deckard", and the uploaded picture is an eagle head. When the submit button is
clicked, the first name, last name and picture were added to the POST request, which is then sent
to the server.
Animation captions:
1. The user enters information in the form, including a picture to upload to the server, and
presses Submit.
2. The browser collects the form data into multiple parts and adds each part to the POST
request.
3. The POST request is then sent to the server.
I PARTICIPATION I AcTiviTv 4.3.6: POST method.
Refer to the form below.
<form method="POST" action="http://exam
<input type="text" name="item">
<input type="text" name="price">
<input type="submit">
</ form>
□
oranges=1.99
method=oranges&action=1.99
item=oranges&price=1.99
→
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
30 of 159 2024-10-12, 4:47 p.m.
1) What is the query string if the user
submits "oranges" and "1 .99" in the text
boxes?
0
0
0
2) What URL does the browser request if
the user submits "oranges" and "1 .99"
in the text boxes?
0 http://example.org/
0 http://example.org/
oranges=7 .99
0 http://example.org/?
item=oranges&price=7 .99
3) What changes about the form data
when enctype="mul tipart/
form-data" is added to the < form>
tag?
0 Nothing changes since binary
data is not submitted.
0 Each name/value pair is
separated into multiple parts.
0 The form data is encrypted.
Escaping form data
The&,?, and = characters have special meaning in a query string. If a user enters
characters like&,?,=, or white space characters like space, newline, or tab, the
characters must be escaped, meaning the characters must be transformed into
other representations. The browser rules for escaping form data are as follows:
• Space - +
• All other reserved characters, newline, and tab %XX where XX is the ASCII
hex value of the character
Ex: If "7 + 2 = ?" is entered into a textbox, the browser escapes the values producing
0
0
0
<input>
<input> type
<input> type
value
value
name
"twitter.com/status" method="POST">
< input type "text" name "status" id="status" placeholder="Your
status">
<input type="submit" value="Send status">
</form>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
31 of 159 2024-10-12, 4:47 p.m.
"1 +%2B+2+%3D+%3F". 2B is the ASCII hex value for"+", 3D is the ASCII value for"=",
and 3F is the ASCII value for"?".
The web server unescapes the form data to determine what the original values are.
Form widgets
A widget is an interactive component (usually graphical) that the browser uses to interact with a
user. Ex: Buttons, drop-down menus, and data entry fields.
The <input> element allows the user to enter information into a webpage. The
a void element with five primary attributes:
element is
• The type attribute indicates the widget type. Common types include text, password, submit,
and button.
• The name attribute names the widget and sends the widget's value when the widget's form is
submitted.
• The id attribute is used to give a widget a unique identifier.
• The placeholder attribute specifies text that first appears in a text widget, typically for giving
the user a hint as to the expected value.
• The value attribute specifies a default value for a widget.
A text box widget is an
enter a single line of text.
element with the attribute of "text" that allows users to
The web browser displays a submit button widget for an tag with the attribute of
"submit", which sends the associated form's data to the server when clicked. A submit button uses
the attribute to specify the button's text.
The HTML below asks for a message to tweet. The text box widget does not use the
attribute because no default tweet message makes sense. The submit button does not use the
attribute because the submit button's value is not needed by the web server.
Figure 4.3.2: Complete HTML form sending status to Twitter using a secure
HTTP POST request.
<form act i on="https://twitter.com/stc
;nnnT t-un~= t-~vt-" n~m~= c::t-~t-,,c::" ir
lvour statt1. .. 11 Send .s1 atu'i I
id
"username">Username:</
label>
<input type="text" id="username">
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
32 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION I . . ACTIVITY 4.3.7: <input> attributes.
Match each <input> attribute to the corresponding effect.
If unable to drag and drop, refresh the page.
name value id placeholder
Labels and text areas
type
Indicates which kind of widget is
displayed by the browser.
Allows the server to identify which
data came from which widget.
Uniquely identifies the specific input
element to the browser.
Allows the input to start with a
default value.
Provides a hint to the user about
the information being requested.
Reset
□
The <label> element displays descriptive text associated with a specific widget. A label has a for
attribute whose value should match the attribute for the widget being labeled. Labels help
people using screen readers understand what input is expected.
Figure 4.3.3: HTML for a label associated with a text box.
<label for ="usernamE
,_,__, ,
<textarea>
cols="50">To summarize...</
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
33 of 159 2024-10-12, 4:47 p.m.
eniame:
A text area widget allows users to enter multiple lines of text and is created with the <textarea>
element. A element has optional rows and cols attributes to specify the initial size of
the text area.
Figure 4.3.4: HTML for a textarea.
<textarea name="summary" rows ="4" c
textarea>
I To summaci,e • • •
I PARTICIPATION I . ACTIVITY 4.3.8: Text inputs.
The following HTML form contains a text box, text area, and submit button. Pressing the
submit button submits the form data to form-viewer.php, which displays the submitted
form data.
1. Add another text box with a "last" name. Also change the size of the text area so that
the text area has 7 rows and 50 columns of text. Make your webpage match the
expected webpage.
2. Type some data into the form and press Submit. Note that the form data appears in
the query string of the resulting webpage because the form uses the GET method.
3. Change the form's method from "GET' to "POST'. Render the webpage, type some
data into the form, and press Submit. The form data no longer appears in the query
string of the resulting webpage although the submitted data is present.
□
zyBooks
34 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
3
4
5
6
7
8
9
10
11
12
13
14
<forij action=" https: / /wp. zybooks. com/form-viewer. php" target="_blank" met ho
<p>
<label for="first" >First name: </ label>
<i nput type="text" id="first" name="first" placeholder="Text box" >
</p>
<p>
<label for="address" >Address: </ label>
<textarea id="address" name="address" placeholder="Text area with 2 r
</p>
<p>
<i nput type="submit" value="Submit">
</p>
7 </form
Renderwebpage Reset code
Your webpage Expected webpage
First name: I Text box First name: I Text box
'----------'
Text area with 2
Address: rows and 20 cols
[ Submit ]
► View solution
I PARTICIPATION I . ACTIVITY 4.3.9: Text inputs.
1) Which element creates a text box
widget?
0 <input>
0 <text>
l
Last name: [ Second text box
Address:
Text area with 7 rows and 50 cols
[ Submit ]
□
0
2024-10-12, 4:47 p.m.
textarea>
zyBooks https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
0 <textarea>
2) Which attribute must be set to create
a text box widget?
0 type
0 no attribute
0 name
0 id
3) Which element creates a widget
capable of holding multiple lines of
text?
0 <input>
0 <text>
0 <textarea>
4) Which attribute inside the <label>
tag is used to associate the label with
a widget?
0 id
0 for
0 name
I CHALLENGE I . . ACTIVITY 4.3.1: Building forms.
570104.2065416.qx3zqy7
Start
Add a <label> with content "First name", associated to a text <input> with name and id of
flrstName, and placeholder of Ann. SHOW EXPECTED
1 <form action="https://wp.zybooks.com/form-viewer.php" target="_blank" metho
2 <p>
3
4 <!-- Your solution goes here-->
5
6 </p>
7 <p>
8 <i nput type="submit" value="Submit">
9 </p>
10 </form>
0
0
0
□
35 of 159 2024-10-12, 4:47 p.m.
zyBooks
36 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 2 3
Check Next
View your last submission v
Exploring further:
• encty_Qe attribute from W3Schools
• Sending form data from Mozilla Developer Network
4.4 Common form widgets
Checkbox
A checkbox is a widget for input elements with the type attribute of "checkbox", which allows
users to check, or select, a value. A checkbox initially appears selected if the checked attribute is
set. Ex: <input type=" checkbox" checked> creates a checked checkbox. The checked
attribute is an example of a boolean attribute. A boolean attribute is an attribute that is true when
present and false when absent. No value must be assigned to a boolean attribute.
For each checkbox selected, the browser sends the checkbox's name and value to the server. If the
value attribute is not specified, the default value of "on" is sent. If a checkbox is not selected, the
browser does not send anything to the server. A common error on the server is failing to record all
checkboxes in the form as the browser doesn't report any values for checkboxes not selected by the
user.
Good practice is to use label elements with checkboxes so the user can click the label to check and
uncheck the associated checkbox. I PARTICIPATION I . . ACTIVITY 4.4.1: Submitting checkboxes to the server. □
2024-10-12, 4:47 p.m.
Web server
http://example.survey">
for="item1">1:</item1" item1">
for="item2">2:</item2" item2">
for="item3">3:</item3" item3">
type="submit">
Item 1:
Item 2:
Item 3:
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
37 of 159 2024-10-12, 4:47 p.m.
r
1:~
ltem2:0
ltem3:~
Submit J
<form action="http : // example . com/survey ">
<p>
<label for ="iteml " >Item 1: </ label>
<input type="checkbox" name="iteml " id="iteml ">
</p>
<p>
<label for ="item2" >Item 2 : </ label>
<input type="checkbox" name="item2 " id="item2 ">
</p>
<p>
<label for ="item3 " >Item 3 : </ label>
<input type="checkbox" name="item3 " id="item3 ">
</p>
<input type =" submit ">
</form>
Animation content:
The following code snippet is displayed:
<form action="http://example.com/ survey">
< p >
<label for= "item1 ">Item 1 :</label>
<input type="checkbox" name="item1 " id="item1 ">
</p>
< p >
<label for= "item2">Item 2:</label>
<input type="checkbox" name="item2" id="item2">
</p>
< p >
<label for= "item3">Item 3:</label>
<input type="checkbox" name="item3" id="item3">
</p>
<input type= "submit">
</form>
item1=on
item3=on
End of code snippet. A form is displayed with 3 checkboxes called "Item 1 ", "Item 2", and "Item 3"
with a button called "Submit." Boxes 1 and 3 are selected and when the submit button is clicked,
zyBooks
38 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
"Item 1" and "Item 3" are sent to the web server with the value on. The "Web Server" is displayed,
showing "item1 =on" and "item3=on."
Animation captions:
1. Each checkbox is displayed with a corresponding label.
2. The user checks Item 1 and Item 3 checkboxes and clicks the submit button.
3. For each selected checkbox, the checkbox's name and the value "on" are sent to the server.
I PARTICIPATION I . ACTIVITY 4.4.2: Checkbox inputs.
The following form contains a checkbox, which is initially checked . Click the submit button
to view the form data sent to the server. Try adding another checkbox with the name
"throw_party".
1 <form action="https://wp.zybooks.com/form-viewer.php" target="_blank" metho
2 <p>
3 <label for="birthday_today" >Birthday today? </ label>
4 <i nput type="checkbox" id="birthday_today" name="birthday_today" chec
5 </p>
6
7 <p>
8 <i nput type="submit" value="Submit">
9 </Q>
10 </fo~
11
Render webpage Reset code
□
2024-10-12, 4:47 p.m.
type
name
name value
<input type="radio" name="movie" value="ET">
Birthday today?
Throw party?
Submit
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
39 of 159 2024-10-12, 4:47 p.m.
Your webpage
Birthday today? ~
[ Submit ]
► View solution
Radio button
Expected webpage
B
Tl
A radio button is a widget for input elements with the attribute of "radio", which allows users
to select exactly one value from possibly many values. The web browser groups radio buttons
together with the same attribute, where each possible value in a group has an associated
input. When submitting a form, the browser sends the selected radio button's and
attribute. Ex: If the radio button is
selected, "movie=ET" is sent to the server.
The main difference between a radio button and checkbox is that only one radio button in a group
can be selected, while any number of checkboxes can be selected. I PARTICIPATION I . ACTIVITY 4.4.3: Radio buttons.
Try adding another radio option for the restaurants group with a value of Pizza Hut. Click
the submit button to view the form data sent to server. Then, try adding another set of
radio buttons to match the expected rendered HTML.
□
Select your favorite chain restaurant:
Subway
Starbucks
Pizza Hut
Select your favorite movie:
Gone with the Wind
Star Wars, Episode IV
The Sound of Music
E.T.: The Extra-Terrestrial
Titanic
Submit
zyBooks
40 of 159
https://leam.zybooks.com/zybook/ARIZONAECE4 13SalehiFall2024/c ...
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
HI
<forij action=" https: / /wp. zybooks. com/form-viewer. php" target="_blank" met
<p>Select your favorite chain restaurant: </p>
<div>
<i nput type="radio" name="restaurants" value="Subway" id="sub">
<label for="sub" >Subway</ label>
</div>
<div>
<i nput type="radio" name="restaurants" value="Starbucks" id="starB"
<label for="starB" >Starbucks </ label>
</div>
<p>
<i nput type="submit" value="Submit">
<Ii:>>
</ fo~ '
Renderwebpage Reset code
Your webpage Expected webpage
Select your favorite chain restaurant:
0 Subway
0 Starbucks
[ Submit ]
► View solution
0 0 0 0 0 0 0 0 [ ]
I PARTICIPATION I . ACTIVITY 4.4.4: Checkboxes and radio buttons.
Refer to the HTML below.
□
2024-10-12, 4:47 p.m.
<form action="form-processor" method="POST">
<p>Select a flavor:</p>
<div>
<input type="radio" name="flavor" value="1" checked>
<label for="choc">Chocolate</label>
</div>
<div>
<input type="radio" name="flavor" value="2">
<label for="van">Vanilla</label>
</div>
<div>
<input type="radio" name="flavor" value="3">
<label for="straw">Strawberry</label>
</div>
<p>Select toppings:</p>
<div>
<input type="checkbox" name="topping-whip">
<label for="whip">Whipped Cream</label>
</div>
<div>
<input type="checkbox" name="topping-nuts" checked>
<label for="nuts">Nuts</label>
</div>
<p>
<input type="submit" value="Order">
</p>
</form>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
41 of 159 2024-10-12, 4:47 p.m.
1) If the user clicks Order without
changing anything in the form,
how many items will be sent to
the server?
Check Show answer
2) What is the maximum number
of items that can be sent to the
server?
Check Show answer
3) What is the minimum number of
items that will be sent to the
server?
0
0
0
"football">Football</option>
"baseball">Baseball</option>
"basketball">Basketball</
"hockey">Hockey</option>
<option value="soccer">Soccer</option>
</select>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
42 of 159 2024-10-12, 4:47 p.m.
Check Show answer
4) The labels are not correctly
associated with each input
element. Which attribute should
be added to each input element
to correctly associate the labels
with the input elements?
Check Show answer
Drop-down menu
0
The <select> element creates a drop-down menu (or drop-down list), which allows users to select
one of several predefined values. The <option> element creates a value, or option, the user can
select within a drop-down menu. When the user is not interacting with the menu, the drop-down
menu usually displays the selected option.
The difference between a drop-down menu and a radio button widget is that the drop-down menu
only displays the options when interacting with the user, while a radio button widget always
displays all options.
Figure 4.4.1: Drop-down menu's default appearance (left) and when
selecting an option (right).
<select name="sport">
<option val ue="footbal
<option val ue="basebal
<option val ue="basketb
option>
<option val ue="hockey"
I footbal I .., I Baseball ..,
Hockey
Soccer
size
<select size="4">
size
multiple
"flagcolors" size="4"
Red</option>
orange">Orange</option>
yellow">Yellow</option>
"green">Green</option>
>Blue</option>
"purple">Purple</option>
"white">White</option>
black">Black</option>
<input type="button">
<button> < input>
<button> type
type
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
43 of 159 2024-10-12, 4:47 p.m.
List box
A list box widget is created by specifying a size with the select element's attribute. Ex:
more than
list of options.
creates a list box that shows four options at a time. If the list box contains
options, the browser adds a vertical scrollbar so the user can scroll through the
The attribute allows the user to select multiple options. On Windows, the user must
hold down the control (Ctrl) button to select multiple options, and on a Mac, the user must hold
down the command button. Many users are unaware of how to choose multiple options from a list
box, so good practice is to use checkboxes instead.
Figure 4.4.2: List box that allows multiple options to be selected.
Buttons
<select name="flagcolo
multiple>
<option value= "red">
<option value= "orang
<option value= "yello
<option value="green
<option value="blue"
<option value="purpl
<option value="white
<option value= "black
</ select>
A button widget can be created using the <button> element or with / " -- I=iu. ;___ L :1 1-1e- u u L
The element allows text and images to be displayed in a button, but an i nn11t > button
only allows text.
The element has a attribute that can be set to various values like "button" or
"submit". The "button" type is typically used with JavaScript to perform an action when clicked. The
"submit" type creates a submit button for a form. If the attribute is not specified, different
browsers may choose different default types, so good practice is to always specify the type.
"button" value="Home">
button">
"png"
strong>
type
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
44 of 159 2024-10-12, 4:47 p.m.
Figure 4.4.3: HTML buttons.
Styling widgets
<input type="buttor
<button type= "buttc
<img src="home.pr
a lt="home" ><br>
<strong>Home</stJ
</button>
I Home I Home
The default look of a form's widgets may differ depending on the browser and
operating system. Developers use CSS to give widgets a more uniform look or to
increase the widgets ' visual appeal.
The image on the left shows the default button in Chrome. The button on the right
has been styled with CSS.
I Boring Button I
Password field
A password field is a widget for input elements with the attribute of "password", which allows
users to enter a password without the password contents being displayed on-screen. Web
browsers usually provide facilities to remember passwords at various websites to help users.
Forms that submit passwords or any sensitive data should always submit with URLs that use
HTTPS. Form data submitted with HTTP are not encrypted, but HTTPS encrypts form data.
size
maxlength size
maxlength
"secret" size="10"
<fieldset>
value="The Office" id="theOffice">
label>
value="Community" id="community">
label>
value="The Big Bang Theory"
Bang Theory</label>
value="Other" id="other">
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
45 of 159 2024-10-12, 4:47 p.m.
The HTML below uses the attribute to limit the password field's width and uses the
and
attribute to limit the maximum number of characters the user can enter. The
attributes can be used on text boxes as well.
Figure 4.4.4: Password field that limits the number of characters to 10.
Fieldset
<input type="password" name="se
maxl ength="l0">
The <fieldset> element groups related form widgets together and draws a box around the related
widgets. The <legend> element defines a caption for a
Figure 4.4.5: Fieldset around related radio buttons.
<fieldset>
<legend>Favorite Sitcom</ legend>
<input type="radio" name="sitcom" vaJ
<label for= "theOffice" >The Offi c e </ lc
<input type="radio" name="sitcom" vaJ
<label for= "community" >Community</ lal
<input type="radio" name="sitcom" vaJ
id="bigBang">
<label for= "bigBang" >The Big Ba ng ThE
<input type="radio" name="sitcom" vaJ
<label for= "other" >Other</ label>
</ fieldset>
FaYorite Sitcom-------------------..-.
• he Office Community The Big Bang Theory
I PARTICIPATION I 4.4.5: Menus, buttons, and passwords.
ACTIVITY
Other
□
<fieldset>
<option>
value
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
46 of 159 2024-10-12, 4:47 p.m.
7) A can group drop-down 0
menus, buttons, and other widgets.
0 True
0 False
2) A drop-down menu only allows one 0
option to be selected.
0 True
0 False
3) An tag must have a 0
attribute.
0 True
0 False
4) Which element can create a button 0
with an image?
0 <button>
0 <input>
5) Buttons always submit form data to a 0
server.
0 True
0 False
6) Passwords from the password widget 0
that are sent to the server using HTTP
are safe from prying eyes.
0 True
0 False
7) Which input element attribute limits 0
the number of characters the user
can type in a text box or password
field?
0 size
0 maxlength
I CHALLENGE ACTIVITY I 4.4.1: Building common widgets. □
Start
zyBooks
47 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
5707 04.2065416 qx3zqy7
Add a checkbox associated with each label. The first checkbox should have name and id
of "first" and be initially checked . The second checkbox should have name and id of
"second" and be initially not checked . SHOW EXPECTED
1 <form action="https://wp.zybooks.com/form-viewer.php" target="_blank" metho
2
3 <p>
4 <label for="first" >Like cats ?</ label>
5 <!-- TODO: Add checkbox -->
6 </p>
7
8 <p>
9 <label for="second" >Like dogs? </ label>
10 <!-- TODO: Add checkbox -->
11 </p>
12
13
14 <p>< input type="submit" value="Submit" ></p>
15 </form>
1 2 3 4
Check Next
View your last submission v
Exploring further:
• HTML <input> tag from W3Schools
• HTML <select> tag from W3Schools
• HTML <button> tag from W3Schools
4.5 Styling forms
Styling forms with CSS
2024-10-12, 4:47 p.m.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
48 of 159 2024-10-12, 4:47 p.m.
Web forms are an important part of many websites. A usable form allows the user to quickly and
painlessly enter data. Forms require CSS formatting to improve usability.
Figure 4.5.1: HTML form without CSS styling and an improved form with
styling.
ame Name
1--------~
Email
Email
Service Basic
Register
I PARTICIPATION I ACTIVITY 4.5.7: Create a styled form.
The webpage below displays a simple web form with little styling. Add the following CSS
to create a more usable web form:
1. Add a label selector that makes all labels have the same width and margin. Since
a label is an inline element, the label's width cannot be changed without making a
label an inline-block. Also, right-align the label text to improve the reader's ability to
mentally link the label to the input field .
label {
width : SOpx ;
display : inline - block;
text- align : right ;
margin- right : 8px ;
Render the webpage and observe the labels are equal length and right aligned.
2. Add a selector that gives the text input, email input, and drop-down menu the same
consistent width with some padding to increase the size of the inputs. Also, change
the border color and radius to give the inputs a softer look.
□
input[type=text], input[type=email], select {
box-sizing: border-box;
width: 250px;
padding: 10px;
border: 1px solid #aaa;
border-radius: 4px;
}
input[type=submit] {
width: 200px;
background-color: #09f;
color: white;
padding: 15px;
margin: 10px 0;
border: none;
border-radius: 4px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: #07d;
}
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
49 of 159 2024-10-12, 4:47 p.m.
Render the webpage and observe the inputs are equal size and are spaced out.
3. Add styling to the submit button to create a blue button that looks less like a
traditional browser button. Also, change the default mouse cursor to a pointer icon
to give the user a visual cue that the button is pressable.
Render the webpage and observe the Register button is blue and much larger.
Moving the mouse over the button changes the pointer icon.
4. To give the user another visual cue that the button is clickable, darken the button
color when the mouse hovers over the button.
Render the webpage and verify the Register button's color gets darker when the
mouse hovers on the button.
I HTML I css j
Name
Email
Service
Basic
Register
zyBooks
50 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
~(form1 action=" https: / /wp. zybooks. com/form-viewer. php" target="_blank" met
<p>
3 <label for="name" >Name</label>
4
5
<i nput type="text" id="name" name="fullname">
</p>
6 <p>
7 <label for="email" >Email </ label>
8
9
<i nput type="email" id="email" name="email">
</p>
10
11
12
13
14
15
16
17
1s:l
<p>
<label for="service" >Service</ label>
<select id="service" name="service">
<option >Basic </option>
<option >Prime</option>
<option >Deluxe</option>
</ select>
</p>
Render webpage Reset code
Your webpage Expected webpage
Name
Email
Service [ Basic v ]
[ Register ]
► View solution
I PARTICIPATION I ACTIVITY 4.5.2: Form styles.
1) In the example above, the label's
width could not be changed until
which CSS property/value was set?
0 display: inline-block
[ Basic
□
0
2024-10-12, 4:47 p.m.
display: block
display: none
input
input[type=text]
input[type=text],
select
boxsizing:
border-box;
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
51 of 159 2024-10-12, 4:47 p.m.
0
0
2) What CSS selector selects only text 0
inputs?
0
0
0
3) In the example above, what happens 0
to the text and email inputs if
- -----':::,. --- ~-- ---·· is removed
from the input [type=text],
input[type=email], select
selector's rule?
0 Inputs are no longer visible
0 Inputs are no longer editable
0 Inputs become wider
4) In the example above, what visual 0
cues help the user to know that the
blue rectangle with "Register" in the
middle is a button that can be
pressed?
0 The button has rounded
corners.
0 The pointer icon appears when
hovering over the button.
The pointer icon appears, and
0 the button color changes when
hovering over the button.
Paragraphs vs. divs
<p>
<div>
label>
name="nickname">
label>
name="nickname">
placeholder
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
52 of 159 2024-10-12, 4:47 p.m.
The W3C recommends putting form elements in elements, but many leading
web frameworks like Bootstrap use elements instead. Either container is
acceptable, and this material uses both sty/es.
<! -- Example div container -->
<div>
<label for= "nicknarne" >Nicknarne?</
<input type= "text" id= "nicknarne"
</div>
<!-- Example p container -->
<p>
<label for= "nicknarne" >Nicknarne?</
<input type= "text" i d = "nicknarne"
</p>
Proper use of field labels
Form field labels should be placed uniformly in the same location on a website's web
forms. The best places for labels are immediately above or to the left of an input
field. Some developers use only the p l acehc HTML attribute in place of labels
to save screen space and reduce clutter, especially on mobile devices. However,
usability experts warn that placeholders used as labels can create a number of
problems for users and should be avoided.
Name
Name Name
Improving text input fields
An input field can be further improved. Changing an input's border color or background color
focuses the user's attention to the input. Ex: Changing the input border color to red may indicate an
error with the input. Adding a commonly recognized icon to an input field can improve the user's
ability to recognize the purpose of the input. Ex: Adding a search icon to a search input. I PARTICIPATION I . . ACTIVITY 4.5.3: Augmenting an input. □
:invalid
input:invalid {
border: 2px solid red;
}
:focus
input[type=text]:focus, input[type=email]:focus {
background-color: lightblue;
}
background-image
background-position background-repeat:no-repeat
input[type=search] {
float: right;
background-image: url("https://resources.zybooks.com/
WebProgramming/searchiconv1.png");
background-position: 5px 5px;
background-repeat: no-repeat;
padding-left: 40px;
}
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
53 of 159 2024-10-12, 4:47 p.m.
The webpage below displays a web form on the left and a search box on the right. A
partial email address is entered in the email input field. Add the following CSS:
1. Add an selector at the end of the CSS stylesheet that sets an invalid
input's border to red to indicate an error:
Render the webpage and observe the email input now has a red border.
2. Add a selector that applies styles to an input that has the focus, and
change the background color to light blue:
Render the webpage and observe that the name and email inputs become light blue
when the inputs have the focus. The browser automatically places a border around
an input that has the focus.
3. Add a search icon to the search input by adding a that is
positioned with . Set
so the background image only displays once:
Render the webpage and observe the search icon in the search input.
I HTML I css j
zyBooks
54 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 <i nput type="search" placeholder="Search">
2
3
4
<form action="https://wp.zybooks.com/form-viewer.php" target="_blank" met
<p>
5
6
7
8
9
10
11
12
13
14
15
16
17
1s:l
<label for="name" >Name</label>
<i nput type="text" id="name" name="fullname">
</p>
<p>
<label for="email" >Email </ label>
<i nput type="email" id="email" name="email" value="dara" >
</p>
<p>
<label for="service" >Service</ label>
<select id="service" name="service">
<option >Basic </option>
<option >Prime</option>
<option >Deluxe</option>
✓ / color+ ,
Render webpage Reset code
Your webpage
Name
Email
[ dara
Service
[ Basic v]
Register
► View solution
I PARTICIPATION I . ACTIVITY 4.5.4: Augmented inputs.
1) Many browsers add a border around
an input when the input has the
focus .
0 True
[ Search
□
0
2024-1 0-1 2, 4:47 p.m.
:focus
appearance none
::before
content
<fieldset>
<legend>Size:</legend>
<div>
<input id="small" type="radio" name="size"
<label for="small">Small</label>
</div>
<div>
<input id="medium" type="radio" name="size"
<label for="medium">Medium</label>
</div>
<div>
<input id="large" type="radio" name="size"
<label for="large">Large</label>
</div>
</fieldset>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
55 of 159 2024-10-12, 4:47 p.m.
0 False
2) The selector normally
selects more than one element at a
time.
0 True
0 False
3) Changing the email address to
dara@gmail .com removes the red
border.
0 True
0 False
Styling radio buttons and checkboxes
0
0
Radio buttons and checkboxes use the styling properties supplied by the browser and may differ
between browsers. Styling radio buttons and checkboxes requires hiding the default widget, then
displaying a custom widget before each label that changes appearance when checked or focused.
The CSS property appearance is used to control a widget's appearance based on the operating
system's theme. Setting to hides the widget.
To display a custom radio button or checkbox, the pseudo-element selector and
property are used to insert content before the label's content that looks like a radio
button or checkbox. I PARTICIPATION I . . ACTIVITY 4.5.5: Styling radio buttons.
input [type=radio ] + label {
cursor : poi nter ;
□
input [type=radio ] {
appearance : none ;
margi n : 0 ;
.. .LU - .:::,11tcL .L L..:J_l:-)C:: - .LO.U.1.1.. 110.HLC: -
input [type=radio ] + label : :before
content : " \OOaO " ; / *Space*/
border- radi us : lOpx ;
d i spl ay : i n li ne - b l ock ;
wi dth : lem; he i ght : lem;
text- a lign : center;
line- height : lem;
font - s i ze : 0 . 8em;
margin- right : lOpx ;
~,....,.,._ IT,....""' • -, -, •• . - -, -, I "" ,. -
background-color: #aaa;
border: 0.125em solid white;
}
input[type=radio]:checked + label::before {
content: "\2022"; /* Bullet */
color: white;
background: green;
}
input[type=radio]:focus + label::before {
box-shadow: 0 0 0 1px #888;
}
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
56 of 159 2024-10-12, 4:47 p.m.
Animation content:
There are two blocks of code. The CSS:
input[type=radio] + label {
cursor: pointer;
}
input[type=radio] {
position: absolute;
height 1 px; width: 1 px;
clip: rect(O O 1 1 );
}
input[type=radio] + label::before {
}
content: "\OOaO"; /* Non-breaking space*/
border-radius: 1 Opx;
display: inline-block;
width: 1 em; height 1 em;
text-align: center;
line-height 1 em;
font-size: 0.8em;
margin-right: 1 Opx;
background-color: #aaa;
border: 0.125em solid white;
input[type=radio]:checked + label::before {
content: "\2022"; /*Bullet*/
color: white;
background: green;
}
input[type=radio]:focus + label::before {
box-shadow: O O O 1 px #888;
}
and the HTML:
<p>Size:</p>
r g
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
57 of 159 2024-10-12, 4:47 p.m.
<div>
<input id="small" type="radio" name="size">
<label for="small">Small</label>
</div>
<div>
<input id="medium" type="radio" name="size">
<label for="medium">Medium</label>
</div>
<div>
<input id="large" type="radio" name="size">
<label for="large">Large</label>
</div>
A screen shows three radio buttons labeled Small, Medium, and Large. cursor: pointer makes the
cursor change when the user hovers over the radio button or the label. The input[type=radio]
block positions the radio buttons off of the screen. To create custom radio buttons, add an empty
space before the labels with a circular border, this is shown in the input[type=radio] + label::before
CSS block. The input[type=radio]:checked + label::before CSS block changes the custom button to
green empty space with a white dot in the middle when clicked. When a radio button has the
focus, input[type=radio]:focus + label::before shows a grey shadow around the empty space.
Animation captions:
1. The default radio buttons are plain looking and cannot be styled.
2. The+ selector selects <label> elements that are immediately after <input type="radio">
elements.
3. Changing the label's cursor to a pointer helps the user know the label is clickable.
4. Changing setting appearance to none hides the radio buttons, but screen readers still "see"
the radio buttons.
5. ::before inserts the content \00a0, a non-breaking space, before the radio button label's
content.
6. Custom radio buttons are created by displaying a single empty space within a circular
border.
7. When a radio button is checked, a white bullet with green background replaces the previous
content (the space).
8. When a radio button has the focus, a gray shadow displays around the content before the
label.
I PARTICIPATION I
ACTIVITY 4.5.6: Style the checkboxes.
The webpage below displays three styled radio buttons followed by four unstyled
checkboxes. Add the following CSS to style the checkboxes:
□
input[type=checkbox] + label {
cursor: pointer;
font-size: 1.3em;
}
input[type=checkbox] {
appearance: none;
margin: 0;
}
input[type=checkbox] + label::before {
content: "\00a0"; /* Non-breaking space */
display: inline-block;
width: 16px;
height: 16px;
text-align: center;
line-height: 1em;
font-size: 0.8em;
margin-right: 10px;
border: 0.125em solid white; /* Push focus shadow away */
background-color: #aaa;
}
input[type=checkbox]:checked + label::before {
content: "\2713"; /* Checkmark */
color: white;
background: green;
}
input[type=checkbox]:focus + label::before {
box-shadow: 0 0 0 1px gray;
}
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
58 of 159 2024-10-12, 4:47 p.m.
1. Add a rule that adds a pointer cursor to the checkboxes' labels:
Render the webpage and verify that the cursor changes to a pointer when mousing
over the checkbox labels.
2. Add a rule that hides the checkboxes:
Render the webpage and verify the default checkboxes are no longer visible.
3. Add a rule that adds a gray square in front of the checkbox labels:
Render the webpage and verify the checkboxes appear as squares.
4. Add a rule to display a white checkmark with green background when a checkbox is
checked:
Render the webpage and verify that clicking on a checkbox displays a checkmark in
the box.
5. Add a rule to display a gray border around the checkbox that has the focus:
Render the webpage and verify that the last clicked checkbox has a gray border.
Size:
Small
Flavors:
Raspberry
zyBooks
59 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
I HTML I css I
1 <[i!_elds~
2 <legend>Size: </legend>
3 <div>
4 <input id="small" type="radio" name="size" value="small" >
5 <label for ="small" >Small </ label>
6 </div>
7 <div>
8 <input id="medium" type="radio" name="size" value="medium" >
9 <label for ="medium" >Medium</ label>
10 </div>
11 <div>
12 <input id="large" type="radio" name="size" value="large" >
13 <label for ="large" >Large </ label>
14 </div>
15 </fieldseb
16
17 <fieldset>
1 s:l ,-1 ononrl,C1 :::.\/f''\t'"'\C' • / /1 ononrl,
Render webpage Reset code
Your webpage
Size:------------Small
Medium
Large
Flavors:-----------
□ Raspberry
D Grape
D Cherry
D Root Beer
► View solution
Expected webpage
1
Size:------------Small
Medium
Large
Flavors:-----------Raspberry
Grape
Cherry
Root Beer
I PARTICIPATION I . . ACTIVITY 4.5.7: Styling radio buttons and checkboxes.
1) Which label is selected by
input[type=radio] + label?
□
0
2024-10-12, 4:47 p.m.
<input
type="checkbox"><label></
label>
<input
type="radio"><label></
label>
<label></label><input
type="radio">
display:none
display:none
display
input:checked
input[type=checkbox]:focus
input[type=checkbox]:checked
span::before {
content: "Before";
}
<span>Test</span>
Before<span>Test</
span>
<span>BeforeTest</
span>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
60 of 159 2024-10-12, 4:47 p.m.
0
0
0
2) In the exercise above, the default
radio buttons and checkboxes could
have been hidden using the CSS
. Why is hiding the
radio buttons and checkboxes with
not a good idea?
0 Cross-browser support issues.
Screen readers will think the
0 radio buttons or checkboxes
are not visible.
0 The property should
be avoided.
3) Which CSS selector selects only checkboxes
that are checked?
0
0
0
4) What does the DOM look like after the
CSS and HTML below are rendered?
0
0
0
0
0
SHOW EXPECTED
zyBooks
61 ofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
O <span>Test</
span>Before
I CHALLENGE I . ACTIVITY 4.5.1: Styling forms.
5707 04.2065416 qx3zqy7
Start
For the <label> element, set display to inline-block, use a width of 40px, align the text to
the left, and add a margin on the right of 6px. 1 label {
2
I css I HTML I
3 /* Your solution goes here*/
4
5 }
6 form {
7 font : 10pt Arial;
8 background-color : #eee;
9 padding : 10px;
10 }
1 2
Check Next
View your last submission v
3 4
4.6 Using JavaScript with HTML
Basics
□
2024-10-12, 4:47 p.m.
zyBooks
62 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
JavaScript allows webpages to be more interactive. JavaScript can execute in response to user
in~~~ Md-i~lt:er the contents of the web page. Ex: A user clicks on a button, and JavaScript
executes and changes the color of the webpage.
• CSS Forms from W3Schools
The Document ObTect Model (or DOM) is a date'! ~tructure that represen~s all parts of an HTML
doc um~ ~- r ¥iW9~l¥g& wSteob9e~ eacfcWmk~ -~rm[1tRf!\~~11flrl¥1~®1W~Md is created from the
doc u rfl e11igfillThkJ er§ Hl@i [~§Jr:5~6' Kfd-ci@ilififilhlt f a<r®refi@ffl:~eJ l'IJA1fi\1HJitoo@~ Ppr es en tat ion a n d /or
behav.oReplacing Radio Buttons Without Replacing Radio Buttons from SitePoint
A webpage's JavaScript code appears in the <script> element and is executed by the browser's
JavaScript engine. I =~~~i~;~•110" I 4.6.7 • Writing JavaScript within the body of an HTML file.
The JavaScript code below uses the document.writeln() method, which outputs HTML
into the document and alters the DOM.
1. Read the HTML and JavaScript below.
2. Render the webpage to run the JavaScript code that displays a randomly generated
response.
3. Add more responses to the responses array, and render the webpage a few times
until one of your new responses is displayed.
1 <!DOCTYPE html>
2 <html>
3 <head>
4 <title>Magic 8 Ball</title>
5 <meta charset="UTF-8" >
6 </head>
7 <body>
8 <hl>Magic 8 Ball</hl>
9 <script>
10
11 // Possible 8 Ball responses
12 let responses = [ "Without a doubt" , "Ask again later" , "Don't count c
13
14 // Display a randomly chosen response
15 let randomNum = Math .floor(Math.random() * responses .length);
16 document .writeln( "<p>Magic 8 Ball says ... <strong>" + responses [ randon
17
Render webpage
Reset code
□
2024-10-12, 4:47 p.m.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
63 of 159 2024-10-12, 4:47 p.m.
Your webpage
Magic 8 Ball
Magic 8 Ball says ... Ask again later.
► View solution
I PARTICIPATION I . . ACTIVITY 4.6.2: JavaScript Basics.
1) The DOM is created from a
document's HTML.
0 True
0 False
2) The DOM is accessible via the global
object named document.
0 True
0 False
3) document. wri teln ( " <di v >test< /
div>") adds a div element to the
DOM.
0 True
0 False
Window object
□
0
0
0
JavaScript running in a web browser has access to the window object, which represents an open
window document
window window.document document
window
window.location.hostname
window.navigator.userAgent
window.innerWidth
window
window.alert("Hello")
confirm()
window.confirm("Are you sure?")
window.open("https://www.twitter.com/")
you like to see a popup window?");
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
64 of 159 2024-10-12, 4:47 p.m.
browser window. In a tabbed browser, each tab has a o~ect. The o~ectisa
property of the object and can be accessed as or just
Other properties of the object include:
• window.location is a location object that contains information about the window's current
URL. Ex: is the URL'.s hostname.
• window.navigator is a navigator object that contains information about the browser. Ex:
returns the browser's user agent string.
• window.innerHeight and window.innerWidth are the height and width in pixels of the
window's content area. Ex: returns 600 if the browser's content area
is 600 pixels wide.
The object defines some useful methods:
• window.alert() displays an alert dialog box. Ex:
box with the message "Hello".
displays a dialog
• window.confirm() displays a confirmation dialog box with OK and Cancel buttons.
returns true if OK is pressed and false if Cancel is pressed. Ex:
displays a dialog box with the question.
• window.open() opens a new browser window. Ex:
opens a new browser that loads the
Twitter webpage. I PARTICIPATION I . . . ACTIVITY 4.6.3: Using the window obJect.
Use the window.confirm () method to ask if the user would like to see a pop up
window:
l et okPressed = window . confirm ( "Would y
Then render the webpage, and click the OK button when prompted to see a small browser
window created by window. open () . You may need to give your browser permission to
show the popup window since many browsers prevent popups from displaying by default.
□
zyBooks
65 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
HI
<!DOCTYPE html>
<html>
<head>
<title> JavaScript Demo</title>
<meta charset="UTF-8" >
</head>
<body>
<hl> Popup Demo</hl>
<script>
let okPressed = false ;
if (okPressed ) {
let myWindow = window .open ( "" , "width=250, height=100" );
myWindow .document .writeln( "<hl>Hello, Popup!</hl>" );
}
</ script>
,,/h,-.,-h , ,
Render webpage Reset code
Your webpage
Popup Demo
► View solution
I PARTICIPATION I . . ACTIVITY 4.6.4: Window obJect.
1) Can window object properties and
methods be accessed without putting
window. in front of the property or
method?
□
0
2024-10-12, 4:47 p.m.
______);
Document.writeln()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
66 of 159 2024-10-12, 4:47 p.m.
0 Yes
Q No
2) What window object property is
useful for determining if the webpage
is loaded with HTTPS or HTTP?
0 location
0 navigator
0 innerHeight
3) What window object property likely produces the
following output?
document . writeln (window . navigator .
IMoz illa / 5 . 0 (Windows NT 10.0 ; WOW64)
App l eWebKi t / 537 . 36 Chrome / 53 . 0 . 2785.116
0 language
0 userAgent
0 vendor
4) The window method is ideal for
displaying a pop-up advertisement.
0 alert()
0 confirm()
0 open()
Using the console
0
0
0
Modern browsers provide a console that allows the JavaScript code to produce informational and
debugging output for the web developer, which does not affect the functionality or presentation of
the webpage. By default, the console is not visible. The console is viewable in Chrome by pressing
Ctrl+Shift+J in Windows/Linux or Cmd+Opt+J on a Mac.
When a syntax error is present in JavaScript code or a run-time error occurs, the error is only made
visible in the console. The figure below shows the syntax error created when the developer
accidentally typed with a capital "D". The console appears underneath the
webpage. Good practice is to leave the console open while writing and testing JavaScript code.
Figure 4.6.1: Chrome console showing a syntax error on line 11 of test.html.
"<p>Hello, JavaScript!</p>");
console console
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
67 of 159 2024-10-12, 4:47 p.m.
0 JavaScript Demo X + 0 □
f- ➔ C © File J C:/ temp/ t est html *
JavaScript Demo
Elements Console Sources Network » 0 1 0
[1B CS, top "' 0 Fi lter Default levels "' No Issues
0 I.Jncaugh TypeE r ror : Doc ment. wr ite_n is n a f unction
at test.html: 11
>
t est.html:11 / I
X
X
0
Syntax error Fi le name line number
< !DOCTYPE html>
<html l ang="en">
<head>
<meta charset= "UTF- 8 ">
<title>JavaScript Demo</ title>
< / head>
<body>
<hl>JavaScript Demo</ hl>
<script>
Document . write l n ( " <p >Hello , JavaSc
</ script>
< / body>
< / html>
The browser provides a object with a defined set of methods, or API, that the c onsoH
object supports. An AP/ (Application Programming Interface) is a specification of the methods and
objects that defines how a programmer should interact with software components. The console
API includes the following methods:
• console.log() displays informational data to the console.
• console.warn() displays warnings to the console. The browser usually has a special indicator
to differentiate a warning from the standard log message. Ex: A yellow warning box.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
68 of 159 2024-10-12, 4:47 p.m.
• console.error() displays errors to the console. The browser usually has a special indicator to
differentiate an error from a warning or the standard log message. Ex: A red error box.
• console.dir() displays a JavaScript object to the console. The browser usually supports a
method for compactly representing the object. Ex: A hierarchical tree representation allowing
a developer to expand and collapse the object contents.
Figure 4.6.2: console.log() output example.
When the web browser console is open, both the webpage and the console are
simultaneously visible.
0 Co sole Output X +
f- ➔ C (D File I C:/ temp/ tes .h ml
Fruit I Like:
• Apples
• Oranges
Elemen s Co sole Sources
(IE] ~ op -. 0 Fil er
Iles sage fo r the console.
► 1 ... / ul
>
Console output
0
Network Perfotmance ))
Defau It levels -.
□
*
0
No Issues
test.html:17
test.html:18
console.log() can print both strings and concise representations of HTML elements.
X
X
0
);
getElementsByTagName("ul")[0]);
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
69 of 159 2024-10-12, 4:47 p.m.
<body>
<p>
Fruit I Like:
</p>
<ul>
<li>Apple s </li>
<li>Oranges</ li>
</ul>
<script>
con sol e . l og ("Message for the console ." )
con sol e . l og (document. getElementsByTagNa
</script>
</body>
I PARTICIPATION I ACTIVITY 4.6.5: Console methods.
Match the console method with the best use for that method.
If unable to drag and drop, refresh the page.
warn() log() dir() error()
Helping determine why code isn't
working as expected.
Displaying a structured JavaScript
object.
Checking that assumptions in code
are correct.
Reporting unexpected problems.
Reset
Loading JavaScript from an external file
□
Including JavaScript directly within an HTML file is common practice when using small amounts of
JavaScript. However, writing JavaScript directly within the document may lead to problems as a
webpage or website gets larger.
<script>
<script> src
"bootstrap.js"></
</script>
<script /> <script src="bootstrap.js" />
</script>
Web server
A piece of text.
Some more text.
Web browser
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
70 of 159 2024-10-12, 4:47 p.m.
Good practice is to use elements to load JavaScript from an external file rather than
writing the JavaScript directly within the HTML file. The element's attribute specifies
a JavaScript file to load.
Example 4.6.1: Loading JavaScript from an external file.
<script src="boots
script>
A common error when loading an external JavaScript file is to forget the closing
trying to use a self-closing tag as in
modern browsers require a closing tag.
I PARTICIPATION I . . ACTIVITY 4.6.6: Loading an external JavaScript file.
index.html
< !DOCTYPE html>
<html>
<title>JavaScri pt Example</ title>
<script src="file.js" >< / script>
<body>
<p >A p i ece of text. </ p >
<img src="dog.jpg" a l t ="dog">
<p >Some more text. </ p>
</ body>
</ html>
file .js
a l ert ("Press enter to continue." );
Animation content:
The following code snippets are displayed:
Index.html:
<!DOCTYPE html>
tag or
. All
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
71 of 159 2024-10-12, 4:47 p.m.
<html>
<title>JavaScript Example</title>
<script src="flle.js"></script>
<body>
<p>A piece of text.</p>
<img src="dog.jpg" alt="dog">
<p>Some more text.</p>
</body>
</html>
flle.js:
alert("Press enter to continue.");
A web browser and a web server are also shown.
Step 1:
index.html code snippet is displayed coming from the web server when the web browser
requests the code.
Step 2:
The code line" <script src="flle.js"></script>" is highlighted, which indicates to the browser that
the browser should load JavaScript from an external file.
Step 3:
The web browser requests flle.js from the web server.
Step 4:
The code in flle.js "alert("Press enter to continue.");" is highlighted, and a box saying "Please enter
to continue" shows up on the web browser.
Step 5:
After the user presses enter, the web browser finishes reading the javascript file and continues in
the HTML file. The line" <p>A piece of text.</p>" is highlighted, and the line "A piece of text."
appears on the web browser window.
Step 6:
The line " <img src="dog.jpg" alt="dog">" is highlighted, and a request is shown being made to the
web server for the "dog.jpg" file. The image is then shown on the web browser under the "A piece
of text" line.
Step 7:
The web browser finishes reading the HTML file, highlighting the line "<p>Some more text.</p>",
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
72 of 159 2024-10-12, 4:47 p.m.
and showing "Some more text." on the web browser, under the dog image.
Animation captions:
1. The web server sends index.html to the web browser.
2. Web browser reads the HTML file. The <script> tag with src attribute indicates the browser
should load JavaScript from an external file.
3. Web browser requests flle .js from the web server.
4. Web browser reads and executes the JavaScript file. The alert() function displays a dialog
box and waits for the user to press enter.
5. After the user presses enter, web browser finishes reading the JavaScript file and continues
reading the HTML file.
6. Web browser requests the image file, and the web server responds with the image file.
7. Web browser finishes reading HTML file.
I PARTICIPATION I . . ACTIVITY 4.6.7: Downloading JavaScript files.
1) A web browser will process the HTML
following a script element that uses
an external JavaScript file while the
browser waits for the web server to
return the JavaScript file.
0 True
0 False
2) One script element can be used to
include both inline JavaScript and a
reference to an external JavaScript
file.
0 True
0 False
3) One script element can be used to
reference multiple external JavaScript
files.
0 True
0 False
Loading JavaScript with async and defer
□
0
0
0
<script>
<script> async defer
<script>
<script>
Web server
A piece of text.
Some more text.
Web browser
>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
73 of 159 2024-10-12, 4:47 p.m.
Although the
include the
element can be included anywhere in the head or body, good practice is to
element in the head with the or attributes set.
The element's async attribute allows the browser to process the webpage concurrently
with loading and processing the JavaScript.
The element's defer attribute allows the browser to load the webpage concurrently with
loading the JavaScript, but the JavaScript is not processed until the webpage is completely loaded.
I PARTICIPATION I 4 6 8 U . h · b · h h · I ACTIVITY .. : sing t e async attn ute wit t e <script> e ement.
< !DOCTYPE h tml >
<html>
index.html
<title>Async Example</title>
<script src=" fi l e . js" async></script>
<body>
<p >A p i ece of text. </p>
<img src="dog . jpg" alt="dog ">
<p >Some more text . </p >
</body>
</html>
file.js
a l ert (" Press enter to continue ." ) ;
Animation content:
The following code snippets are displayed:
Index.html:
<!DOCTYPE html>
<html>
<title>JavaScript Example</title>
<script src="flle.js" async></script>
<body>
<p>A piece of text.</p>
<img src="dog .jpg" alt="dog">
<p>Some more text.</p>
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
74 of 159 2024-10-12, 4:47 p.m.
</body>
</html>
file.js:
alert("Press enter to continue.");
A web browser window and a web server window are also shown.
Step 1:
Index.html code snippet is displayed coming from the web server when the web browser
requests it. The line
" <script src="file.js" async></script>" is highlighted. The web browser then makes a request to
the web server for the file.jsm but keeps on going through the HTML code without waiting for the
requested file to load. The code" <p>A piece of text.</p>" is then highlighted and the text "A piece
of text." appears on the web browser.
Step 2:
The code" <img src="dog.jpg" alt="dog">" is then highlighted and the web browser makes a
request to the web server for the dog.jpg file. At the same time, the web server returned the file.js
file.
Step 3:
The web browser now displays the text "dog.jpg". Following is an alert window saying "Press
enter to continue.".
Step 4:
The code "alert("Press enter to continue.");" is highlighted. Once the user presses enter, the
"dog.jpg" file finishes loading and displays the correct image.
Step 5:
The web browser finishes reading the HTML file, highlighting the line "<p>Some more text.</p>".
The text "Some more text." appears on the web browser window, below the dog image.
Animation captions:
1. Web browser reads index.html. <script> tag's async attribute causes browser to continue
reading HTML without waiting for JavaScript file to load.
2. Web server responds with file.js while the browser requests the image file.
3. Web browser begins reading and executing the JavaScript file and pauses reading the
HTML file. The web server concurrently responds to the image request.
4. After the user presses enter, web browser finishes reading the JavaScript file and continues
processing the HTML file by displaying the dog.jpg image that was received.
5. Web browser finishes reading HTML file.
Web server
A piece of text.
Some more text.
Web browser
>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
75 of 159 2024-10-12, 4:47 p.m.
I =~~~~~;~•110" I 4 6 9 Using the defer attribute with the <script> element
index.html
< !DOCTYPE h t ml >
<html>
<title>Defer Example</ title>
<script src=" fi l e.js " defer>< / script>
<body>
<p >A p i ece of text. </p>
<img src="dog . jpg" alt="dog ">
<p >Some more text . </p >
</body>
</html>
file.js
a l ert (" Press enter to continue ." ) ;
Animation content:
The following code snippets are displayed:
Index.html:
<!DOCTYPE html>
<html>
<title>JavaScript Example</title>
<script src="flle.js" defer></script>
<body>
<p>A piece of text.</p>
<img src="dog .jpg" alt="dog">
<p>Some more text.</p>
</body>
</html>
flle.js:
alert("Press enter to continue.");
A web browser window and a web server window are also shown.
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
76 of 159 2024-10-12, 4:47 p.m.
Step 1:
Index.html code snippet is displayed coming from the web server when the web browser
requests the code. The line
" <script src="flle.js" defer></ script>" is highlighted. The web browser then makes a request to
the web server for the flle.jsm but keeps on going through the HTML code without waiting for the
requested file to load. The code" <p>A piece of text.</p>" is then highlighted and the text "A piece
of text." appears on the web browser.
Step 2:
The code" <img src="dog.jpg" alt="dog">" is then highlighted and the web browser makes a
request to the web server for the dog.jpg file. At the same time, the web server returned the flle .js
file.
Step 3:
The web browser now displays the text "dog .jpg". The web browser does not process the flle.js
due to the defer attribute so the web browser continues to process the HTML. The dog image is
displayed on the web browser. The web browser finishes reading the HTML file, highlighting the
line "<p>Some more text.</ p>". The text "Some more text." appears on the web browser window,
below the dog image.
Step 4:
After the web browser has finished processing the HTML file, the web browser then goes to
process the flle.js file. An alert window is displayed on the web browser with the text "Please
enter to continue.".
Step 5:
Once the user presses enter, the web browser finishes reading the Javascript file, and the alert
window disappears.
Animation captions:
1. Web browser reads index.html. <script> tag's defer attribute causes browser to continue
reading HTML without waiting for JavaScript file to load.
2. Web server responds with the JavaScript file while the browser requests the image file.
3. Web browser does not immediately process the JavaScript file due to the defer attribute.
Instead, the browser continues to process the HTML.
4. After reading the HTML file, the web browser reads and executes the JavaScript file.
5. After the user presses enter, web browser finishes reading the JavaScript file.
I PARTICIPATION
ACTIVITY I 4.6.10: Loading JavaScript. □
defer
async
defer
async
let a=10;
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
77 of 159 2024-10-12, 4:47 p.m.
1) The browser interprets the
and attributes for the script
element the same.
0 True
0 False
2) When using a third-party JavaScript
library, the attribute is usually
better than the attribute.
0 True
0 False
3) When writing custom JavaScript, the
defer attribute is usually better than
the async attribute.
0 True
0 False
4) Most webpages on the internet were
written before the defer or async
attributes were standardized.
0 True
0 False
Miniflcation and obfuscation
To reduce the amount of JavaScript that must be downloaded from a web server,
developers often minify a website's JavaScript. Minification or minimization is the
process of removing unnecessary characters (like whitespace and comments) from
JavaScript code so the code executes the same but with fewer characters.
Miniflcation software may also rename identifiers into shorter ones to reduce space.
Ex: let t o t a lReturns = lo; may be converted into I._. U .J.. V / -
Minified JavaScript is typically stored in a file with a ".min.js" file extension. An
example of minified code from the Bootstrag groject is shown below.
0
0
0
0
c,a.fn.button.function()
document).on("bs.button.data-api",
){d=a(c.target).closest(".btn");
input[radio"],
zyBooks
78 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
II Excerpt from bootstrap .min.js
a . fn . button=b , a . fn . button . Constructor=c , a . fn . button . noConflict=function ()
{
return a . fn . button=d , this }, a (document ) . on ("click.bs.button.data-api" ,
' [ data-toggle"="but ton "] ' , function ( c ) { let d =a ( c . target ) . c l osest (". btn" ) ;
b . call (d , "toggle" ), a (c . target ) . is ( 'input [type=" radio " ] ,
A JavaScript obfuscator is software that converts JavaScript into an unreadable
form that is very difficult to convert back into readable JavaScript. Developers
obfuscate a website's JavaScript to prevent the code from being read or re-purposed
by others. Obfuscated code may also be minified and appear in a ".min.js" file.
I CHALLENGE I . . ACTIVITY 4.6.1: JavaScript with HTML.
570104.2065416.qx3zqy7
Start
Use the document object's writeln() method to display the current URL in a <p> element in
the webpage. Hint Provide document.writeln() with a string argument that uses the plus
operator,+, to join p's starting tag, window.location.href, and p's ending tag.
1 <hl>Demo</hl>
2 <script>
3 document .writeln(/* Your solution goes here*/);
4 </ script>
1
Check Next
View your last submission v
2
□
2024-10-12, 4:47 p.m.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
79 of 159 2024-10-12, 4:47 p.m.
Exploring further:
• Window object from MDN
• Console ob ject from MDN
• asy:nc vs defer attributes from Growing with the Web
• JavaScript miniflers: javascriQt-minifler.com and jscompress.com
• JavaScript obfuscators: javascriptobfuscator.com and JS-obfus
4.7 Document Object Model (DOM)
DOM structure
The Document Object Model (DOM) is a data structure corresponding to the HTML document
displayed in a web browser. A DOM tree is a visualization of the DOM data structure. A node is an
individual object in the DOM tree. Nodes are created for each element, the text between an
element's tags, and the element's attributes.
• The root node is the node at the top of the DOM.
• A child node is the node directly under another node. A node can have zero, one, or more child
nodes (children).
• A parent node is the node directly above another node. All nodes, except the root node, have
one parent node. I PARTICIPATION
ACTIVITY I 4.7.1: Creating the DOM from HTML.
<html>
<title>Moby-Di ck</ title>
<body>
<p c l ass ="big" >Call me I shmael. Some years ago . . . </ p>
<p >There now is your i nsul ar c ity of the Manhattoes .. . </ p>
</ body>
</ html>
html
Legend
areen - element node
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
80 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following code snippet is displayed:
<html>
<title>Moby-Dick</title>
<body>
<p class="big">Call me Ishmael. Some years ago ... </p>
<p> There now is your insular city of the Manhattoes ... </p>
</body>
<head>
A legend contains a green element node, a blue text node, and a pink attribute node.
A tree is shown. At the top of the tree is an element node named html with two child element
nodes: head and body. Head has a child element node title, which also has a child text node
"Moby-Dick". Body has two p child element nodes. The first p node has an attribute node
connected to it labeled class=big, and a child text node that reads: "Ca ll me Ishmael. Some years
ago ... ". The second p node has only one child text node that reads : "There now is your insular city
of the Manhattoes ... ".
Step 1:
The web browser reads the HTML and creates the DOM's root node from the html element.
Step 2:
Although no head element exists in the HTML, a head node is created as a child of the html node.
The title node is added as a child of the head node.
Step 3:
A text node is created for the title element's text content.
Step 4:
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
81 of 159 2024-10-12, 4:47 p.m.
The body node is a child of the root node. The p element is contained within the body element, so
the p node is a child of the body node.
Step 5:
An attribute node is created for the p element's class attribute. Attribute nodes are always
connected to element nodes and are not considered children.
Step 6:
The browser continues reading the HTML and creating DOM nodes.
Animation captions:
1. The web browser reads the HTML and creates the DOM's root node from the html element.
2. Although no head element exists in the HTML, a head node is created as a child of the html
node. The title node is added as a child of the head node.
3. A text node is created for the title element's text content.
4. The body node is a child of the root node. The p element is contained within the body
element, so the p node is a child of the body node.
5. An attribute node is created for the p element's class attribute. Attribute nodes are always
connected to element nodes and are not considered children.
6. The browser continues reading the HTML and creating DOM nodes.
An idealized representation of the DOM tree excludes text nodes that only contain whitespace.
However, a web developer occasionally needs to know the complete DOM tree, which includes
whitespace as shown in the example below.
Figure 4.7.1: Complete DOM tree visualization with whitespace text nodes.
< !DOCTYPE html>
<html>
<head>
<title>Olympic medals </title>
</head>
<body>
<ol>
<li>Gold</ li>
<li>Silver</li>
<li>Bronze</li>
</ol>
</body>
</html>
title>
running broadway shows:</p>
"www.thephantomoftheopera.com/">The Phantom
"www.chicagothemusical.com/">Chicago</a></li>
"www.thelionking.com/">The Lion King</a></li>
"www.catsthemusical.com/">Cats</a></li>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
82 of 159 2024-10-12, 4:47 p.m.
◄·ilf&
I PARTICIPATION I
ACTIVITY 4.7.2: DOM structure.
Refer to the HTML and resulting DOM below.
< !DOCTYPE html>
<html>
<head>
<title>Broadway Show Lengths </ tit
</ head>
<body>
<p id="the_paragraph " >Longest run
<ol>
<li><a href="http://www.thepha
of the Opera</ a >< / li>
<li><a href="http://www.chicag
<li><a href="http://www.thelio
<li><a href="http://www.catsth
</ ol>
</ body>
</ html>
www.thcphantomofthcopcra.com
□
www.thclionking.com
href
www .chicagothemusical.com www .catsthemusical.com
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
83 of 159 2024-10-12, 4:47 p.m.
◄111- • 1) Which node is the root of the DOM
tree?
0 html
0 a
0 body
2) Which of the following DOM nodes is
never a child node?
0 Element node
0 Attribute node
0 Text node
3) How many child nodes does the p
element have?
0 0
0 1
0 2
4) How many child nodes does the ol
element have?
0 0
0 2
0 4
5) Which DOM nodes never have child
nodes?
0 Element nodes
0 Attribute nodes only
0 Text nodes and attribute nodes
Viewing the DOM in Chrome
The Chrome DevTools can display an HTML document's DOM by pressing
Ctrl+Shift+C on Windows or Ctrl+Option+C on a Mac. The DOM may differ from the
HTML. Ex: The <head> element may be missing from the HTML file but is visible in
0
0
0
0
0
<meta> <title>
<head>
document
id
document.getElementById("early_languages")
document.getElementsByTagName("li")
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
84 of 159 2024-10-12, 4:47 p.m.
the DOM below because
element.
Cl Olympic medals X
C I [j fi le:/1/C:/temp/medal s.html
l. Gold
2_ Silver
3. B ronze
Ci oJ
== $1)
and elements are always placed in the
□ X
Elemen s Console/o_ ces etwork Performance Memory Application » : X
----- Styles Computed Event Listeners »
• <head>
<meta charset="UT -8
<tit e>Olympi c edal s</ tit_e
</ head
• <body>
• <o >
< i Gol d</ li
<-i SLver </ i >
< i Bronze</ li
</ ol
</ body
</ html
<!doctype>
Filter :hov .els
Searching the DOM
JavaScript is commonly used to search the DOM for a specific node or set of nodes and then
change the nodes' attributes or content. Ex: In an email application, the user may click a Delete
button to delete an email. The JavaScript must search the DOM for the node containing the email's
contents and then change the contents to read "Email deleted".
The object provides five primary methods that search the DOM for specific nodes:
1. The document.getE/ementByld() method returns the DOM node whose attribute is the
same as the method's parameter.
Ex: returns the p node in the HTML
below.
2. The document.getE/ementsByTagName() method returns an array of all the DOM nodes
whose type is the same as the method's parameter.
Ex: returns an array containing the four Ii
nodes from in the HTML below.
class
document.getElementsByClassName("traditional")
ol class
document.querySelectorAll("li a")
querySelector()
querySelectorAll()
document.querySelector("li")
getElementById() querySelector()
Early Languages</title>
></script>
Early programming languages still in use:
"w.wiki/4ZAb">Fortran - 1954</a></li>
"w.wiki/4NzE">Lisp - 1958</a></li>
dom.js
getElementById("early_languages");
querySelectorAll("li");
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
85 of 159 2024-10-12, 4:47 p.m.
3. The document.getE/ementsByC/assName() method returns an array containing all the DOM
nodes whose attribute matches the method's parameter.
Ex:
containing the node with the
returns an array
attribute matching the word traditional.
4. The document.querySelectorA/1() method returns an array containing all the DOM nodes that
match the CSS selector passed as the method's parameter.
Ex: returns an array containing the two anchor
nodes in the HTML below.
5. The document.querySe/ector() method returns the first element found in the DOM that
matches the CSS selector passed as the method's parameter. expects
the same types of parameters as but only returns the first element
found while navigating the DOM tree in a depth-first traversal.
Ex: returns the Ii node about Fortran.
A DOM search method name indicates whether the method returns one node or an array of nodes.
If the method name starts with "getElements" or ends in "All", then the method returns an array,
even if the array contains one node or is empty. and
either return a single node or null if no node matches the method arguments. I PARTICIPATION I . . ACTIVITY 4.7.3: Searching the DOM by 1d and by element.
PE h t ml >
ang="en ">
< ! DOCTY
<html 1
<head
<
>
title>Earl y Programming Lan
<s cript
</ hea
src="dom.js " defer><
d>
<bod '.J >
<p i d="earl y_l anguages ">
Earl y programmi ng l anguag
< / p>
<o 1 c l ass=" tradi t i onal">
<li><a href=" https://w . wi
<li><a href=" https://w.wi
<li>COBOL
<li>BAS IC
< / ol>
</ bod
</html>
y >
- 1 95 9</ li>
- 1964</li>
dom
l et para = document . getElem
l et li stitems = document . qu,
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
86 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following code is displayed.
<!DOCTYPE html>
<html lang="en">
<head>
<title>Early Programming Languages</title>
<script src="dom.js" defer></script>
</head>
<body>
<p id="early_languages">
Early programming languages still in use:
</p>
<ol class="traditional">
<li><a href="https://w.wiki/4ZAb">Fortran - 1954</a></li>
<li><a href="https://w.wiki/4NzE">Lisp -1958</a></li>
<li>COBOL - 1959</li>
<li>BASIC -1964</li>
</ol>
</body>
</html>
Step 1: The line of code reading "<script src="dom.js" defer></script>" is highlighted. dom.js is
displayed as follows.
let para = document.getElementByld("early_languages");
let listltems = document.querySelectorAll("li");
Step 2: The line of code assigning the para variable is highlighted and connects to the <p>
element.
Step 3: The line of code assigning the listltems variable is highlighted and connects to the <Ii>
elements in the HTML.
Animation captions:
1. The webpage loads dom.js with the defer attribute, so the code in dom.js only executes
after the webpage and DOM are finished loading.
2. dom.js calls getElementByld() to find the paragraph with id "early_languages".
3. dom.js calls querySelectorAII() to find all four Ii elements.
getElementsByClassName()
querySelectorAll()
</title>
"styles.css">
script>
in development:
content</li>
presentation</li>
functionality</li>
"en.wikipedia.org/wiki/Web_development">More
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
87 of 159 2024-10-12, 4:47 p.m.
HTMLCollection and Nodelist
Technically, getElementsByTagName () and
return an HTMLCollection, and querySelec returns a NodeList.
HTMLCollection is an interface representing a generic collection of elements. A
NodeList is an object with a collection of nodes. HTMLCollection and NodeList both
act like an array Both have a length property, and elements can be accessed with
braces. Ex: el emen tLi st [ o J is the ftrst element in an HTMLCollection or NodeList.
I PARTICIPATION I
ACTIVITY 4.7.4: DOM traversal .
Refer to the HTML below.
< !DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Web development l anguages<
<link rel="stylesheet" href="styl
<script src="dom. j s " defer></ scri:
</head>
<body>
<p class="special">
Languages used i n web developm
</p>
<ul id="list">
<li id="item-l" >HTML for conte
<li id="item-2" >CSS for presen
<li id="item-3" >JavaScript for
</ul>
<p class="special">
<a href="https://en.wikipedia.
i nformati on</a >
</p>
</body>
</html>
Select the element(s) or value returned by the given search method.
1) document . getEl ementByi d ("list" )
0 ul element
0 First Ii element
□
0
document.getElementsByTagName("li")
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
88 of 159 2024-10-12, 4:47 p.m.
2)
0 All Ii elements
0 ul element
0 First Ii element
0 All Ii elements
3) document . getEl ementsByTagName ( 11ul 11 )
[O l
0 ul element
0 First Ii element
0 null
4) document . querySe l ectorAll ( 11 li 11 )
5)
6)
7)
0 ul element
0 First Ii element
0 All Ii elements
document . querySe l ector ( 11 #list 11 )
0 ul element
0 First Ii element
0 null
document . querySe l ector ( 11 .special 11 )
0 First p element
0 La st p element
0 Both p elements
document . querySe l ector ( 11 item-3 11 )
0 ul element
0 Last Ii element
0 null
Modifying DOM node attributes
0
0
0
0
0
0
After searching the DOM for an element, JavaScript may be used to examine the element's
attributes or to change the attributes. By modifying attributes, JavaScript programs can perform
src
src
style
<a href="https://www.nasa.gov/" id="nasa_link">NASA</a>
href id
nasaUrl = document.getElementById("nasa_link").href
nasaUrl "https://www.nasa.gov/" href
document.getElementById("nasa_link").href = "https://www.spacex.com/"
document.getElementById("nasa_link").removeAttribute("href")
I love the outdoors!
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
89 of 159 2024-10-12, 4:47 p.m.
actions including:
• Change which image is displayed by modifying an img element's attribute.
• Determine which image is currently displayed by reading the img element's attribute.
• Change an element's CSS styling by modifying an element's attribute.
Every attribute for an HTML element has an identically named property in the element's DOM node.
Ex: 1· " '"T7\ SA-:/u:.- hasa
corresponding DOM node with properties named
as both a getter and a setter.
and . Each attribute property name acts
• Getter: Using the property name to read the value allows a program to examine the attribute's
value. Ex:
the string
attribute.
assigns
from the anchor element's
• Setter: Writing to a property allows a program to modify the attribute, which is reflected in the
rendered webpage. Ex:
changes the element's hyperlink to the SpaceX URL.
An element's attribute can be removed using the element method removeAttribute(). Ex:
removes the
link from the anchor element so that clicking on the HTML element no longer performs an action. I PARTICIPATION I . . . ACTIVITY 4.7.5: Modifying DOM node attributes.
<body>
<img src="mountai n.jpg "
a l t ="Mountai n photo ">
<p styl e =" co l or: green ">
I love the outdoors!
</ p>
</ body>
l et i mg = document . querySe l ector ("img " );
img . src = "mountain . jpg" ;
img . alt = "Mountain photo " ;
l et p = document . querySe l ector ( "p " );
p . styl e = " co l or : green " ;
□
tho n11trlnnrcl
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
90 of 159 2024-10-12, 4:47 p.m.
Step 7: The following code is displayed.
<body>
<img src="mountain.jpg"
alt="Mountain photo">
<p>
I love the outdoors!
</p>
</body>
A photo of a lake is displayed with the text "I love the outdoors!" beneath the photograph.
Step 2: The following code is added.
let img = document.querySelector("img");
img.src = "lake.jpg";
img.alt = "Lake photo";
let p = document.querySelector("p");
p.style = "color: green";
The first block of code is edited to read the following.
<body>
<img src="mountain.jpg"
alt="Mountain photo">
<p>
I love the outdoors!
</p>
</body>
A photo of a mountain is displayed with the text "I love the outdoors!" beneath the photograph.
Step 3: The following lines of code are highlighted.
let p = document.querySelector("p");
p.style = "color: green";
The first block of code is edited to read the following.
<body>
<img src="mountain.jpg"
alt="Mountain photo">
script>
>
"status" width="200"
"route to the moon">
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
91 of 159 2024-10-12, 4:47 p.m.
<p style="color: green">
I love the outdoors!
</p>
</body>
The line of text reading "I love the outdoors!" is now displayed in a green font.
Animation captions:
1. The webpage shows a photo of a lake with a sentence underneath.
2. Changing the img element's src attribute causes the webpage to replace lake.jpg with
mountain.jpg.
3. Setting the p element's style attribute changes the paragraph's CSS styling, making the text
green.
IAP ACRTTIVICITIPYA TION I 4 .7. 6 : Re a d"i ng an d mo d"I fy i•n g DOM no d e attn" b ute va Iu es.
Refer to the HTML below.
< !DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Ori on mission</title>
<script src="dom. j s " defer></scri:
</head>
<body>
<hl>Ori on Moon Mission Update</hl
<img src="inFlight.png" id="statu
alt="Image of spaceship en r
</body>
</html>
1) Enter the missing attribute to make the
image display success.png.
let pie =
document . getEl ementByi d ("status" );
pie . __ = "success.png" ;
Check Show answer
2) Enter the node and attribute required to
□
0
0
document.querySelector("p").textContent = "$25.99";
<p>$25.99</p>
document.querySelector("p").innerHTML = "<strong>$25.99</strong>";
<p><strong>$25.99</strong></p>
innerHTML textContent
textContent
innerHTML
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
92 of 159 2024-10-12, 4:47 p.m.
read the current image name.
let p i e =
document . getEl ementByi d ("status" );
if ( __ != "success .png" ) {
a l ert ("Wrong picture !" );
Check Show answer
3) Enter the method name to remove the
image's width attribute.
let p i e =
document . getEl ementByi d ("status" );
p i c . __ ("width" );
Check Show answer
Modifying DOM node content
After searching the DOM for an element, JavaScript may be used to examine or change the
element's content.
Two common properties are used to get or set an element's content:
1 . The textContent property gets or sets a DOM node's text content. Ex:
changes the
paragraph to
2. The innerHTML property gets or sets a DOM node's content, including all of the node's
children, using an HTML-formatted string. Ex:
changes the paragraph to 1g></ p >.
0
The property uses an internal parser to create any new DOM nodes ...... - ....... ,.... - - ..... - - ,
however, only creates or changes a single text node. For setting an element's text, is
somewhat faster than because no HTML parsing is performed.
I PARTICIPATION I 4 7 7 M d"f • b • h C d . HTML ACTIVITY . . : o I ying a we page wit text ontent an inner . □
p.textContent = "Most common girl names in 2020:";
let ol = document.querySelector("ol");
ol.innerHTML = "<li>Emma</li><li>Olivia</li><li>Ava</li>";
2. Olivia
3. Ava
<p>
Most common girl names in 2020:
</p>
<ol>
<li>Emily</li>
<li>Hannah</li>
<li>Madison</li>
</ol>
</body>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
93 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following HTML is displayed:
<body>
<p>
Most common girl names in 2020:
</p>
<ol>
<li>Emily</li>
<li>Hannah</li>
<li>Madison</li>
</ol>
</body>
The following JavaScript is displayed:
let p = document.querySelector("p");
p.textContent = "Most common girl names in 2020:";
let ol = document.querySelector("ol");
ol.innerHTML = "<li>Emma</li><li>Olivia</li><li>Ava</li>";
Step 1: The line of code assigning p.textContent changes the HTML p element to read "Most
common girl names in 2020:" and displays the text in the browser.
Step 2: The line of code assigning ol.innerHTML changes the HTML Ii elements to the new names
Emma, Olivia, and Ava. The new names replace the previous names in the browser.
firstChild.nodeValue
document. getElementById("saleprice").firstChild.nodeValue = "$25.99"
innerText
changePage()
removeAttribute() hidden
lastPlanet
p4
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
94 of 159 2024-10-12, 4:47 p.m.
Animation captions:
1. Assigning the textContent property replaces the paragraph's text.
2. Assigning the innerHTML property replaces the entire list.
Less common ways to change node content
The node Value property gets or sets the value of text nodes. As the DOM tree represents
textual content separately from HTML elements, the textual content of an HTML element is
the first child node of the HTML element's node. So, to access the textual content of an
HTML element within the DOM, firstChilc
the HTML's element's first child.
is used to access the value of
Ex:
getElementByid ( "salepri
7. Gets the DOM node for the element with id "saleprice".
2. Uses first child to access the textual content node for the element.
3. Uses n ode Value to update the content.
The innerText property gets or sets a DOM node's rendered content. is similar
to text Content, but innerText is aware of how text is rendered in the browser. Ex: In
<p > Testing one</p >, text Content returns "Testing one" with spaces, but
innerText returns ''Testing one" with the spaces collapsed into a single space.
Modify the DOM nodes.
An HTML element using the hidden attribute is not displayed by the web browser.
Add JavaScript in the changePag
button does the following:
function so that clicking on the Use Current/.
1. Uses removeAttribute ( ; to remove the attribute from the paragn
p2, causing the paragraph to become visible.
2. Uses the textcontent property of the span with id to change
farthest planet to "Neptune".
3. Uses the innerHTML property of the paragraph with id to add a link:
en.wikipedia.org/wiki/Pluto">Source</a>
getElementById()
Pluto was discovered in 1930 and designated as a planet.
planet
Pluto was discovered in 1930 and designated as Pluto is the farthest planet from the Sun.
Use Current Astronomy
zyBooks
95 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
<a href="https://en.wikipedia.org/wiki/Pluto">Source</a>
Use an appropriate DOM search method like document. getElementByid () to a
nodes.
HTML I JavaScript J
1 <1bodyp
2 <hl>The farthest planet</hl>
3
4 <p id="pl" >Pluto was discovered in 1930 and designated as a planet. </p>
5 <p id="p2" hidden >In 2006, Pluto was reclassified as a dwarf planet. </p>
6 <p id="p3" ><span id="lastPlanet" >Pluto</span> is the farthest planet from the s
7 <p id=" p4" ></p>
8
9 <i nput type="button" value="Use Current Astronomy" >
10 </body
11
Render webpage Reset code
Your webpage
The farthest planet
Pluto is the farthest planet from the Sun.
[ Use Current Astronomy ]
► View solution
I PARTICIPATION I
Expected webpage
I
The farthest plan,
des
S·
[ ]
n
2024-10-12, 4:47 p.m.
<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Sitcoms</title>
<script src="sitcom.js" defer></script>
</head>
<body>
<p>My <span>favorite</span> TV sitcoms:</p>
<ol>
<li><cite>The Office</cite></li>
<li><cite>Community</cite></li>
<li><cite>The Fresh Prince of Bel-Air</cite></li>
</ol>
</body>
</html>
let span = document.querySelector("span");
__A__ favorite"
Happy cite>";
querySelectorAll
innerHTML
textContent
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
96 of 159 2024-10-12, 4:47 p.m.
I ACTIVITY
4.7.8: Changing DOM node content.
Refer to the HTML and JavaScript below.
sitcom.html
sitcom.js
span ._A_ = "least tavorite" ;
let listitems = document ._B_ ("li" );
for (let item of listitems ) {
item . C = "<cite>Happy Hour</cite
Match the letters to the missing JavaScript property or method.
If unable to drag and drop, refresh the page.
C A B
quer
inne
text
I CHALLENGE I
Reset
n
Start
zyBooks
97 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
I ACTIVITY
4.7.1: Using the Document Object Model.
5707 04.2065416 qx3zqy7
All steps in this Challenge Activity require calling a document method to search the DOM.
Write the JavaScript to assign listNodes with all elements with a class name of
'programming-language'.
HTML I JavaScript j
1 <hl>Top 10 TIOBE index for March 2018: </hl> <!-- https://www.tiobe.com/tiob
2 <ol class="languages-list" >
3 <li class=" programming-language" >Java</li>
4 <li>C</li>
5 <li class=" programming-language" >C++</li>
6 <li class=" programming-language" >Python</li>
7 <li class=" programming-language" >C#</li>
8 <li>Visual Basic .NET</li>
9 <li> PHP</li>
10 <li> JavaScript</li>
11 <li> Ruby</li>
12 <li class=" programming-language" >SQL</li>
13 </ol>
1 2 3 4
Check Next
View your last submission v
Exploring further:
• Document Object Model (DOM). from MDN
4.8 More DOM modification
Accessing nodes
2024-10-12, 4:47 p.m.
let html = document.documentElement; html
parentNode
childNodes
childNodes
children
nextElementSibling
previousElementSibling
childNodes children
children
childNodes
title>
geologic earth:</p>
<li><a href="https://en.wikipedia.org/wiki/Hadean">a></
li>
<li><a href="https://en.wikipedia.org/wiki/Archean">Archean</
a></li>
<li><a href="https://en.wikipedia.org/wiki/
Proterozoic">Proterozoic</a></li>
<li><a href="https://en.wikipedia.org/wiki/
Phanerozoic">Phanerozoic</a></li>
</ol>
</body>
</html>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
98 of 159 2024-10-12, 4:47 p.m.
The JavaScript object document.documentE/ement is the root of the DOM tree. Ex:
assigns the variable with the HTML
document's root node.
DOM nodes have properties for accessing a node's parent, children, and siblings:
1. The parentNode property refers to the node's parent. Ex: In the figure below, the ol node is the
for all Ii nodes.
2. The childNodes property is an array-like collection of objects for each of the node's children.
Ex: In the figure below, the Ii nodes and whitespace text nodes are the ol node's
3. The children property is similar to the except the array contains only element
nodes and no text nodes. Ex: In the figure below, the Ii nodes are the ol node's
4. The nextE/ementSibling property refers to the element node with the same parent following
the current node in the document. Ex: In the figure below, the ol node is the p node's
5. The previousE/ementSibling property refers to the element node with the same parent
preceding the current node in the document. Ex: In the figure below, the p node is the ol
node's
A common error is to use the property instead of the property when
iterating through the items of a list. The property only contains the list items, while the
property also contains the whitespace text nodes between the list items.
Figure 4.8.1: Example HTML for node properties.
< ! DOCTYPE h tml >
<html lang= "en" >
<head>
<meta charset="UTF-8" >
<title>Geol ogi c eons of earth </ti
</head>
<body>
<p >The four geol ogi c eons on eart
<ol>
/Hadean ' >Hadean</ a >< /
!i..rchean" >Arc hean</
</title>
Languages development.</p>
content</li>
presentation</li>
JavaScript functionality</li>
].children[1]
document.documentElement.children[1].parentNode
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
99 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION
ACTIVITY
4.8.1 : Using nextElementSibling, previousElementSibling, and
parentNode.
Refer to the HTML below.
< ! DOCTYPE html >
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Web deve l opmen t l a nguages<
</head>
<body>
<p >La nguages used in web deve l opm
<ul>
<li id="item-l" >HTML for conte
<li id="item-2" >CSS for presen
<li id="item-3" >JavaScri pt for
</ul>
</body>
</html>
Select the HTML element or node referenced by the given property.
7) document . documentElement
0 html
0 body
0 meta
2) document . documentElement . children [ l ]
0 html
0 body
0 title
3) document . documentElement . c hi l d ren [ l ] .
0 p
0 ul
0 One of the Ii elements
4)
0 html
0 body
□
0
0
0
0
previousElementSibling
parentNode
nextElementSibling
childNodes[0]
ol = document.getElementsByTagName("ol")[0];
li = ol.getElementsByTagName("li")[0];
ol.appendChild(li);
ol = document.getElementsByTagName("ol")[0];
items = ol.getElementsByTagName("li");
ol.insertBefore(items[0], items[3]);
removeChild()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
100 of 159 2024-10-12, 4:47 p.m.
0 title
5) document . getEl ementByi d ( 11 item-2 11 ) • pn
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-3
6) document . getElementByid ( 11 item-2 11 ) • pa1
0 Ii with id item-1
0 Ii with id item-2
0 ul
7) document . getEl ementByi d ( 11 i tem-l 11 ) . ne)
0 Ii with id item-1
0 Ii with id item-2
0 Ii with id item-3
8) document . querySel ector ( 11ul 11 ) • c h i l dNoc
0 Ii with id item-1
0 Ii with id item-2
0 text node
Modifying the DOM structure
Various DOM node methods can change a node's location within the DOM or remove nodes:
0
0
0
0
• The appendChild() method appends a DOM node to the object's child nodes. The code below
moves the ordered list's first list item to the last list item of the same ordered list.
• The insertBefore() method inserts a DOM node as a child node before an object's existing
child node. The code below moves the ordered list's first list item before the fourth list item.
• The removeChild() method removes a node from the object's children. The most common
usage pattern is to get a DOM node, n, and call on n's parent passing n as
n.parentNode.removeChild(n)
document
document.createElement("p")
document
document.createTextNode("Hello there!")
x.cloneNode(true) x.cloneNode(false)
cloneNode()
appendChild() insertBefore()
script>
"li");
"Blue");
"ol");
querySelectorAll("li");
true);
itemNodes[2]);
1. Red
2. Green
body
ol
li li
Red Green
li
Blue
colorList
Blue
clonedNode
li
Red
3. Red
4. Blue
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
101 of 159 2024-10-12, 4:47 p.m.
an argument. Ex:
The following methods are for creating new nodes or duplicating existing nodes:
• The method createE/ement() returns a new element node, created from a string
argument that names the HTML element. Ex: creates a
new paragraph node.
• The method createTextNode() returns a new text node containing the text
specified by a string argument. Ex: • -- -- - -
creates the text node with "Hello there!", which can then be appended to an element node.
• The node method cloneNode() returns an identical copy of a DOM node. The method's
boolean argument indicates whether the method should also clone the node's children. Ex:
creates an identical tree rooted at x, but
creates only a single node identical to x. A common error is to forget to modify any id
attributes in the cloned tree. The method does not ensure that new nodes have
unique id attributes.
After creating or cloning a node, the node does not appear in the webpage until the node is
attached to the DOM tree. A programmer must use or to add
the new node to the existing DOM tree. I PARTICIPATION I . . ACTIVITY 4.8.2: Modifying the DOM structure.
example.html
< !DOCTYPE HTML>
<html l ang= "en">
<title>DOM Example</ title>
<script src="script.js" defer>< / script
<body>
<ol>
<li>Red</ li>
<li>Green</ li>
</ol >
</ body>
</ html>
script.js
l et listNode = document . createElement ("li
l et textNode = document . createTextNode ("B
l istNode . appendChild (textNode ) ;
l et colorList = document . querySelector ("o
col orLi st . appendChild (li stNode ) ;
l e t itemNodes = col orLi st . querySe l ectorAl
l et c l onedNode = i temNodes [ 0 ] . c l oneNode (t
col orLi st . i nsertBefore (c l onedNode , itemNo
D
□
□
□ □ □ □
0000
clonedr ode
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
102 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following code is displayed.
example.html
<!DOCTYPE HTML>
<html lang="en">
<title>DOM Example</title>
<script src="script.js" defer></script>
<body>
<ol>
<li>Red</li>
<li>Green</li>
</ol>
</body>
</html>
script.js
let listNode = document.createElement("li");
let textNode = document.createTextNode("Blue");
listNode.appendChild(textNode);
let colorlist = document.querySelector("ol");
colorlist.appendChild(listNode);
let itemNodes = colorlist.querySelectorAll("li");
let clonedNode = itemNodes[0].cloneNode(true);
colorlist.insertBefore( cloned Node, itemNodes[2]);
Step 1: The following lines of code are highlighted.
<ol>
<li>Red</li>
<li>Green</li>
</ol>
A "body" node is created as the head node. An "ol" is connected to the "body" node, and is
connected to two "Ii" listNode objects. The textNode objects "Red" and "Green" are attached to
their respective "Ii" listNodes.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
103 of 159 2024-10-12, 4:47 p.m.
The following ordered list is defined.
1. Red
2. Green
Step 2: The line of code reading "let listNode = document.createElement("li");" is highlighted, and a
node labeled "Ii" is created to represent the listNode. Next, the line of code reading "let textNode =
document.createTextNode("Blue");" is highlighted, and a node labeled "blue" is created to
represent the textNode. Next, the line of code reading "listNode.appendChild(textNode);" is
highlighted, and the "blue" node is attached to the "Ii" node.
Step 3: The following lines of code are highlighted.
let colorlist = document.querySelector("ol");
colorlist.appendChild(listNode);
The listNode created in the previous step is connected to the "ol" node. The browser now reads
the following.
1. Red
2. Green
3. Blue
Step 4: The following lines of code are highlighted.
let itemNodes = colorlist.querySelectorAll("li");
let clonedNode = itemNodes[O].cloneNode(true);
A copy is created of the "Ii" node and its child "Red" node.
Step 5: The line of code reading "colorlist.insertBefore(clonedNode, itemNodes[2]);" is
highlighted. The cloned "Ii" and "Red" nodes are placed between the "Green" and "Blue" nodes. The
browser is updated to read the following.
1. Red
2. Green
3. Red
4. Blue
Animation captions:
1. The HTML file defines an ordered list with two colors.
2. After creating an element node and a text node, the text node is appended to the element
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
104 of 159 2024-10-12, 4:47 p.m.
node. listNode becomes textNode's parent.
3. appendChild() appends listNode to colorlist's child nodes. Since listNode is now attached
to the DOM, the "Blue" list item appears in the browser.
4. The cloneNode() method creates a copy of itemNodes[0] and child, duplicating the "Red" list
item.
5. insertBefore() inserts the cloned "Red" list item before the "Blue" list item, which changes
the DOM.
I PARTICIPATION I . . ACTIVITY 4.8.3: Adding and removing DOM nodes.
If unable to drag and drop, refresh the page.
insertBefore() removeChild() appendChild()
A method on a DOM node which
moves one DOM node to be a
previous sibling to another DOM
node.
A method on a DOM node that
deletes a DOM node from the DOM
tree.
A method on a DOM node that turns
another DOM node into the first
DOM node's last child.
Reset
I PARTICIPATION I . ACTIVITY 4.8.4: Creating new DOM nodes.
1) Which DOM node method creates a
copy of the node and the node's
children?
0 createElement()
0 createTextNode()
□
□
0
document
zyBooks
105 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
0 cloneNode(true)
0 cloneNode(false)
2) Which method creates a
new DOM node for a specific HTML
element?
0 create Element()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(false)
3) Which document method creates a
new DOM node to hold content?
0 create Element()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(false)
4) Which DOM node method creates a
copy of another DOM node, but not
the node's children?
0 create Element()
0 createTextNode()
0 cloneNode(true)
0 cloneNode(false)
1 1~;1~\~~•e I 4.8.1 • Manipulating the Document Object Model.
570104.2065416.qx3zqy7
Start
Assign newElement with a new Ii element. Assign textNode with a new textNode
containing "Alex".
[ HTML I JavaScript j
1 <ul id="list">
2 <li> Jan</li>
3 <li> Ron </li>
0
0
0
□
2024-10-12, 4:47 p.m.
zyBooks
106 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1 2 3
Check Next
View your last submission v
Exploring further:
• Document Object Model (DOM). from MDN
4.9 Event-driven programming
Events and event handlers
An event is an action, usually caused by a user, that the web browser responds to. Ex: A mouse
movement, a key press, or a network response from a web server. Typically, the occurrence and
timing of an event are unpredictable, since the user or web server can perform an action at any
time.
Event-driven programming is a programming style where code runs only in response to various
events. Code that runs in response to an event is called an event handler or event listener.
The web browser supports event-driven programming to simplify handling the many events a
webpage must process. When an event happens, the browser calls the event's specified handlers.
The web browser internally implements the code for detecting events and executing event
handlers.
2024-10-12, 4:47 p.m.
style
"input");
{
function() {
1px green";
function() {
1px blue";
Name:
Answer:
Authur Dent
42
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
107 of 159 2024-10-12, 4:47 p.m.
The example below modifies an input's property, which sets the element's inline CSS styles.
The input's border color changes colors when the input receives the focus or when focus is
removed.
IAP ACRTTIVICITIPYA TION I 4.9.1: Focus and blur event handling.
<p >
<label for="name " >Name: </label>
<input type=" text " i d=" name ">
</p>
<p >
<label for="answer" >Answer: </label>
<input type="number " id=" answer ">
</p>
let inputs document . querySelectorAll ("
for (let i 0 ; i < inputs . length ; i ++)
l et i nput = i nputs [ i ];
input . style . border = " lpx solid red" ;
i nput . addEventListener (" focus " , funct
thi s . styl e . border = " lpx solid gre
} ) ;
i nput . addEventLi stener ("blur " , funct i
thi s . style . border = " lpx solid blu
} ) ;
Animation content:
The following HTML is displayed:
<p>
<label for="name">Name:</label>
<input type="text" id="name">
</p>
<p>
<label for="answer">Answer:</label>
<input type="number" id="answer">
</p>
The following JavaScript is displayed:
let inputs = document.querySelectorAll("input");
□
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
108 of 159 2024-10-12, 4:47 p.m.
for (let i = O; i < inputs.length; i++) {
}
let input = inputs[i];
input.style.border= "7 px solid red";
input.addEventlistener("focus", function() {
this.style.border = "7 px solid green";
});
input.addEventlistener("blur", function() {
this.style.border = "1 px solid blue";
});
The browser shows an input box labeled "Name: " and an input box labeled "Answer: ".
Step 1: The "Name: " input box is clicked. The following lines of code are highlighted:
input.addEventlistener("focus", function() {
this.style.border = "1 px solid green";
});
The "Name: " input box is outlined in green.
Step 2: "Authur Dent" is entered into the "Name: " input box.
Step 3: The "Answer: " input box is clicked. The following lines of code are highlighted:
input.addEventlistener("blur", function() {
this.style.border = "1 px solid blue";
});
The "Name:" input box is outlined in blue, and the following lines of code are highlighted.
input.addEventlistener("focus", function() {
this.style.border = "1 px solid green";
});
The "Answer: " input box is outlined in green.
Step 4: "42" is entered into the "Answer: " input box.
Step 5: The user clicks outside of both input boxes, and the following lines of code are
highlighted.
mousemove keydown
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
109 of 159 2024-10-12, 4:47 p.m.
input.addEventlistener("blur", function() {
this .style.border= "1 px solid blue";
});
The "Answer:" input box is outlined in blue.
Animation captions:
1. User clicks in the Name input box. Browser calls the input element's focus event handler,
which changes the element's style. Browser then gives focus to input box.
2. User key presses are sent to Name input box.
3. User clicks the Answer input box. Browser calls the Name element's blur event handler, then
calls the Answer element's focus handler, and then gives focus to the Answer input box.
4. User key presses are sent to Answer input box.
5. When the user clicks elsewhere, the browser calls the Answer blur event handler.
I PARTICIPATION I . . ACTIVITY 4.9.2: Event-driven programming. □
1) The actions a web browser notices 0
are called event handlers.
0 True
0 False
2) A web developer must implement the 0
code to detect events and call the
appropriate handlers.
0 True
0 False
3) A mouse click causes an event. 0
0 True
0 False
Common events
Each event is given a name that represents the corresponding action. Ex: The event name for a
mouse movement is , and the event name for a key down is
I PARTICIPATION I n
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
110 of 159 2024-10-12, 4:47 p.m.
I ACTIVITY I
4.9.3: Mouse and keyboard events.
If unable to drag and drop, refresh the page.
mouseout keyup mouseover mousemove click keydown
Caused by a mouse click.
Caused by mouse entering the area
defined by an HTML element.
Caused by mouse exiting the area
defined by an HTML element.
Caused by mouse moving within
the area defined by an HTML
element.
Caused by the user pushing down a
key on the keyboard.
Caused by the user releasing a key
on the keyboard.
Reset
The following are events for which web developers commonly write handlers:
• A change event is caused by an element value being modified. Ex: Selecting an item in a radio
button group causes a change event.
• An input event is caused when the value of an input or textarea element is changed.
• A load event is caused when the browser completes loading a resource and dependent
resources. Usually load is used with the body element to execute code once all the webpage's
CSS, JavaScript, images, etc. have finished loading.
• A DOMContentLoaded event is caused when the HTML file has been loaded and parsed,
although other related resources such as CSS, JavaScript, and image files may not yet be
loaded.
• A focus event is caused when an element becomes the current receiver of keyboard input. Ex:
Clicking in an input field causes a focus event.
<button onclick="clickHandler()">Click Me</button>
onclick
onmousemove
document.querySelector("#myButton").onclick = clickHandler
onclick
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
111 of 159 2024-10-12, 4:47 p.m.
• A blur event is caused when an element loses focus and the element will no longer receive
future keyboard input.
• A submit event is caused when the user submits a form to the web server. I PARTICIPATION I ACTIVITY 4.9.4: Common browser events.
1) A submit event occurs when any
button is clicked.
0 True
0 False
2) A blur event occurs when the mouse
is moved over another input element.
0 True
0 False
3) The DOMContentLoaded event is
likely to occur before the load event.
0 True
0 Fal se
Registering event handlers
Handlers are written in three ways:
1. Embedding the handler as part of the HTML. Ex:
□
0
0
0
handler for the button element by using the
sets the click event
attribute. The attribute name used to
register the handler adds the prefix "on" to the event name. Ex: The attribute for a mousemove
event is . Embedding a handler in HTML mixes content and functionality and
thus should be avoided whenever possible.
2. Setting the DOM node event handler property directly using JavaScript. Ex:
_ ..'...::.. = ~ ::: :_::.--_ =~2. : ::::- sets the
click event handler for the element with an id of "myButton" by overwriting the
JavaScript property. Using DOM node properties is better than embedding handlers within the
HTML but has the disadvantage that setting the property only allows one handler for that
element to be registered.
3. Using the JavaScript addEventListener() method to register an event handler for a DOM
object. Ex:
document.querySelector("#myButton").addEventListener("click", clickHandler)
addEventListener()
addEventListener()
keyupHandler() event.target
this
event.target this
DOMContentLoaded", loadedHandler);
("#name");
keyupHandler);
"!");
Name? P a zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
112 of 159 2024-10-12, 4:47 p.m.
registers a click event handler for the element with the id "myButton". Good practice is to use
the method whenever possible, rather than using element attributes
or overwriting JavaScript properties. The method allows for
separation of content and functionality and allows multiple handlers to be registered with an
element for the same event.
Every handler has an optional event object parameter that provides details of the event. Ex: For a
keyup event, the event object indicates which key was pressed and released, or for a click event,
which element was clicked.
In the animation below, uses
where the keyup event occurred. Inside an event handler, the
which the handler is attached. So and
to access the text box object
keyword refers to the element to
both refer to the text box object in the
event handler. I =~~~~~;~•110" I 4.9.5 Registering event handlers with addEventlistenerQ.
< !DOCTYPE html >
<html>
<title>Keyup Demo</ title>
<script>
wi ndow . addEventLi stener ( "DOMContentLoaded" , l oadedHandle r ) ;
funct i on l oadedHandl er () {
l et textBox = document . querySelector ( " #name " ) ;
textBox . addEventLi stener ( " keyup " , keyupHandl er ) ;
function keyupHandl er (event ) {
i f (event . key == "Enter " ) {
l et textBox = event . target ;
a l ert ( "Hello , " + textBox . va l ue + " ! " ) ;
</script>
<body>
<label for=" id" >Name? </label>
<input type=" text " i d=" name ">
</body>
</html>
Animation content:
The following HTML is displayed:
□
[ Pa m [ENTER]
Hello, Pam!
OK
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
113 of 159 2024-10-12, 4:47 p.m.
<!DOCTYPE html>
<html>
<title>Keypress Demo</title>
<script>
window.addEventlistener("DOMContentloaded", loadedHandler);
function loadedHandler() {
let textBox = document.querySelector("#name");
textBox.addEventlistener("keypress", keyupHandler);
}
function keyupHandler(event) {
if (event.key== "Enter") {
}
}
let textBox = event.target;
alert("Hello, "+ textBox.value + "!");
</script>
<body>
<label for="id">Name?</label>
<input type="text" id="name">
</body>
</html>
An input box labeled "Name?" is displayed on the browser.
Step 7: The line of code reading "window.addEventlistener("DOMContentloaded",
loadedHandler);" is highlighted.
Step 2: The line of code reading "function loadedHandler()" is highlighted.
Step 3: The line of code reading "textBox.addEventlistener("keyup", keyupHandler);" is highlighted.
Step 4: "P" is entered in the "Name?" input box. The line of code reading "function
keypressHandler(event)" is highlighted.
Step 5: The code 'if (event.key== "Enter")' is highlighted and evaluated to false.
Step 6: "Pam" is entered in the "Name?" input box, and then the user presses enter. The code 'if
(event.key== "Enter")' is highlighted and evaluates to true.
"black"
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
114 of 159 2024-10-12, 4:47 p.m.
Step 7: The following lines of code are highlighted.
let textBox = event.target;
alert("Hello, "+ textBox.value + "!");
An alert dialog reading "Hello, Pam!", with a button reading "ok" is shown on the browser.
Animation captions:
1. The window's addEventlistener() method registers the handler loadedHandler() for the
DOMContentloaded event.
2. After the rest of the HTML is loaded and parsed, the DOMContentloaded event occurs, and
loadedHandler() is called.
3. The text box's addEventlistener() method registers the handler keyupHandler() for the
keyup event.
4. When the user types the first letter, a keyup event occurs, which results in keyupHandler()
being called.
5. The event.key is a string representing the pressed key ("P" for key P).
6. Each keyup causes keyupHandler() to execute. When the user presses Enter, event.key is
"Enter", and the if statement is true.
7. event.target is the text box object that caused the keyup event. An alert dialog displays
"Hello, Pam!"
I PARTICIPATION I 4 g 6 R . . h di • ddE L. () ACTIVITY .. : egIstering event an er using a vent Istener .
The JavaScript code registers mouseover and mouseout event handlers for all elements
that use the highlight class. Create and register a JavaScript event handler called
myClickHandler () to handle click events for the same elements. The
myClickHandler () function should reveal the hidden text by changing the
style. color of the event. target to blac
[ HTML [ JavaScript I CSS
□
Challenge your knowledge about eventdriven
programming by guessing the text that
is missing from each sentence below. Click
the missing text to reveal the answer.
Event handlers are also known as
, because the
handlers are "called back" when the
appropriate event happens.
Event-driven programming allows
webpages to react to and
.
zyBooks
115 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
~[body>
<p>
3
4
5
Challenge your knowledge about event-driven programming by guessine
each sentence below. Click the missing text to reveal the answer.
</p>
6 <ul>
7 <li>
8 Event handlers are also known as
9 <span class="highlight hide" >callback functions </span> ,
10
11
because the handlers are "called back" when the appropriate ever
</li>
12 <li>
13
14
15
Event-driven programming allows webpages to react to
<span class="highlight hide" >user actions </span> and
<span class="highlight hide" >web server actions </span> .
16
17
1s:l
</li>
</ul>
✓ /hnM
Render webpage Reset code
Your webpage
Challenge your knowledge about eventdriven
programming by guessing the text that
is missing from each sentence below. Click
the missing text to reveal the answer.
• Event handlers are also known as
[:::::::::::::::::::::::::::::, because the
handlers are "called back" when the
appropriate event happens.
• Event-driven programming allows
~~~p~g~-~-~~--~~-1:l-~~-!o [::::::::::::::::::: and
► View solution
Expected webpage
eventdriven
• [::::::::::::::::::::::::::::], because the
• webpages to react to r··---------------·; and
r••••••-••••••••••••••••••••••i L •••••••••••••••••• J
'' ''
L •••••••••••••..•••.••••••.••• J
I PARTICIPATION I . . ACTIVITY 4.9.7: Registering event handlers.
Refer to the HTML below.
□
2024-10-12, 4:47 p.m.
<body>
<h1>Calculator</h1>
<p>
<input type="text" id="num1" size="5">
<input type="text" id="num2" size="5">
<span id="result"></span>
</p>
<input type="button" value="Add" id="addBtn">
</body>
loadedHandler()
window.addEventListener("______",
loadedHandler);
addNumbers()
function loadedHandler() {
let addBtn =
document.querySelector("#addBtn");
addBtn.addEventListener("click",
_______);
}
function addNumbers() {
let num1 = parseFloat(
document.querySelector("#num1").value);
let num2 = parseFloat(
document.querySelector("#num2").value);
document.querySelector("#result").innerHTML
= num1 + num2;
}
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
116 of 159 2024-10-12, 4:47 p.m.
1) What event registers
to be executed after
the HTML has been loaded and parsed?
0 click
0 DOMContentloaded
0 ready
2) What is missing to register the
function as a click event handler?
0 addNumbers()
0 addNumbers(1, 2)
0 addNumbers
0
0
function loadedHandler() {
let addBtn =
document.querySelector("#addBtn");
addBtn.addEventListener("click",
_______);
}
highlightField()
highlightField()
function
highlightField(______) {
if
(event.target.style.background
== "yellow") {
event.target.style.background
= "white";
}
else {
event.target.style.background
= "yellow";
}
}
highlightField()
textBox
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
117 of 159 2024-10-12, 4:47 p.m.
3) What code registers an anonymous
function as a click event handler for the
add button?
0 function addNumbers() { ... }
0 function() { .. . }
0 function { ... }
4) The function is
an event handler for the mouseover
and mouseout events. What
parameter is
missing?
0 event
0 field
0 color
5) What parameter is
missing to change the
color to yellow?
background
0
0
0
,
addEventListener()
false
true
3 biggest meteor strikes on Earth:
1. Vredefort Dome, South Africa
2. Chicxulub Crater, Mexico
3. Sudbury Basin, Ontario, Canada
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
118 of 159 2024-10-12, 4:47 p.m.
textBox . addEve nt Li stene r ("mouseover" ,
hi ghli gh t Fie l d );
function hi ghligh t Fie l d () {
. s t yl e . backgr ound = "yellow" ;
0 event.target
0 event
0 this
Capturing, at target, and bubbling phases
When an event occurs, the browser follows a simple DOM traversal process to determine which
handlers are relevant and need to be called. The DOM traversal process has three phases:
capturing, at target, and bubbling.
1. In the event capturing phase, the browser traverses the DOM tree from the root to the event
target node, at each node calling any event-specific handlers that were explicitly registered for
activation during the capturing phase.
2. In the at target phase, the browser calls all event-specific handlers registered on the target
node.
3. In the event bubbling phase, the browser traverses the DOM tree from the event target node
back to the root node, at each node calling all event-specific handlers registered for the
bubbling phase on the current node.
The optional third parameter for the method indicates whether the
handler is registered for the capturing phase or bubbling phase. If the third parameter is or
not specified, or if the event handler is registered using any other mechanism, the browser registers
the handler for the event bubbling phase. If the parameter is , the browser registers the
handler for the capturing phase.
Some events do not bubble, such as blur, focus, and change. When a non-bubbling event occurs,
the browser will follow the event capturing phase, the at target phase, and then stop.
I PARTICIPATION I . . ACTIVITY 4.9.8: Capturing and bubbling.
< !DOCTYPE html>
<html>
<title>Meteors</title>
<script src="meteors.js" defer></ script>
<body>
□
<p>3 biggest meteor strikes on Earth:</p>
<ol id="strikeList">
<li>Vredefort Dome, South Africa</li>
<li>Chicxulub Crater, Mexico</li>
<li>Sudbury Basin, Ontario, Canada</li>
</ol>
</body>
</html>
// Register handler for event bubbling phase
list.addEventListener("mouseover", function(e) {
e.target.style.color = "red";
});
// Register handler for event capturing phase
list.addEventListener("mouseout", function(e) {
e.target.style.color = "black";
}, true);
Dome... Crater... Basin...
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
119 of 159 2024-10-12, 4:47 p.m.
Animation content:
The following HTML is displayed:
<!DOCTYPE html>
<html>
<title>Meteors</title>
<script src="meteors.js" defer></script>
<body>
<p>3 biggest meteor strikes on Earth:</p>
<ol id="strikelist">
<li>Vredefort Dome, South Africa</li>
<li>Chicxulub Crater, Mexico</li>
<li>Sudbury Basin, Ontario, Canada</li>
</ol>
</body>
</html>
The following JavaScript is displayed:
list = document.getElementByld("strikelist");
// Register handler for event bubbling phase
list.addEventlistener("mouseover", function( e) {
e.target.style.color = "red";
});
l l __ J l __ J l J _____)
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
120 of 159 2024-10-12, 4:47 p.m.
// Register handler for event capturing phase
list.addEventlistener("mouseout", function( e) {
e.target.style.color = "black";
}, true);
The browser displays the following text.
3 biggest meteor strikes on Earth:
1. Vredefort Dome, South Africa
2. Chicxulub Crater, Mexico
3. Sudbury Basin, Ontario, Canada
A tree is shown. The head node is labeled "html", and is connected to a node labeled "body". The
"body" node is connected to a node labeled "p" and a node labeled "ol". Attached to the "p" node is
a text node labeled "3 biggest. .. ". Attached to the "ol" node are three "Ii" nodes, each with their own
children which contain text in the above list.
Step 1: The mouse hovers over the first list item.
Step 2: The DOM tree is traversed, and the "ol" node is highlighted.
Step 3: The "Ii" node corresponding to the first element in the list is highlighted.
Step 4: The "ol" node is highlighted once more. "phase: bubbling" is displayed beside the tree. The
mouseover event handler is highlighted. The first item in the list turns red. The tree is traversed
back up to the "html" node.
Step 5: The mouse moves off the first list item. "Phase: capturing" is displayed beside the tree.
The "ol" node is highlighted, and then the mouseout event handler is highlighted. The first list item
turns black.
Step 6: "phase: at target" is displayed next to the tree, and the Ii node corresponding to the first list
item is highlighted.
Step 7: "phase: bubbling" is displayed next to the tree. The tree's nodes are traversed back up to
the "html" node.
Animation captions:
1. The user moves the mouse cursor over the list's first item. A mouseover event occurs with
the first Ii node as the target node.
2. Event capturing phase traverses the DOM tree from the root to the event target node. No
capturing handlers are registered for the mouseover event.
"div1");
"div2");
"div3");
(){ alert("Capture 1"); }, true);
(){ alert("Capture 2"); }, true);
(){ alert("Capture 3"); }, true);
(){ alert("Bubble 1"); });
(){ alert("Bubble 3"); });
div1
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
121 of 159 2024-10-12, 4:47 p.m.
3. At target phase looks for mouseover event handlers registered on the target node, but no
mouseover handlers are registered for the first Ii node.
4. Event bubbling traverses DOM tree from the event node back to the root node. The ol node's
bubbling event handler is called and changes the item's text to red.
5. A mouseout event occurs targeting the first Ii node. Event capturing phase traverses the
DOM tree from the root to event target node. The mouseout event handler turns the list
item black.
6. The at target phase looks for relevant mouseout event handlers registered on the target
node, but no mouseout handlers are registered for the first Ii node.
7. The event bubbling phase looks for any relevant mouseout event handlers by moving up the
DOM tree, but no elements have mouseout handlers registered for the bubbling phase.
I PARTICIPATION I . . ACTIVITY 4.9.9: Capturing and bubbling.
Given the HTML and JavaScript below, match the order of alerts to the action performed
by the user.
<div id="divl">
<div id="div2">
<div id= "div3">
</div>
</div>
</div>
let d i v l
let d i v2
let d i v3
document . getElement By i d ("div
document . getElement By i d ("div
document . getElement By i d ("div
d i v l . addEvent Li stener ("click" , function
d i v2 . addEvent Li stener ("click" , function
d i v3 . addEvent Li stene r ("click" , function
d i v l . addEvent Li stener ("click" , function
d i v3 . addEvent Li stener ("click" , function
If unable to drag and drop, refresh the page.
Capture 1, Capture 2, Bubble 1 Capture 1, Bubble 1
Capture 1, Capture 2, Capture 3, Bubble 3, Bubble 1
User clicks on div with id.
□
div2
div3
stopPropagation()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
122 of 159 2024-10-12, 4:47 p.m.
User clicks on div with id.
User clicks on div with id.
Reset
I PARTICIPATION I . . ACTIVITY 4.9.10: Bubbling and capturing.
1) The web browser performs the event
capturing process before the bubbling
process.
0 True
0 False
2) If a web developer creates a "default"
handler for a DOM node high in the
tree and a more specific handler for a
DOM node lower in the tree, the web
browser will run both handlers for an
event.
0 True
0 False
3) Bubbling is the preferred process for
the web browser to find appropriate
handlers for an event.
0 True
0 False
Preventing default behavior
□
0
0
0
The event capturing and bubbling process can be stopped by calling the stopPropagation() method
on the event object provided to the handler. Once i n n < l is called, the browser
stops the traversal process but still calls relevant registered handlers on the current node.
A web developer may want to prevent the browser from using a built-in handler for an event. Ex:
Whenever a user clicks a form's submit button, the web browser sends the form data to the web
server. The event object's preventDefault() method stops the web browser from performing the
built-in handler. The built-in handlers that are often prevented are clicking elements, submitting
preventSpaces()
event. preventDefault()
checkPassword()
checkPassword() <span>
zyBooks
123 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
forms, and moving the mouse into or out of an element.
The example below uses two event handlers for the password textbox:
1. prevent Spaces () is a keydown event handler that listens for key presses. If the space key
is pressed, preventDefaul t () stops the space from appearing in the textbox.
2. checkPassword () is an input event handler that is called when the password input
changes. checkPassword () displays Weak, Stronger, Moderate, or Strong in the element depending on various criteria for the password.
Testing password strength.
Start typing a password. Verify the message to the right of the widget changes as tr
improved:
• abc -Weak
• abc1 - Stronger
• abc1 D - Moderate
• abc1 De - Strong
1 <label for="password" >Password: </ label>
2 <input type="text" id="password">
3 <span id="strength" ></span>
4
Render webpage
Reset code
[ HTML I JavaScript j
2024-10-12, 4:47 p.m.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
124 of 159 2024-10-12, 4:47 p.m.
Your webpage
Password:
I PARTICIPATION I . . ACTIVITY 4.9.11 : Preventing default behavior.
1) A web developer cannot prevent the
web browser from performing built-in
handlers.
0 True
0 False
2) If a web developer creates a "default"
handler for a DOM node high in the
tree and a more specific handler for a
DOM node lower in the tree,
stopPropagation () can be called
in the more specific handler to keep
the browser from calling the default
handler.
0 True
0 False
3) In the example above, a user may
press a space in the password
textbox, but the space does not
appear.
0 True
□
0
0
0
zyBooks
125 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
0 False
4) In the example above,
checkPassword () prevents the
built-in input handler from executing.
0 True
0 False
5) In the example above, the password
"qwerty1" causes the webpage to
display "Strong".
0 True
0 False
I CHALLENGE I . . ACTIVITY 4.9.1: Event-driven programming.
570104.2065416.qx3zqy7
Start
Register the textSize event handler to handle blur changes for the input element. Note:
The function counts the number of characters in the input.
HTML I JavaScript j
1 <label for=" userName" >User name: </ label>
2 <input id="userName" type="text" ><br>
3 <p id="stringlength" >0</p>
4
1 2 3
0
0
□
2024-10-12, 4:47 p.m.
zyBooks
126 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
Check Next
View your last submission v
Exploring further:
• Event reference from MDN
• EventTarget.addEventlistener()_ from MDN
• Event flow tutorial from Java2s
4.10 Modifying CSS with JavaScript
Modifying an element's inline style
JavaScript can manipulate a webpage's CSS to dynamically alter the looks of a webpage. Ex:
JavaScript can change a background color when a button is clicked, or change the visibility of an
error message when an input field is left blank. The CSS Object Model (CSSOM) is a set of AP ls
that allow JavaScript to manipulate CSS properties of a webpage.
Every element in the DOM has a style property that holds the inline styles set on the element. The
style object implements the CSSOM interface CSSStyleDeclaration, which provides methods for
accessing, modifying, and removing CSS properties:
• The getPropertyValue() method returns the value of an element's CSS property or an empty
string if the property is not set. Ex: elem. style. getPropertyVal ue ("co l or") gets the
element's color value.
• The setProperty() method sets the value of an element's CSS property. Ex:
elem. style. set Property (" col or", "blue") sets the element's color to blue.
• The removeProperty() method removes an element's CSS property. Ex:
elem. style. remove Property ("col or") removes the element's color property.
The style CSS properties can alternatively be accessed and modified using JavaScript property
names. Ex: elem. style. color = "blue" is equivalent to
elem. style. set Property ("col or", "blue"). CSS property names that have dashes are
converted into property names that use camel case. Ex: bac kground-col or becomes the
JavaScript property backgroundColo r .
2024-10-12, 4:47 p.m.
"100px; height: 100px;
color: green">
"mydiv");
"width");
"px");
"color", "red"); element.style
width
height
background-color
"100px"
"100px"
200px"
"red"
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
127 of 159 2024-10-12, 4:47 p.m.
I PARTICIPATION
ACTIVITY I 4.10.1: Modifying inline CSS style.
<div i d="mydiv" styl e ="width: l00px ; heigl
background- col or :
</ div>
l et myDi v = document . getEl ementByi d ("mydi,
l et wi dth = myDi v . styl e . getPropertyVal ue ('
wi dth = parsel nt (wi dth ) + 100 ;
myDi v . styl e . setProperty ("width" , wi dth + '
myDi v . style . setPropert y ("background-color'
myDi v . styl e . removeProperty ("width" );
Animation content:
Step 1: The following HTML is displayed:
<div id="mydiv" style="width: 1 00px; height: 1 00px;
background-color: green">
</div>
A green square is displayed on the browser.
Step 2: A list called element.style is created as follows.
width = 100 px
weight= 100 px
background-color= green
Step 3: The following JavaScript is displayed:
let myDiv = document.getElementByld("mydiv");
let width = myDiv.style.getPropertyValue("width");
width= parselnt(width) + 100;
myDiv.style.setProperty("width", width + "px");
myDiv.style.setProperty("background-color", "red");
myDiv.style.removeProperty("width");
□
"span");
getPropertyValue("color"));
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
128 of 159 2024-10-12, 4:47 p.m.
The line of code reading "let width = myDiv.style.getPropertyValue("width");" is highlighted and set
to the value of "1 00px".
Step 4: The following lines of code are highlighted.
width = parselnt(width) + 100;
myDiv.style.setProperty("width", width+ "px");
"width" is set to 200px, and the green square is expanded to be 200 pixels wide.
Step 5: The line of code reading "myDiv.style.setProperty("background-color", "red");" is
highlighted. "Background-color" is set to red, and the square changes color to red.
Step 6: The line of code reading "myDiv.style.removeProperty("width");" is highlighted. "width" is
removed from elementary.style, and the red square becomes as wide as the webpage.
Animation captions:
1. The inline style properties make the <div> a green 1 00px wide square.
2. The DOM maintains a list of the div's style properties and values.
3. The element.style.getPropertyValue() method returns the 1 00px width as a string.
4. 1 00px is added to width, and element.style.setProperty() sets the div's width to 200px. The
browser automatically renders the div with the new width.
5. Changing the div's background color to red automatically renders the div red.
6. removeProperty() removes the width property, so the <div> by default spans the entire
browser width .
I PARTICIPATION I 4 1 0 2 M d"f . . 1· I
ACTIVITY . . : 0 I ying In ine sty e.
Refer to the HTML and JavaScript below.
<span styl e ="color: green " >TEST</span>
<script>
l et span = document . querySelector ("span
</ script>
1) What does the code below output to the console?
consol e . l og (span . styl e . getPropertyVaJ
0 c o l or
□
0
green
rgb(0, 255, 0)
console.log(span.style.getPropertyValue("width"));
false
setProperty(backgroundstyle.
setProperty("backgrounddocument.
styleSheets
CSSStyleSheet
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
129 of 159 2024-10-12, 4:47 p.m.
0
0
2) What does the code below output to the console?
0 An empty string
0 The span's pixel width
0
3) What is needed to set the span's background
color?
span .
0 setProperty("backgroundcolor",
"lightblue")
0 style.setProperty(backgrounc
color, lightblue)
0 style.setProperty("backgrour
color", "lightblue")
4) What is equivalent to the following
code?
span . styl e . setProperty ("fontfamily
" , "Arial" );
0 span . style . font-family
= "Arial";
0 span.style.fontFamily
= "Arial";
0 span.style.fontfamily
= "Arial";
Modifying a stylesheet
0
0
0
The document.sty/eSheets object is a list of the stylesheets used in the webpage. Each stylesheet
in is a CSSSty/eSheet object, which maintains a list of the stylesheet's
CSS rules in the property called cssRules. Two methods allow CSS rules to be
added or removed:
document.styleSheets[0].insertRule("p { color: blue; }")
document.styleSheets[0].deleteRule(0)
style
CSSStyleDeclaration
getPropertyValue() setProperty()
removeProperty()
document.styleSheets[0].cssRules[0].style.setProperty("color", "blue")
cssRules
changeRule()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
130 of 159 2024-10-12, 4:47 p.m.
• The insertRu/e() method inserts a new rule into the stylesheet. Ex:
inserts a new
paragraph rule that makes the text color blue.
• The deleteRule() method deletes a rule at a given index number from the stylesheet. Ex:
deletes the first CSS rule from the first
stylesheet.
The CSS properties from a CSS rule are accessible from the rule's_-.,_ .:. property, which
implements the
modified, and removed with
. Ex:
interface. So a rule's CSS properties can be accessed,
, and
sets the stylesheet's first rule's color to blue.
Security issue
For security reasons, some browsers like Chrome restrict the property
from being accessed by JavaScript when the stylesheet is loaded off the computer's
disk. The JavaScript and stylesheet must be downloaded from a web server for
c ssRules to be accessible.
I PARTICIPATION I . ACTIVITY 4.10.3: Insert, modify, and delete CSS rules.
The webpage below displays a menu of food items with 3 buttons underneath:
1. Insert Rule button - Calls insertRule () to add a new paragraph rule that turns the
menu items' font color blue.
2. Change Rule button - Calls changeRule ( to change the paragraph rule's color to
red.
3. Delete Rule button - Calls deleteRule () to delete the paragraph rule, which turns
the font color back to green.
Click the three buttons in order to watch the font color change from green to blue, blue to
red, and finally back to green.
Make the following modifications:
1. Add code to insertRule () that inserts the rule
□
.{ weight: }
changeRule() .price
font-style italic
deleteRule() .price
Ham sandwich - $5
Spinach salad - $4.50
Insert Rule Change Rule Delete Rule
zyBooks
13lofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
.price { font-weight: bold; } so the prices appear bold.
2. Add code to changeRule () that changes the . pr ice rule to include the property
set to so the prices appear bold and italic.
3. Add code to deleteRule () that deletes the . rule so the font weight and
style returns to normal .
After making the modifications, click the 3 buttons in order to verify the price font changes
as expected.
1 <body'1>
2 <div id="menu" >
3 <hl>Menu</hl>
4 <p>
HTML CSS [ JavaScript j
5 Ham sandwich - <span class="price" >$5 </span>
6 </p>
7 <p>
8 Spinach salad - <span class="price" >$4.50</span>
9 </p>
10 <p>
11 Hamburger - <span class="price" >$5.50</span>
12 </p>
13 </div>
14
15 <p>
16 <button id="insertRuleBtn" >Insert Rule</ button>
17 <button id="changeRuleBtn" >Change Rule</ button>
1s:I ✓ h11++nn irl- "rlolo+oR11loR+n" , nolo+o R11lo,-/ h11++nn ,
Render webpage
Your webpage
Menu
Hamburger - $5.50
Reset code
[ ] [ ] [ ]
2024-10-12, 4:47 p.m.
"styles.css">
"www.brainyquote.com/quotes/
indecisive, but now I'm not sure."
Tommy Cooper</span>
sans-serif;
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
132 of 159 2024-10-12, 4:47 p.m.
► View solution
I PARTICIPATION I . . ACTIVITY 4.10.4: Modifying stylesheet rules.
Refer to the HTML and CSS below.
< !DOCTYPE HTML>
<html lang="en">
<head>
<title>Funny Quotes</title>
<link rel="stylesheet" href="styl
</head>
<body>
<blockquote cite="https://www.bra
tomrny_cooper 189072 ">
"I used to think I was indecis
- <span class="attribution" >To:
</blockquote>
</body>
</html>
/* styles.css */
body {
color : white ;
font - family : Arial , Helvetica , sans -
blockquote
background- color : darkgreen ;
width : 200px ;
padding : 15px;
border- radius : 5px ;
1) What is the value of
document.styleSheets.length?
0 0
0 1
0 2
2) If the webpage is modified with the
HTML below, what is the value of
document.styleSheets.length?
□
0
0
<link rel="stylesheet"
href="styles.css">
<style>
div { color: brown; }
</style>
document.styleSheets[0].cssRules.length
document.styleSheets[0].insertRule(".attribution
{ color: yellow; }");
body
document.styleSheets[0].deleteRule(0);
blockquote
let quoteRule =
document.styleSheets[0].cssRules[1];
quoteRule.style.setProperty("color",
"orange");
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
133 of 159 2024-10-12, 4:47 p.m.
0 0
0 1
0 2
3) What is the value of
?
0 0
0 1
0 2
4) What is the font color of 11Tommy Cooper11 after the code
below executes?
0 yellow
0 white
0 black
5) Assuming the first rule is , what is the
quote1s font color after the code below
executes?
0 yellow
0 white
0 black
6) Assuming the second rule is
what is the quote1s font color after the code
below executes?
0
0
0
0
<div class="account warning"> classList
classList
classList
elem.classList.add("mystyle") mystyle
classList
elem.classList.remove("mystyle") mystyle
classList
elem.classList.toggle("mystyle") mystyle
elem.className = "cat adopted" cat adopted
className
classList classList
className
isStrongPassword()
isStrongPassword() false
hidden
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
134 of 159 2024-10-12, 4:47 p.m.
0 orange
0 white
0 black
Adding and removing classes
Using the CSSOM to manipulate CSS properties and stylesheets is useful and sometimes
necessary, but mixing CSS with JavaScript code blurs the separation between a web application's
presentation and functionality. Good practice is to declare CSS classes that perform the styling and
use JavaScript to add and remove classes to and from DOM nodes as needed.
Every DOM node has a c/assList property that lists the classes assigned to the node. Ex: The div
node created from has a with items "account"
and "warning". Methods exist to add and remove items:
• The add() method adds a class to the node's . Ex:
adds the class to the element's list of
classes.
• The remove() method removes a class from the node's . Ex:
removes the class
list of classes.
from the element's
• The toggle() method adds the class to the node's if the class is not present. If
the class is already present, the class is removed. Ex:
toggles the class on or off.
A DOM node's class list can also be modified directly using the c/assName property, which is a
space-delimited list of the classes assigned to the node. Ex:
assigns the and classes to the element
and removes any previously assigned classes from the node. All classes assigned to
are also added to the node's . Adding and removing properties with is
often easier than using
I PARTICIPATION I ACTIVITY 4.10.5: Add and remove classes.
The webpage below asks the user to enter a strong password that meets 3 criteria. When
the user clicks the Submit button, the i s Stro nc is called with the
password entered.
• If the password does not meet all 3 criteria,
and an error message is displayed by removing the
returns
class from the error
□
isStrongPassword() true
hidden
submitBtnClick()
isStrongPassword() true error-textbox
isStrongPassword() false error-textbox
error
error
<li>
zyBooks
135 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
message.
• If the password meets all 3 criteria, isStrongPassword () returns and the
class is added to the error message to hide the error message.
Enter some passwords that cause the error message to be visible and then hidden. Ex:
Enter "abc" and press Submit to see the error message, then "abcdef1" to hide the error
message.
Modify the submi tBtnClick () function to do the following:
1. If isStrongPassword () returns true, then remove the textbox class
from the password text box.
2. If isStrongPassword () returns false, then add the textbox class to
the password text box.
After making the modifications, verify the password text box is highlighted in red only
when entering an invalid password.
For an extra challenge, add the class to the criteria that is violated when an invalid
password is entered. Ex: If the password is not long enough, add the class to the
first so the item becomes red.
1 <b od}'',C >
HTML CSS [ JavaScript j
2 <pe> Choose a strong password that meets the following criteria:
3 </pe>
4 <ob
5 <lie>At least 6 characters long. </lie>
6 <lie> Contains at least 1 digit. </lie>
7 <liC> Is not "passwordl" .</lb
8 </ob
9 <form e>
10 <label for=" password" e> Password: </ labeb
11 <i nput type="text" id="password" e>
12 <span class="error hidden" id="errorMsg" e> Invalid password </spane>
13 <dive>
14 <input type="button" id="submitBtn" value="Submit" e>
15 </dive>
16 </form e>
--:, 17 </bodv
1s:l
Render webpage
Reset code
2024-10-12, 4:47 p.m.
yellow; }
line-through; }
children's center</li>
Choose a strong password that meets the following criteria:
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
136 of 159 2024-10-12, 4:47 p.m.
Your webpage
followin!
1. At least 6 characters long.
2. Contains at least 1 digit.
3. Is not "password 1 ".
Password:
----------
[ Submit ]
► View solution
I PARTICIPATION I . . ACTIVITY 4.10.6: Adding and removing classes.
Refer to the HTML, CSS, and JavaScript below:
<style>
.important { backgr ound - col o r : ye llo
.complete { t ext-decor at i on : line - t h
</ style>
<body>
<p>
To - do li st :
</ p>
<ul>
<li>Study f o r hi story exam</ li>
<li>Get groceries f or d inner</ li>
<li>Volunteer at the child ren' s c
<li>Vacuum a nd d ust r oom</ li>
</ ul>
</ body>
□
// Add click callback to each <li>
const listItems = document.querySelectorAll("li");
for (let item of listItems) {
item.addEventListener("click", listItemClick);
}
listItemClick()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
137 of 159 2024-10-12, 4:47 p.m.
function l istitemCli ck (e )
II Get clicked <li>
let i tem = e . ta r get ;
Write the JavaScript code that is inserted into l:
requested operation.
1) Add the important class to the
clicked <li>.
Check Show answer
2) Remove the complete class from
the clicked <li>.
Check Show answer
3) Toggle the important class on the
clicked <li>.
Check Show answer
Exploring further:
to perform the
• An Introduction and Guide to the CSS Object Model (CSSOM)_ from css-tricks.com
• Using-..ctY-namic styling information from MDN
• Element.classlist from MDN
• Working with the new CSS Typed Object Model from Google
0
0
0
zyBooks
138 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
I ~~~,';;;~~•• I 4.10.1 Modifying CSS with JavaScript
5707 04.2065416 qx3zqy7
Start
Complete the JavaScript code to set the paragraph's inline style to use the 16px font size
and remove the paragraph's text transform property. SHOW EXPECTED
[ HTML I JavaScript j
1 <p id="helloMessage" style="font-size: 20px; text-transform: uppercase" >
2 Hello, Olympic contestants!
3 </p>
1 2 3
Check Next
View your last submission v
4.11 Form validation
Validating data in the web browser
□
Since data integrity is essential to most applications, many web forms require specific formats for
users to enter data. Ex: A credit card must contain 16 digits, a date cannot have a fifteenth month,
and only 50 valid names of states exist for the United States of America .
2024-10-12, 4:47 p.m.
Credit #:</"address"></"acceptTerms"
>
Credit Card #:
Address:
I accept the terms of sale:
Submit
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
139 of 159 2024-10-12, 4:47 p.m.
Data validation is checking input for correctness. While a web server must perform data validation
on submitted data, a better user experience occurs when the web browser performs the same data
validation before submitting. Any invalid data in the webpage can be immediately flagged as
needing modifications without waiting for the server to respond.
Data validation can either be performed while the user enters form data by adding a JavaScript
function as the change handler for the appropriate field, or immediately prior to submitting the
entire form by adding a function as the form's submit handler. I PARTICIPATION I . . . ACTIVITY 4.11.1 : Validating form input.
< ! DOCTYPE html>
<html>
<head>
<title>Purchase Form</title>
<script src=" validate . js" defer></script>
</head>
<body>
<form>
<label for =" cardNumber " >Credi t Card # : </label>
<input type=" text " name="cardNumber"
i d="cardNumber">
<label for =" address " >Address : </label>
<textarea name=" address " i d= "address "></ textarea>
<label for =" acceptTerms " >I accept the terms of
sa l e : </label>
<input type="checkbox" name="acceptTerms "
i d="acceptTerms ">
<input type=" submit" value=" Submit ">
</form>
</body>
</html>
Animation content:
The following code is displayed.
<!DOCTYPE html>
<html>
<title>Purchase Form</ title>
<script src="validate.js" defer></ script>
<body>
<form>
<label for="cardNumber">Credit Card #:</label>
<input type="text" name="cardNumber"
id="cardNumber">
□
I 12341234123412
123 Main St.
Anytown, KS 12345
0
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
140 of 159 2024-10-12, 4:47 p.m.
<label for="address">Address:</label>
<textarea name="address" id="address"></textarea>
<label for="acceptTerms">I accept the terms of
sale:</label>
<input type="checkbox" name="acceptTerms"
id="acceptTerms">
<input type="submit" value="Submit">
</form>
</body>
</html>
A web form contains an input box labeled "Credit Card#: " and "Address:". A checkbox is labeled
"I accept the terms of sale:" A button labeled "Submit" is at the bottom of the form.
Step 1: The line of code reading "<script src="validate.js" defer></script>" is highlighted.
Step 2: The user enters "12341234ABCD" into the "Credit Card#" field, and "123 Main St. Anytown,
KS 12345" into the "Address" field, but does not submit the form.
Step 3: The user presses the "Submit" button, and the "Credit Card#" and "I accept the terms of
sale" fields are highlighted in red.
Step 4: The user enters "1234123412341234" into the "Credit Card#" field, and checks the "I
accept the terms of sale" field before pressing the "Submit" button. All data is registered as valid.
Animation captions:
1. The webpage uses JavaScript in validate.js to validate the web form.
2. The user enters invalid form data and does not check the checkbox.
3. When the user clicks the submit button, the browser executes code in validate.js to validate
the form input and highlights invalid fields in red.
4. The user must correct the form data before the browser submits the form data to the web
server. After the user clicks the submit button again, the browser updates the page to
reflect that all data is valid.
IAP ACRTTIVICITIPYA TION I 4 .1 1 .2 : Id entI" f Y W hy t h e fiI e Id I•S i•n va lI"d .
1) Enter 5-digit ZIP code:
Iz1P
n Some input characters are not
□
0
value
length value
===
indexOf()
value
isNaN()
match()
value
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
141 of 159 2024-10-12, 4:47 p.m.
- digits.
0 The input field is empty.
0 The input is too long.
2) Enter 5-digit ZIP code:
1103
O Some input characters are not
digits.
0 The input field is empty.
0 The input length is incorrect.
3) Enter 5-digit ZIP code:
I 31M4N
O Some input characters are not
digits.
0 The input field is empty.
0 The input length is incorrect.
Validating form input with JavaScript
0
0
Each textual input element in an HTML document has a value attribute that is associated with the
user-entered text. The attribute can be used to validate user-entered text by checking
desired properties, such as:
• Checking for a specific length using the property on the
• Checking if entered text is a specific value using
• Checking if the text contains a specific value using the string
attribute
• Checking if the text is a number using
attribute
method on the
• Checking that text matches a desired pattern using a regular expression and the string
method
Drop-down menus also have a
option.
attribute that is associated with the user-selected menu
Checkboxes and radio buttons have a checked attribute that is a boolean value indicating whether
the user has chosen a particular checkbox or radio button. The checked attribute can be used to
ensure an input element is either checked or unchecked before form submission. Ex: Agreeing to a
website's terms of service.
I
Sale price:
<input type="text" id="salePrice">
<span id="errorMsg"></span>
let salePriceWidget = document.querySelector("#salePrice");
let errorMsg = document.querySelector("#errorMsg");
errorMsg.innerHTML = "";
if (salePriceWidget.value.length === 0) {
errorMsg.innerHTML = "Sale price is missing.";
}
else if (isNaN(salePriceWidget.value)) {
errorMsg.innerHTML = "Please enter a number.";
}
else {
let salePrice = parseFloat(salePriceWidget.value);
if (salePrice < 10 || salePrice > 1000) {
errorMsg.innerHTML = "Must be between $10 and $1000.";
}
}
9 Must be between $10 and $1000.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
142 of 159 2024-10-12, 4:47 p.m.
ACT1v1TY 4.11 .3: Validating the sale price. I PARTICIPATION I
Animation content:
HTML code:
<input type="text" id="salePrice">
<span id="errorMsg"></span>
JavaScript code:
let salePriceWidget = document.querySelector("#salePrice");
let errorMsg = document.querySelector("#errorMsg");
errorMsg.innerHTML = "'';
if (salePriceWidget.value.length === 0) {
errorMsg.innerHTML = "Sale price is missing.";
}
else if (isNaN(salePriceWidget.value)) {
errorMsg.innerHTML = "Please enter a number.";
}
een :i, ·1u ana :i,·1uuu.
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
143 of 159 2024-10-12, 4:47 p.m.
else {
let salePrice = parseFloat(salePriceWidget.value);
if (salePrice < 10 II salePrice > 1000) {
}
}
errorMsg.innerHTML = "Must be between $10 and $1000.";
Animation captions:
1. The user can enter a sale price into the input field. The span displays validation error
messages.
2. The JavaScript code validates the entered price. If nothing is entered, the code displays an
error message next to the text box.
3. If the input is "dog", the next if statement calls isNaN() to detect the invalid input and shows
an error message.
4. If the input is a number like 9, parseFloat() converts the "9" string into the number 9.
5. The if statement displays an error message when the price is not between $10 and $1000.
IAP ACRTTIVICITIPYA TION I 4 .1 1 .4 : Us i•n g J ava Sc ri•p t to va l"Id ate i•n put fiI e Id s.
1) What does the validation function
return for checkGrade ( "-5")?
function checkGrade (grade )
return grade . length > 0 &&
!isNaN (grade );
}
0 true
0 false
0 null
2) What does the validation function
return for checkGrade (" 95. 3")?
function checkGrade (grade ) {
return !isNaN (grade ) &&
grade >= 0 && grade <=
10 ;
0 true
0 false
□
0
0
preventDefault()
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
144 of 159 2024-10-12, 4:47 p.m.
3) What does the validation function
return for
checkTemperature("-40 11 )?
fun c ti on
che ckTemperature (temp ) {
return temp . length > 0 &&
isNaN (temp ) &&
temp >= 0 && temp <=
1000 ;
}
0 true
0 false
4) What does the validation function
return for
checkTemperature (" ")?
fun c ti on
che ckTemperature (temp )
return temp . length > 0 &&
isNaN (temp ) &&
temp >= 0 && temp <=
1000 ;
}
0 true
0 false
Validating form data upon submission
Validating form data using JavaScript that executes when the user submits the form can be
performed by:
1. Register a handler for the form's submit event that executes a validation function.
2. Within the validation function, inspect the form's input fields via the appropriate DOM
elements and element attributes.
0
0
3. If the form is invalid, call the method on the event to cancel the form
submission and prevent the form data from being sent to the server.
Figure 4.11.1: Ensuring a checkbox is selected before the form is
submitted.
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Terms of Service</title>
<script src="validate.js" defer></script>
</head>
<body>
<form id="tosForm" action="https://example.com" target="_blank"
method="POST">
<p>
<label for="tos">I agree to the terms of service:</label>
<input type="checkbox" id="tos">
querySelector("#tos");
// Cancel form submission tos not checked
"#tosForm");
checkForm);
checkForm()
style. backgroundColor Orange
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
145 of 159 2024-10-12, 4:47 p.m.
........ ,, +- -. .,,...,...., ,.. '
</ p>
<input type=" submit ">
< / form>
</ body>
</ html>
II validate . js
fun ction chec kFo rm (event )
let t o sWi dget = document . querySe l e c t
II Can cel f orm submissi on if t o s n o t
if (! tosWidget . c hecked) {
event . preventDefault ();
let tos Form = document . querySe l e c tor ("#
t o s Form . addEventListener ( " submi t " , c hec
IAP ACRTTIVICITIPYA TION I 4 .1 1 .5 : p ractI.c e va II' d ati.n g f orm pri.o r to su b mI.s sI.o n.
Complete the JavaScript checkForm () function so that
- ~'- \.., ......... .J.. '--4..1..1.J~
sets the input
style. backgroundColor to LightGreen for each field that passes the validation
check and sets the input field's backgr to if the validation
fails.
Validation rules:
• The screen name field must not be empty.
• The ZIP code field must be of length 5.
• The TOS field must contain "yes".
Note that some browsers will override the light green color with another color if the user
chooses an autofill option instead of typing a value.
□
zyBooks
146 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
HTML CSS [ JavaScript j
1 <fort!!] id="tosForm" action="https://wp.zybooks.com/form-viewer.php" method="
2 <label for="screenName" >Screen name: </ label>
3 <i nput
4 <label
5 <i nput
6 <label
7 <i nput
8 <i nput
9 <l'f~
10
type="text" id="screenName" name="screenName">
for="zip" >ZIP code: </ label>
type="text" id="zip" name="zip" placeholder="5-digit ZIP code" >
for="tos" >Type <strong>yes </strong> if you agree to the terms of
type="text" name="agreement" id="tos">
type="submit" value="Submit">
Render webpage Reset code
Your webpage Expected webpage
Screen name: Screen name:
ZIP code: ZIP code:
[ 5-digit ZIP code [ 5-digit ZIP code
Ty e yes if you agree to the terms of service: Type yes if you agree to the terms of service:
[ Submit ] [ Submit ]
► View solution
Validating each field as data is entered
Alternatively, form data can be validated as the user enters data in the form by:
1. For each field that should be validated:
2024-10-12, 4:47 p.m.
preventDefault()
></script>
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
147 of 159 2024-10-12, 4:47 p.m.
a. Register an input event handler for the field.
b. Create a global variable to track whether the field is currently valid. In most cases, this
global variable should be initialized to false since the form typically starts with the field
as invalid.
c. Modify the global variable as appropriate within the field's event handler.
2. Register a submit event handler for the form that verifies the global variables for each field
are true.
3. If one or more of the global variables are false, call the method on the
submit event to prevent the form from submitting to the server.
The example below uses a regular expression to verify the user enters five digits for the ZIP code.
Regular expressions are discussed in more detail elsewhere. The form does not submit unless the
ZIP is valid.
Figure 4.11.2: Checking a ZIP code field as the user updates the field.
< !DOCTYPE html>
<html l ang= "en" >
<head>
<meta charset="UTF- 8 ">
<title>Terms o f Servi ce</ title>
<script src="validate. js" defer><
</ head>
<body>
<form id= "tos Form">
<label for ="zip" >ZIP: </ label>
<input type="text" id= "zip">
<input type="submit">
< / form>
</ body>
</ html>
querySelector("#zip");
checkZipCode);
();
"#tosForm");
checkForm);
tosAgreeValid
tosAgreeValid
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
148 of 159 2024-10-12, 4:47 p.m.
II validate.js
let zipCodeValid = false ;
let zipCodeWidget = document . querySelec
zipCodeWidget . addEventListener ("input" ,
function checkZipCode () {
let regex = /A\d\d\d\d\d$/ ;
let zip = zipCodeWidget . value . trim ()
zipCodeValid = zip .match (regex );
let tosForm = document . querySelector ("#
tosForm . addEventListener ("submit" , chec
function checkForm (event ) {
if ( ! zipCodeValid) {
event . preventDefault ();
IAP ACRTTIVICITIPYA TION I 4 .1 1 .6 : p ractI.c e va II' d ati.n g f orm as d ata I•s entere d .
The JavaScript code defines three boolean variables that must all be true for the form to
submit: screenNameValid, zipCodeValid, and
handlers exist:
. Two input event
• The checkScreenName () function is called when the screen name changes and
assigns screenNameValid with true when the field is not empty.
• The checkZipCode () function is called when the ZIP code changes and assigns
zipCodeValid with true when the field contains five digits.
Both functions also make the input widget's background orange if the input is invalid.
Add a checkTosAgree () function that is called when the TOS agreement input
changes. The function should assign tosAgreE with true when the user enters
"yes". The function should also set the input widget's background to the default color if
"yes" is typed and orange for all other input.
HTML CSS I JavaScript j
□
zyBooks
149 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
1
2
~(form1 id="tosForm" action=" https: / /wp. zybooks. com/form-viewer. php" method="
<label for="screenName" >Screen name: </ label>
3
4
<i nput type="text" id="screenName" name="screenName">
<label for="zip" >ZIP code: </ label>
5
6
7
<i nput type="text" id="zip" name="zip" placeholder="5-digit ZIP code" >
<label for="tos" >Type <strong>yes </strong> if you agree to the terms of
<i nput type="text" name="agreement" id="tos">
8 <i nput type="submit" id="validate" value="Submit">
9 </[form~
10
Render webpage Reset code
Your webpage Expected webpage
Screen name: Screen name:
ZIP code: ZIP code:
[ 5-digit ZIP code [ 5-digit ZIP code
ou agree to the terms of service: ou agree to the terms of service:
,--<-~~- ~ - ~ -----
[ Submit ] [ Submit ]
► View solution
Using HTML form validation
Some HTML form elements and attributes enable the browser to do form validation automatically,
which reduces the need for JavaScript validation.
Note
2024-10-12, 4:47 p.m.
"5" max="120">
required>
"password" minlength="10" maxlength="16">
pattern="^\d{16}$" title="exactly 16
required
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
150 of 159 2024-10-12, 4:47 p.m.
A browser that does not support a particular HTML input element will transform an
unsupported element into a text input, which then requires JavaScript to validate the
form data.
Some customized HTML input elements can only contain valid values, such as date or color.
Customized elements are automatically checked by the browser and/or filled in by a pop-up input
picker in the browser, ensuring the submitted value matches a common specification.
Various element attributes allow the browser to do validation without using JavaScript:
• The required attribute indicates that the field must have a value (text or selection) prior to
submitting the form.
• The max and min attributes indicate the maximum and minimum values respectively that can
be entered in an input field with ranges, such as a date or number.
• The maxlength and minlength attributes indicate the maximum and minimum length of input
allowed by an input field.
• The pattern attribute provides a regular expression that valid input must match.
• The title attribute can be used to provide a description of valid input when using the pattern
attribute.
Figure 4.11 .3: Using HTML form validation.
<form>
<input type="range" name="age" min="S
<input type="checkbox" name="agree" r
<input type="password" name="password
<input type="text" name="credit" patt
digits ">
<input type="submit">
</form>
Several CSS pseudo-classes exist to style input and form elements:
• The :valid pseudo-class is active on an element when the element meets all the stated
requirements in field attributes.
• The :invalid pseudo-class is active on an element when one or more of the attributes in the
field are not fully met.
• The :required pseudo-class is active on an element if the element has the
attribute set.
• The :optional pseudo-class is active on an element if the element does not have the
required
zyBooks
151 ofl59
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
attribute set.
I PARTICIPATION I . . ACTIVITY 4.11.7: Practice with CSS pseudo-classes.
The form below requires all three inputs to be supplied. A red rectangle appears around
the form, and the rectangle turns green once all three inputs are given valid values. No
JavaScript is used, only CSS pseudo-classes that are automatically applied by the
browser.
Make the following modifications:
1. Add the following CSS rule to make each input's background red when the input
contains invalid data:
input : invalid {
backgr ound - col o r : #ffdddd;
2. Add the following CSS rule to make each input's background green when the input
contains valid data:
input :valid {
backgr ound - col o r : #ddffdd;
Render the webpage and verify each input is red until valid data is input, then the input
turns green.
I HTML I css l
1 <form action="https://wp.zybooks.com/form-viewer.php" target="_blank" metho
2 <label for="dob" >Date of birth: </ label>
3 <input type="date" name="dob" id="dob" required>
4
5 <label for="creditCard" >Credit card number: </ label>
6 <input type="text" name="creditCard" id="creditCard" maxlength="16" patt
7 title="Exactly 16 digits" required>
8
9 <label for= "emailAddr" >Email address: </ label>
10 <i nput type="email" name="emailAddr" id="emailAddr" required>
11
12 <i nput type="submit">
13 </form1
14
□
2024-10-12, 4:47 p.m.
zyBooks
152 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
Render webpage Reset code
Your webpage Expected webpage
Date of birth: Date of birth:
I yyyy - mm - dd ~ I I yyyy - mm - dd ~
Credit card number: Credit card number:
Email address: Email address:
Submit Query I Submit Query I
► View solution
I PARTICIPATION I . . . ACTIVITY 4.11.8: Form val1dat1on questions. □
1) If all the fields in a form have been
validated before submitting the form
data to a server, does the server need
to repeat the field validation?
0 Yes
0 No
2) Is validating input fields as the user
fills in each field better than validating
the entire form after all the form data
has been entered?
0 Yes
0 No
3) If validation shows that a form input
value is invalid, should the input value
be reset to the initial value?
0 Yes
D
D
D
2024-10-12, 4:47 p.m.
zyBooks
153 of 159
https://leam.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c ...
0 No
4) Can web developers do all form data
validation using HTML input element
attributes and not use JavaScript
validation?
0 Yes
0 No
I CHALLENGE I . . ACTIVITY 4.11 .1: Form val1dat1on.
570104.2065416.qx3zqy7
Start
In the validateForm() function, the if statement verifies the username is at least 3
characters long. Display "Username is invalid" in the console log if the username does not
meet the requirement. Use the event method preventDefault() to avoid submitting the
form when the input is invalid. SHOW EXPECTED
HTML I JavaScript j
1 <form id=" userForm" action=" https: //learn. zybooks. com" method="POST" >
2 <p>
3 <label for="userName" >Username: </ label>
4 <i nput type="text" id="userName">
5 </p>
6 <p>
7 <label for="phoneNumber" >Phone number: </ label>
8 <input type="text" id="phoneNumber">
9 </p>
10 <i nput type="submit" id="submitBtn">
11 </form>
1 2 3 4 5
Check Next
View your last submission v
0
□
2024-10-12, 4:47 p.m.
fullName
email
password
passwordConfirm
submit
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
154 of 159 2024-10-12, 4:47 p.m.
Exploring further:
• Form data va lidation from MDN
4.12 Lab: User Registration and Validation
Create a webpage consisting of HTML (register.html), CSS (style.css), and JavaScript (register.js)
files that implement a user registration form with form validation.
The webpage styling should be close to the following. Note: Specific styles listed in the
requirements will be checked using automated tests, but a visual inspection may also be used to
check the overall style of the webpage.
User Registration
Full Name
[ Example Name
Email
[ valid@example.com
Password I ....
Confirm Password
• Password must be between 10 and 20 characters.
• Password must contain at least one lowercase character.
• Password must contain at least one uppercase character.
Register
1. User inputs elements: Define the following <input> elements using the specified IDs
o Text <input> element with ID and label "Full Name"
o Email <input> element with ID and label "Email"
o Password <input> element with ID and label "Password"
o Password <input> element with ID and label "Confirm Password"
o Submit <input> element with ID and value "Register"
formErrors
none
submit
block
display
none
/^[azA-
Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,5}$/
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
155 of 159 2024-10-12, 4:47 p.m.
o The default border for the text, email, and password <input> elements should be 1 pixel,
solid, with color #aaa
o Do not use a <form> element. Instead, use a <div> with class form
2. <div> for errors: Create a <div> with ID that will be used to display any
validation errors.
o Initially the <div> should not be displayed (i.e., the display style should be )
3. Form validation: Define a click event listener for the <input> element with ID .:; -~::,;-,·,~ • that
verifies the user provided information is valid.
o If there are form validation errors,
■ The form Errors <div> should be shown by setting display to
■ Each of the associated error messages should be displayed in the form Errors
<div> using an unordered list with red text. The error message must be displayed
in the order the validation is performed, following the order specified below.
■ Each <input> element with the invalid input should be styled with a 2 pixel, red,
sol id border.
■ Otherwise, the default border should be used (7 pixel, solid, with color #aaa)
o If there are no form validation errors,
■ The formErrors <div> should not be shown (i.e., the style should be
)
■ All text, email, and password <input> elements should use the default border of 1
pixel, solid, color #aaa
o Perform the following form validations in the order provided and display all error
messages that apply
■ Ensure a full name with a length greater than or equal to 1 was provided
■ Otherwise, display "Missing full name." Ensure that an email address was
provided and that the email address matches the regular expression:
■ Otherwise, display "Invalid or missing email address."
■ Ensure the password has 1 0 to 20 characters
■ Otherwise, display "Password must be between 10 and 20 characters."
■ Ensure the password contains at least one lowercase character
■ Otherwise, display "Password must contain at least one lowercase
character."
■ Ensure the password contains at least one uppercase character
■ Otherwise, display "Password must contain at least one uppercase
character."
■ Ensure the password contains at least one digit
■ Otherwise, display "Password must contain at least one digit."
■ Ensure the password and confirmation password match
■ Otherwise, display "Password and confirmation password don't match."
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
156 of 159 2024-10-12, 4:47 p.m.
570104.2065416.qx3zqy7 I ::C~IVITY I 4.12.1: Lab: User Registration and Validation
Submission Instructions
Downloadable files
70/10
regi s t e r.html , regi s ter.j s ,and s t yl e . css Download
Upload your files below by dragging and dropping into the area or choosing a file on your hard
drive.
register.html
style.css
Drag file here
or
Choose on hard drive.
Drag file here
or
Choose on hard drive.
Submit for grading
Coding trail of your work What is this?
10 / 7 M9,10 min:2
register.js
Drag file here
or
Choose on hard drive.
Latest submission - 3:47 PM MST on Submission passed
✓
10/07 /24 all tests
Total score: 10
/10
D Only show failing tests Download this submission
1 :Testing user input elements and form Errors div A
Testing user input elements and formErrors div
✓ At least 5 <input> tag exists
✓ <input> with ID fullName exists
1 / 1
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
157 of 159 2024-10-12, 4:47 p.m.
✓ <input> with ID fullName has type text
✓ <input> with ID email exists
✓ <input> with ID email has type email
✓ <input> with ID password exists
✓ <input> with ID password has type password
✓ <input> with ID passwordConflrm exists
✓ <input> with ID passwordConflrm has type password
✓ <input> with ID submit exists
✓ <input> with ID submit has type submit
✓ formErrors <div> exists.
✓ display of form Errors <div> tag
2:Testing validation : formErrors div with no input A
Testing validation: formErrors div with no input
✓ formErrors <div> exists.
✓ display of form Errors <div> tag
3:Unit test A
Testing validation: Error list contents with no input
✓ Number of <Ii> tags (error messages)
✓ Article content in <Ii> tag #0
✓ Article content in <Ii> tag #1
✓ Article content in <Ii> tag #2
✓ Article content in <Ii> tag #3
✓ Article content in <Ii> tag #4
✓ Article content in <Ii> tag #5
1 / 1
1 / 1
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
158 of 159 2024-10-12, 4:47 p.m.
4:Testing validation: Error list styling with no input A
Testing validation: Error list styling with no input
✓ Color for <Ii> tags is red
✓ Full name <input> border is 2px solid rgb(255, 0, 0).
5:Testing validation message: Invalid email only A
Testing validation message: Invalid email only
✓ Number of <Ii> tags (error messages) is 1
✓ Article content in <Ii> tag #0
6:Testing validation message: Short password A
Testing validation message: Short password
✓ Number of <Ii> tags (error messages) is 1
✓ Article content in <Ii> tag #0
7:Testing validation message: Long password A
Testing validation message: Long password
✓ Number of <Ii> tags (error messages) is 1
✓ Article content in <Ii> tag #0
1 / 1
1 / 1
1 / 1
1 / 1
8:Testing validation message: Password and confirm password do not match A 1 / 1
Testing validation message: Password and confirm password do not match
✓ Number of <Ii> tags (error messages) is 1
✓ Article content in <Ii> tag #0
9:Testing validation message: No lowercase or digit A
Testing validation message: No lowercase or digit
✓ Number of <Ii> tags (error messages) is 2
✓ Article content in <Ii> tag #0
1 / 1
zyBooks https://learn.zybooks.com/zybook/ARIZONAECE413SalehiFall2024/c...
159 of 159 2024-10-12, 4:47 p.m.
✓ Article content in <Ii> tag #1
1 0:Testing validation message: Invalid then valid A
Testing validation message: Invalid then valid
✓ Initial number of <Ii> tags (error messages) is 1
✓ display of form Errors <div> tag
✓ Password <input> border is 1 px solid rgb(170, 170, 170)
Previous submissions
3:46 PM on 10/7 /24 9 I 1 O View v
1 / 1